<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BindOpen.Extensions</name>
    </assembly>
    <members>
        <member name="T:BindOpen.Extensions.Connecting.BdoConnection">
            <summary>
            This class represents a connection.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Connecting.BdoConnection.Connector">
            <summary>
            The connector of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Connecting.BdoConnection.ConnectionString">
            <summary>
            The connection string of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Connecting.BdoConnection.ConnectionTimeout">
            <summary>
            The connection timeout of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Connecting.BdoConnection.State">
            <summary>
            The state of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnection.Connect(BindOpen.Logging.IBdoLog)">
            <summary>
            Connects this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnection.Disconnect(BindOpen.Logging.IBdoLog)">
            <summary>
            Disconnects this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnection.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
            <param name="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Extensions.Connecting.BdoConnector">
            <summary>
            This class represents a connector.
            </summary>
        </member>
        <member name="F:BindOpen.Extensions.Connecting.BdoConnector._scope">
            <summary>
            The scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnector.#ctor">
            <summary>
            Instantiates a new instance of the BdoConnector class.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Connecting.BdoConnector.ConnectionString">
            <summary>
            The connection string of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnector.WithConnectionString(System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Connecting.BdoConnector.ConnectionTimeOut">
            <summary>
            The connection string of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnector.WithConnectionTimeOut(System.Int32)">
            <summary>
            
            </summary>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnector.NewConnection(BindOpen.Logging.IBdoLog)">
            <summary>
            Creates a new connection.
            </summary>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnector.WithScope(BindOpen.Runtime.Scopes.IBdoScope)">
            <summary>
            Updates this instance considering the specified scope.
            </summary>
            <param name="scope">The scope to consider.</param>
            <returns>Returns the database builder.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnector.UsingConnection(System.Action{BindOpen.Extensions.Connecting.IBdoConnection},System.Boolean,BindOpen.Logging.IBdoLog)">
            <summary>
            Executes the specified function.
            </summary>
            <param name="action">The action using the created connection and the current log to consider.</param>
            <param name="isAutoConnected">Indicates whether the connection is automatically opened.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnector.UsingConnection(System.Action{BindOpen.Extensions.Connecting.IBdoConnection,BindOpen.Logging.IBdoLog},System.Boolean,BindOpen.Logging.IBdoLog)">
            <summary>
            Executes the specified function.
            </summary>
            <param name="action">The action using the created connection and the current log to consider.</param>
            <param name="log">The log to consider.</param>
            <param name="isAutoConnected">Indicates whether the connection is automatically opened.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.Connecting.BdoConnectorConfiguration">
            <summary>
            This class represents a connector configuration.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnectorConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the BdoConnectorConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnectorConfiguration.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BdoConnectorConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnectorConfiguration.GetConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnectorConfiguration.Add(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnectorConfiguration.WithItems(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnectorConfiguration.WithConnectionString(System.String)">
            <summary>
            Sets the connection string with the specified string.
            </summary>
            <param name="connectionString">The connection string to consider.</param>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnectorConfiguration.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>A cloned connector of this instance.</returns>
        </member>
        <member name="T:BindOpen.Extensions.Connecting.BdoConnectionExtension">
            <summary>
            This class represents a connector extension.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.BdoConnectionExtension.AsMeta(BindOpen.Extensions.Connecting.IBdoConnector,System.String)">
            <summary>
            Returns a data element representing this instance.
            </summary>
            <param name="connector">The connector to consider.</param>
            <param name="name">The name of the element to create.</param>
            <returns>Retuns the data element that represents this instace.</returns>
        </member>
        <member name="T:BindOpen.Extensions.Connecting.TBdoConnector`1">
            <summary>
            This class represents a connector.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`1.#ctor">
            <summary>
            Instantiates a new instance of the TBdoConnector class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`1.WithConnectionString(System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`1.WithConnectionTimeOut(System.Int32)">
            <summary>
            
            </summary>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`1.NewConnection(BindOpen.Logging.IBdoLog)">
            <summary>
            Creates a new connection.
            </summary>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`1.UsingConnection(System.Action{`0},System.Boolean,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="isAutoConnected"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`1.UsingConnection(System.Action{`0,BindOpen.Logging.IBdoLog},System.Boolean,BindOpen.Logging.IBdoLog)">
            <summary>
            Executes the specified function.
            </summary>
            <param name="action">The action using the created connection and the current log to consider.</param>
            <param name="isAutoConnected">Indicates whether the connection is automatically opened.</param>
            <param name="log">The log to consider.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.Connecting.TBdoConnector`2">
            <summary>
            This class represents a connector.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`2.#ctor">
            <summary>
            Instantiates a new instance of the TBdoConnector class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`2.WithConnectionString(System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`2.WithConnectionTimeOut(System.Int32)">
            <summary>
            
            </summary>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`2.NewConnection(BindOpen.Logging.IBdoLog)">
            <summary>
            Creates a new connection.
            </summary>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`2.WithScope(BindOpen.Runtime.Scopes.IBdoScope)">
            <summary>
            Updates this instance considering the specified scope.
            </summary>
            <param name="scope">The scope to consider.</param>
            <returns>Returns the database builder.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`2.UsingConnection(System.Action{`1},System.Boolean,BindOpen.Logging.IBdoLog)">
            <summary>
            Executes the specified function.
            </summary>
            <param name="action">The action using the created connection and the current log to consider.</param>
            <param name="isAutoConnected">Indicates whether the connection is automatically opened.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Connecting.TBdoConnector`2.UsingConnection(System.Action{`1,BindOpen.Logging.IBdoLog},System.Boolean,BindOpen.Logging.IBdoLog)">
            <summary>
            Executes the specified function.
            </summary>
            <param name="action">The action using the created connection and the current log to consider.</param>
            <param name="isAutoConnected">Indicates whether the connection is automatically opened.</param>
            <param name="log">The log to consider.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.BdoExt">
            <summary>
            This static class provides methods to create extension items.
            </summary>
            <summary>
            This static class provides methods to create extension items.
            </summary>
            <summary>
            This static class provides methods to create extension items.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.BdoExt.NewEntity``1(BindOpen.Extensions.Modeling.IBdoEntityConfiguration)">
            <summary>
            Creates the instance of the specified definition.
            </summary>
            <typeparam name="T">The connector class to return.</typeparam>
            <param name="config"></param>
            <returns>Returns the created connector.</returns>
        </member>
        <member name="M:BindOpen.Extensions.BdoExt.NewEntityConfig(System.String,BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Creates the instance of the specified configuration.
            </summary>
            <param name="definitionUniqueId">The unique ID of the definition to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.BdoExt.NewConnector``1(BindOpen.Extensions.Connecting.IBdoConnectorConfiguration)">
            <summary>
            Creates the instance of the specified definition.
            </summary>
            <typeparam name="T">The connector class to return.</typeparam>
            <param name="config"></param>
            <returns>Returns the created connector.</returns>
        </member>
        <member name="M:BindOpen.Extensions.BdoExt.NewConnectorConfig(System.String,BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Creates the instance of the specified configuration.
            </summary>
            <param name="definitionUniqueId">The unique ID of the definition to consider.</param>
            <param name="elements">The configuration elements of the definition to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.BdoExt.NewTask``1(BindOpen.Extensions.Processing.IBdoTaskConfiguration)">
            <summary>
            Creates the instance of the specified definition.
            </summary>
            <typeparam name="T">The task class to return.</typeparam>
            <param name="config"></param>
            <returns>Returns the created connector.</returns>
        </member>
        <member name="M:BindOpen.Extensions.BdoExt.NewTaskConfig(System.String,BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Creates the instance of the specified configuration.
            </summary>
            <param name="definitionUniqueId">The unique ID of the definition to consider.</param>
        </member>
        <member name="T:BindOpen.Extensions.Modeling.BdoEntity">
            <summary>
            This class represents a entity.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntity.#ctor">
            <summary>
            Instantiates a new instance of the BdoEntity class.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Modeling.BdoEntity.Path">
            <summary>
            Path of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Modeling.BdoEntity.RelativePath">
            <summary>
            The relative path of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntity.WithPath(System.String,System.String)">
            <summary>
            Sets the path of this instance.
            </summary>
            <param name="path">The new path to consider. Null to update the existing one.</param>
            <param name="relativePath">The new relative path to consider. Null to keep the existing one.</param>
            <returns>Returns True if this instance exists. False otherwise.</returns>
        </member>
        <member name="P:BindOpen.Extensions.Modeling.BdoEntity.CreationDate">
            <summary>
            The creation date of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntity.WithCreationDate(System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Modeling.BdoEntity.Flag">
            <summary>
            The information flag of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntity.WithFlag(System.String)">
            <summary>
            
            </summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Modeling.BdoEntity.IsReadonly">
            <summary>
            Indicates whether this instance is read only.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntity.AsReadonly(System.Boolean)">
            <summary>
            
            </summary>
            <param name="readOnly"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Modeling.BdoEntity.LastAccessDate">
            <summary>
            The date of last access of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntity.WithLastAccessDate(System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Modeling.BdoEntity.ParentPath">
            <summary>
            The parent path of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntity.WithParentPath(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Modeling.BdoEntity.LastWriteDate">
            <summary>
            The date of last write of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Extensions.Modeling.BdoEntityConfiguration">
            <summary>
            This class represents a entity configuration.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntityConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the BdoEntityConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntityConfiguration.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BdoEntityConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntityConfiguration.Add(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntityConfiguration.WithItems(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntityConfiguration.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="T:BindOpen.Extensions.Modeling.BdoEntityExtension">
            <summary>
            This class represents a entity extension.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.BdoEntityExtension.AsMeta(BindOpen.Extensions.Modeling.IBdoEntity,System.String)">
            <summary>
            Returns a data element representing this instance.
            </summary>
            <param name="entity">The entity to consider.</param>
            <param name="name">The name of the element to create.</param>
            <returns>Retuns the data element that represents this instace.</returns>
        </member>
        <member name="T:BindOpen.Extensions.Modeling.TBdoEntity`1">
            <summary>
            This class represents a entity.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.TBdoEntity`1.#ctor">
            <summary>
            Instantiates a new instance of the TBdoEntity class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.TBdoEntity`1.WithPath(System.String,System.String)">
            <summary>
            Sets the path of this instance.
            </summary>
            <param name="path">The new path to consider. Null to update the existing one.</param>
            <param name="relativePath">The new relative path to consider. Null to keep the existing one.</param>
            <returns>Returns True if this instance exists. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.TBdoEntity`1.WithParentPath(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.TBdoEntity`1.WithCreationDate(System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.TBdoEntity`1.WithFlag(System.String)">
            <summary>
            
            </summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.TBdoEntity`1.AsReadonly(System.Boolean)">
            <summary>
            
            </summary>
            <param name="readOnly"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.TBdoEntity`1.WithLastAccessDate(System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Modeling.TBdoEntity`1.WithLastWriteDate(System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.Processing.ResourceAllocation">
            <summary>
            This class represents an resource allocation.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.ResourceAllocation.#ctor">
            <summary>
            Instantiates a new instance of ResourceAllocation class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.ResourceAllocation.#ctor(System.String,System.String)">
            <summary>
            Instantiates a new instance of ResourceAllocation class.
            </summary>
            <param name="allocatedResourceId">Allocated resource ID to consider.</param>
            <param name="ownerId">The owner ID to consider.</param>
        </member>
        <member name="P:BindOpen.Extensions.Processing.ResourceAllocation.AllocatedResourceId">
            <summary>
            The allocated resource ID of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.ResourceAllocation.WithAllocatedResourceId(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Processing.ResourceAllocation.OwnerId">
            <summary>
            The owner ID of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.ResourceAllocation.WithOwnerId(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Processing.ResourceAllocation.Id">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.ResourceAllocation.WithId(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.Processing.BdoTask">
            <summary>
            This class represents an task.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTask.#ctor">
            <summary>
            Instantiates a new instance of the BdoTask class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTask.GetEntryObjectWithName(System.String,BindOpen.Runtime.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog,BindOpen.Runtime.Definition.TaskEntryKind[])">
            <summary>
            Gets the item object of the specified entry.
            </summary>
            <param name="name">The name of the entry to consider.</param>
            <param name="scope">The scope to consider.</param>
            <param name="varSet">The variable element set to use.</param>
            <param name="log">The log to populate.</param>
            <param name="taskEntryKinds">The kind end entries to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTask.IsCompatibleWith(BindOpen.Data.Elements.IBdoElementSpecSet,BindOpen.Runtime.Definition.TaskEntryKind)">
            <summary>
            Indicates whether this instance has compatible entries with the specified element collection.
            </summary>
            <param name="dataElementSpecSet">The set of element specifications to consider.</param>
            <param name="taskEntryKind">The task entry kind to consider.</param>
            <returns>True if this instance is compatible with the specified element collection.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTask.IsConfigurable(BindOpen.Data.SpecificationLevels)">
            <summary>
            Indicates whether this instance is configurable.
            </summary>
            <returns>True if this instance is configurable.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTask.UpdateAbsolutePaths(System.String)">
            <summary>
            Updates the relative paths of this instance.
            </summary>
            <param name="relativePath">The relative path to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTask.Execute(BindOpen.Runtime.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Data.RuntimeModes,BindOpen.Logging.IBdoLog)">
            <summary>
            Executes this instance.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="scope">The scope to consider.</param>
            <param name="varSet">The variable element set to use for execution.</param>
            <param name="runtimeMode">The runtime mode to consider.</param>
            <returns>Returns the output value of the execution.</returns>
        </member>
        <member name="T:BindOpen.Extensions.Processing.BdoTaskConfiguration">
            <summary>
            This class represents a task configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Processing.BdoTaskConfiguration.InputDetail">
            <summary>
            Input detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Processing.BdoTaskConfiguration.OutputDetail">
            <summary>
            Output detail of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the BdoTaskConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BdoTaskConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.Add(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.WithItems(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.AddInputs(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="inputs"></param>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.WithInputs(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="inputs"></param>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.AddOutputs(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="outputs"></param>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.WithOutputs(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="outputs"></param>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.GetEntries(BindOpen.Runtime.Definition.TaskEntryKind[])">
            <summary>
            Gets the specified entries.
            </summary>
            <param name="taskEntryKinds">The kind end entries to consider.</param>
            <returns>True if this instance is configurable.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.GetEntryWithName(System.String,BindOpen.Runtime.Definition.TaskEntryKind[])">
            <summary>
            Returns the entry of the specified kind with the specified unique name.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="taskEntryKinds">The kind end entries to consider.</param>
            <returns>Returns the input with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Processing.BdoTaskConfiguration.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
            <param name="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Extensions.Processing.TBdoTask`1">
            <summary>
            This class represents an task.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.TBdoTask`1.#ctor">
            <summary>
            Instantiates a new instance of the TBdoTask class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Processing.TBdoTask`1.UpdateAbsolutePaths(System.String)">
            <summary>
            Updates the relative paths of this instance.
            </summary>
            <param name="relativePath">The relative path to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Processing.TBdoTask`1.Execute(BindOpen.Runtime.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Data.RuntimeModes,BindOpen.Logging.IBdoLog)">
            <summary>
            Executes this instance.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="scope">The scope to consider.</param>
            <param name="varSet">The variable element set to use for execution.</param>
            <param name="runtimeMode">The runtime mode to consider.</param>
            <returns>Returns the output value of the execution.</returns>
        </member>
        <member name="T:BindOpen.Extensions.Scripting.BdoScriptHelper">
            <summary>
            This class represents a script format helper.
            </summary>
            <summary>
            This class represents a string parser.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptHelper.FormatScript(System.String,System.Int32)">
            <summary>
            Formats the specified script string considering the specified number of tabulations.
            </summary>
            <param name="script">The script to format.</param>
            <param name="tabulationNumber">The number of tabulations.</param>
            <returns>Returns the formated script.</returns>
        </member>
        <member name="F:BindOpen.Extensions.Scripting.BdoScriptHelper.Symbol_Var">
            <summary>
            The leading character of the variable.
            </summary>
        </member>
        <member name="F:BindOpen.Extensions.Scripting.BdoScriptHelper.Symbol_Fun">
            <summary>
            The leading character of the function.
            </summary>
        </member>
        <member name="F:BindOpen.Extensions.Scripting.BdoScriptHelper.SyntaxItems">
            <summary>
            The syntax items of this class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptHelper.GetValueFromScript(System.String)">
            <summary>
            Returns the string value from a text.
            </summary>
            <param name="text">The text from which the string value is retrieved.</param>
            <returns>The string value from a text</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptHelper.IndexOfFromScript(System.String,System.String,System.Int32)">
            <summary>
            Returns the position of stv in st from index taking in account the closing ponctuation (,{,[. 
            </summary>
            <param name="st">The string to parse.</param>
            <param name="stv">The string to look for.</param>
            <param name="indexDeb">The start index.</param>
            <returns>The position of the next stv into st from index position.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptHelper.LastIndexOfFromScript(System.String,System.String,System.Int32)">
            <summary>
            Returns the last position of stv in st from index taking in account the closing ponctuation (,{,[. 
            </summary>
            <param name="st">The string to parse.</param>
            <param name="stv">The string to look for.</param>
            <param name="indexDeb">The start index.</param>
            <returns>The position of the next stv into st from index position.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptHelper.FindScriptItems(System.String)">
            <summary>
            Returns the items that are in the specified script.
            </summary>
            <param name="script">The script to analyse.</param>
            <returns>The items that are in the specified script.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptHelper.GetScriptBlock(System.String,System.Int32)">
            <summary>
            Returns the first script block in the specified script from the specified index.
            </summary>
            <param name="script">The script to analyse.</param>
            <param name="index">The index position to begin analyse.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptHelper.GetWordDefinitions(BindOpen.Extensions.Scripting.IBdoScriptInterpreter,System.String,System.Int32,System.Boolean,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Gets the possible definitions corresponding to the specified script.
            </summary>
            <param name="scriptInterpreter">The script interpreter to consider.</param>
            <param name="script">The script to analyse.</param>
            <param name="index">The index position of the parent script word.</param>
            <param name="isSuggest">False if all the child script words of the parent must be returned.
            <param name="varSet">The variable element set to use.</param>
            True if only the child script words similar to the child script word present in the script
            must be returned.</param>
            <returns>Returns the possible child script word definitions.</returns>
        </member>
        <member name="T:BindOpen.Extensions.Scripting.BdoScriptInterpreter">
            <summary>
            This class represents a script interpreter. A script interpreter allows to interpret a script
            using script dictionnaries and data context, providing a log for the interpretation task.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.#ctor">
            <summary>
            Instantiates a new instance of the BdoScriptInterpreter class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.#ctor(BindOpen.Extensions.Scripting.IBdoScriptwordDefinition[])">
            <summary>
            Instantiates a new instance of the BdoScriptInterpreter class.
            </summary>
            <param name="definitions">The definitions to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.#ctor(BindOpen.Runtime.Scopes.IBdoScope)">
            <summary>
            Instantiates a new instance of the BdoScriptInterpreter class.
            </summary>
            <param name="scope">The application scope used to interprete.</param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.GetDefinitions">
            <summary>
            Gets the script word definitions of this instance.
            </summary>
            <returns>Returns the script word definitions of this instance.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.GetDefinitionsWithExactName(System.String,BindOpen.Extensions.Scripting.IBdoScriptwordDefinition)">
            <summary>
            Returns the word definitions with the specified name.
            </summary>
            <param name="name">The name of the script words to return.</param>
            <param name="parentDefinition">The parent definition.</param>
            <returns>The script words with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.GetDefinitionsWithApproximativeName(System.String,BindOpen.Extensions.Scripting.IBdoScriptwordDefinition)">
            <summary>
            Gets the word definitions approximatively with the specified name.
            </summary>
            <param name="name">The name of the script words to return.</param>
            <param name="parentDefinition">The parent definition.</param>
            <returns>The script words with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.Evaluate(BindOpen.Data.Items.IBdoExpression,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Evaluates the specified data exp.
            </summary>
            <param name="exp">The data exp to consider.</param>
            <param name="varSet">The variable element set to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>Literal or script value according to the specified default mode.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.Evaluate``1(BindOpen.Data.Items.IBdoExpression,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Evaluates the specified data exp.
            </summary>
            <param name="exp">The data exp to consider.</param>
            <param name="varSet">The variable element set to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>Literal or script value according to the specified default mode.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.Evaluate(System.String,BindOpen.Data.Items.BdoExpressionKind,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Evaluates the specified script using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param name="script">The script to consider.</param>
            <param name="expKind">The exp kind to consider.</param>
            <param name="varSet">The variable element set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.Evaluate``1(System.String,BindOpen.Data.Items.BdoExpressionKind,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Evaluates the specified script using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param name="script">The script to consider.</param>
            <param name="expKind">The exp kind to consider.</param>
            <param name="varSet">The variable element set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.Evaluate(BindOpen.Extensions.Scripting.IBdoScriptword,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Evaluates the specified script word using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param name="scriptword">The script word to consider.</param>
            <param name="varSet">The variable element set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.Evaluate``1(BindOpen.Extensions.Scripting.IBdoScriptword,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Evaluates the specified script word using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param name="scriptword">The script word to consider.</param>
            <param name="varSet">The variable element set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.FindNextScriptword(System.String,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param name="script"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.FindNextScriptword(System.String,BindOpen.Extensions.Scripting.IBdoScriptword,System.Int32@,System.Int32,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Finds the next script words at the specified index.
            </summary>
            <param name="script">The script to consider.</param>
            <param name="parentScriptword">The parent script word to consider.</param>
            <param name="index">The index to consider.</param>
            <param name="offsetIndex">The offset index to consider.</param>
            <param name="varSet">The variable element set to consider.</param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.IsWordMatching(BindOpen.Extensions.Scripting.IBdoScriptword,BindOpen.Extensions.Scripting.IBdoScriptwordDefinition)">
            <summary>
            Determines whether the specified script word corresponds to the specified definition.
            </summary>
            <param name="scriptword">The script word to consider.</param>
            <param name="definition">The script word definition to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptInterpreter.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
        </member>
        <member name="T:BindOpen.Extensions.Scripting.BdoScriptword">
            <summary>
            This class represents a script word.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.#ctor">
            <summary>
            Instantiates a new instance of the Scriptword class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.#ctor(BindOpen.Extensions.Scripting.ScriptItemKinds)">
            <summary>
            Instantiates a new instance of the Scriptword class.
            </summary>
            <param name="kind"></param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.op_Explicit(BindOpen.Extensions.Scripting.BdoScriptword)~System.String">
            <summary>
            Converts from word.
            </summary>
            <param name="word">The word to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.op_Addition(System.String,BindOpen.Extensions.Scripting.BdoScriptword)">
            <summary>
            
            </summary>
            <param name="st"></param>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.op_Addition(BindOpen.Extensions.Scripting.BdoScriptword,System.String)">
            <summary>
            
            </summary>
            <param name="st"></param>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptword.Kind">
            <summary>
            Kind of this instance.
            </summary>
            <example>Script word, syntax, text...</example>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptword.Parent">
            <summary>
            Parent of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.WithParent(BindOpen.Extensions.Scripting.IBdoScriptword)">
            <summary>
            
            </summary>
            <param name="scriptword"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptword.SubScriptword">
            <summary>
            Sub script words of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptword.Item">
            <summary>
            The item of this instance that is the result of interpretation.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptword.Parameters">
            <summary>
            Parameters of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.AddParameter(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.WithParameters(System.Object[])">
            <summary>
            
            </summary>
            <param name="objects"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.Root">
            <summary>
            Get the root script word of this instance.
            </summary>
            <returns>The root script word of this instance.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.Last">
            <summary>
            Gets the last target of this instance.
            </summary>
            <returns>Returns the last target of this instance.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>Retuns the string that represents this instance.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.ToString(System.Boolean)">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>Retuns the string that represents this instance.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptword.Name">
            <summary>
            Name of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptword.WithName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration">
            <summary>
            This class represents a script word configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration.WordKind">
            <summary>
            Kind of this instance.
            </summary>
            <example>Script word, syntax, text...</example>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration.SubScriptword">
            <summary>
            Sub script word of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the BdoScriptwordConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BdoScriptwordConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration.Add(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration.WithItems(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration.WithWordKind(BindOpen.Extensions.Scripting.ScriptItemKinds)">
            <summary>
            
            </summary>
            <param name="wordKind"></param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration.WithSubScriptword(BindOpen.Extensions.Scripting.IBdoScriptwordConfiguration)">
            <summary>
            
            </summary>
            <param name="scriptword"></param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordConfiguration.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="T:BindOpen.Extensions.Scripting.BdoScriptwordDomain">
            <summary>
            This class represents the script word area.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptwordDomain.Scope">
            <summary>
            The scope of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptwordDomain.ScriptVariableSet">
            <summary>
            The variable element set of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.BdoScriptwordDomain.Scriptword">
            <summary>
            The script word of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordDomain.#ctor(BindOpen.Runtime.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Extensions.Scripting.IBdoScriptword)">
            <summary>
            Initializes a new instance of the BdoScriptwordArea class.
            </summary>
            <param name="scope">The scope to consider.</param>
            <param name="varSet">The variable element set to consider.</param>
            <param name="scriptword">The script word to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordDomain.WithScope(BindOpen.Runtime.Scopes.IBdoScope)">
            <summary>
            
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordDomain.WithScriptVariableSet(BindOpen.Data.Elements.IBdoElementSet)">
            <summary>
            
            </summary>
            <param name="variableSet"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScriptwordDomain.WithScriptword(BindOpen.Extensions.Scripting.IBdoScriptword)">
            <summary>
            
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.Scripting.BdoScript">
            <summary>
            This static class provides methods to create script elements.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScript.CreateInterpreter(BindOpen.Extensions.Scripting.IBdoScriptwordDefinition[])">
            <summary>
            Creates a data element with specified items.
            </summary>
            <param name="definitions">The definitions to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScript.CreateInterpreter(BindOpen.Runtime.Scopes.IBdoScope)">
            <summary>
            Creates a data element with specified items.
            </summary>
            <param name="scope">The scope to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScript.CreateWord(System.String,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param name="script"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScript.Variable(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScript.Function(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.BdoScript.Function(BindOpen.Extensions.Scripting.BdoScriptword,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="word"></param>
            <param name="name"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.Scripting.ScriptItem">
            <summary>
            This class represents a script item.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.ScriptItem.#ctor">
            <summary>
            Instantiates a new instance of the ScriptItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.ScriptItem.#ctor(BindOpen.Extensions.Scripting.ScriptItemKinds,System.String,System.Int32)">
            <summary>
            Instantiates a new instance of the ScriptItem class.
            </summary>
            <param name="kind">The kind of the instance.</param>
            <param name="name">The name of the instance.</param>
            <param name="index">The index of the instance.</param>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.ScriptItem.Kind">
            <summary>
            Kind of this instance.
            </summary>
            <example>Script word, syntax, text...</example>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.ScriptItem.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.Scripting.ScriptItem.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Scripting.ScriptItem.WithName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.AssemblyHelper">
            <summary>
            This structure represents a string manager.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.AssemblyHelper.GetAsssembly(System.AppDomain,System.String)">
            <summary>
            Gets the specified assembly.
            </summary>
            <param name="appDomain">The application domain to consider.</param>
            <param name="assemblyName">The name of the assembly to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.AssemblyHelper.CreateInstance(System.Type,System.Object@,BindOpen.Logging.IBdoLog)">
            <summary>
            Creates the instance of the specified extension object instance type.
            </summary>
            <param name="type">The type to consider.</param>
            <param name="obj">The object to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.AssemblyHelper.CreateInstance(System.String,System.Object@,BindOpen.Logging.IBdoLog)">
            <summary>
            Creates the instance of the specified extension object instance type.
            </summary>
            <param name="fullyQualifiedName">The type fully qualified name to consider.</param>
            <param name="obj">The object to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.AssemblyHelper.GetClassNameWithoutAssembly(System.String)">
            <summary>
            Gets the root namespace.
            </summary>
            <param name="className">The class name to consider.</param>
            <returns>Returns the root namspace.</returns>
        </member>
        <member name="T:BindOpen.Extensions.TBdoExtensionItem`3">
            <summary>
            This class represents a BindOpen extension item configuration.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionItem`3.#ctor">
            <summary>
            Instantiates a new instance of the TBdoExtensionItem class.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.TBdoExtensionItem`3.Configuration">
            <summary>
            The configuration of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionItem`3.WithConfiguration(`1)">
            <summary>
            
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.TBdoExtensionItem`3.Definition">
            <summary>
            The definition of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionItem`3.WithDefinition(`0)">
            <summary>
            
            </summary>
            <param name="def"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Extensions.TBdoExtensionItem`3.Id">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionItem`3.WithId(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Extensions.TBdoExtensionItemConfiguration`1">
            <summary>
            This class represents a BindOpen extension item configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.TBdoExtensionItemConfiguration`1.Kind">
            <summary>
            The kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.TBdoExtensionItemConfiguration`1.DefinitionUniqueId">
            <summary>
            Definition unique ID of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Extensions.TBdoExtensionItemConfiguration`1.GroupId">
            <summary>
            The group of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionItemConfiguration`1.#ctor">
            <summary>
            Instantiates a new instance of the BdoExtensionItemConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionItemConfiguration`1.#ctor(BindOpen.Runtime.Definition.BdoExtensionItemKind,System.String,BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Instantiates a new instance of the BdoExtensionItemConfiguration class.
            </summary>
            <param name="kind">The kind to consider.</param>
            <param name="definitionUniqueId">The definition unique ID to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionItemConfiguration`1.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="T:BindOpen.Extensions.TBdoExtensionTitledItemConfiguration`1">
            <summary>
            This class represents a BindOpen extension titled item configuration.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionTitledItemConfiguration`1.#ctor">
            <summary>
            Instantiates a new instance of the TBdoExtensionTitledItemConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionTitledItemConfiguration`1.#ctor(BindOpen.Runtime.Definition.BdoExtensionItemKind,System.String)">
            <summary>
            Instantiates a new instance of the TBdoExtensionTitledItemConfiguration class.
            </summary>
            <param name="kind">The kind to consider.</param>
            <param name="definitionUniqueId">The definition unique ID to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.TBdoExtensionTitledItemConfiguration`1.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="P:BindOpen.Extensions.TBdoExtensionTitledItemConfiguration`1.Title">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
