<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BindOpen.System.Abstractions</name>
    </assembly>
    <members>
        <member name="T:BindOpen.System.Data.Assemblies.IBdoAssemblyReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Assemblies.IBdoAssemblyReference.AssemblyName">
            <summary>
            The library name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Assemblies.IBdoAssemblyReference.AssemblyVersion">
            <summary>
            The library version of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Assemblies.IBdoAssemblyReference.AssemblyFileName">
            <summary>
            The file name of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Assemblies.IBdoAssemblyReferenceCollection">
            <summary>
            This class represents a data reference.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Assemblies.IBdoAssemblyReferenceExtensions">
            <summary>
            This class represents a data element set.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Assemblies.IBdoAssemblyReferenceExtensions.WithFileName``1(``0,System.String)">
            <summary>
            
            </summary>
            <param key="assemblyFileName"></param>
        </member>
        <member name="T:BindOpen.System.Data.Assemblies.IBdoClassReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Assemblies.IBdoClassReference.ClassName">
            <summary>
            The library name of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Conditions.IBdoCompositeCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Conditions.IBdoCompositeCondition.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Conditions.IBdoCompositeCondition.Conditions">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Conditions.IBdoBasicCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Conditions.IBdoBasicCondition.Argument1">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Conditions.IBdoBasicCondition.Argument2">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Conditions.IBdoBasicCondition.Operator">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Conditions.IBdoCondition">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Conditions.IBdoConditional">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Conditions.IBdoExpressionCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Conditions.IBdoExpressionCondition.Reference">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Conditions.IBdoExpressionCondition.WithReference(BindOpen.System.Data.IBdoReference)">
            <summary>
            
            </summary>
            <param key="expression"></param>
        </member>
        <member name="T:BindOpen.System.Data.IBdoConditionalExtensions">
            <summary>
            This static class provides methods to handle conditions.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoConditionExtensions">
            <summary>
            This static class provides methods to handle conditions.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoConditionExtensions.Evaluate(BindOpen.System.Data.Conditions.IBdoCondition,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Evaluate this instance.
            </summary>
            <param key="condition">The condition to consider.</param>
            <param key="scriptInterpreter">Script interpreter.</param>
            <param key="varSet">The variable element set used to evaluate.</param>
            <returns>True if this instance is true.</returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoConditionExtensions.Evaluate(BindOpen.System.Data.Conditions.IBdoCondition,BindOpen.System.Scoping.Script.IBdoScriptInterpreter,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Evaluate this instance.
            </summary>
            <param key="condition">The condition to consider.</param>
            <param key="scriptInterpreter">Script interpreter.</param>
            <param key="varSet">The variable element set used to evaluate.</param>
            <returns>True if this instance is true.</returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoConditionExtensions.Evaluate(BindOpen.System.Data.Conditions.IBdoCompositeCondition,BindOpen.System.Scoping.Script.IBdoScriptInterpreter,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Evaluate this instance.
            </summary>
            <param key="condition">The condition to consider.</param>
            <param key="scriptInterpreter">Script interpreter.</param>
            <param key="varSet">The variable element set used to evaluate.</param>
            <returns>True if this instance is true.</returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoConditionExtensions.Evaluate(BindOpen.System.Data.Conditions.IBdoBasicCondition)">
            <summary>
            Evaluate this instance.
            </summary>
            <param key="condition">The condition to consider.</param>
            <param key="scriptInterpreter">Script interpreter.</param>
            <param key="varSet">The variable element set used to evaluate.</param>
            <returns>True if this instance is true.</returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoConditionExtensions.Evaluate(BindOpen.System.Data.Conditions.IBdoExpressionCondition,BindOpen.System.Scoping.Script.IBdoScriptInterpreter,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Evaluate this instance.
            </summary>
            <param key="condition">The condition to consider.</param>
            <param key="scriptInterpreter">Script interpreter.</param>
            <param key="varSet">The variable element set used to evaluate.</param>
            <returns>True if the business script value is the true value.</returns>
        </member>
        <member name="T:BindOpen.System.Data.Meta.BdoInputAttribute">
            <summary>
            This class represents a data element attribute.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.BdoInputAttribute.#ctor">
            <summary>
            Instantiates a new instance of the BdoInputAttribute class.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.BdoInputAttribute.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BdoInputAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.BdoOutputAttribute">
            <summary>
            This class represents a data element attribute.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.BdoOutputAttribute.#ctor">
            <summary>
            Instantiates a new instance of the BdoOutputAttribute class.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.BdoOutputAttribute.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BdoOutputAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.BdoParameterAttribute">
            <summary>
            This class represents a data element attribute.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.BdoParameterAttribute.#ctor">
            <summary>
            Instantiates a new instance of the BdoParameterAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.BdoPropertyAttribute">
            <summary>
            This class represents a data element attribute.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.Name">
            <summary>
            The name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.GroupId">
            <summary>
            The title of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.Title">
            <summary>
            The title of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.Description">
            <summary>
            The description of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.DataRequirement">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.DataRequirementExp">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.Requirement">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.RequirementExp">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.ValueType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.Alias">
            <summary>
            The alias of the entry.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.MinDataItemNumber">
            <summary>
            The minimum item number of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.MaxDataItemNumber">
            <summary>
            The maximum item number of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.BdoPropertyAttribute.SpecLevels">
            <summary>
            Levels of specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.BdoPropertyAttribute.#ctor">
            <summary>
            Instantiates a new instance of the BdoPropertyAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.BdoThisAttribute">
            <summary>
            This class represents a data element attribute.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.BdoThisAttribute.#ctor">
            <summary>
            Instantiates a new instance of the BdoThisAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoConfiguration">
            <summary>
            This interface defines a configuration.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoConfiguration.Add(BindOpen.System.Data.Meta.IBdoMetaData[])">
            <summary>
            
            </summary>
            <param key="items"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoConfiguration.With(BindOpen.System.Data.Meta.IBdoMetaData[])">
            <summary>
            
            </summary>
            <param key="items"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoConfigurationSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoConfigurationSetExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoConfigurationSetExtensions.Descendant(BindOpen.System.Data.Meta.IBdoConfigurationSet,System.String,System.Object[])">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoDefinition">
            <summary>
            This interface defines a configuration.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoDefinition.Add(BindOpen.System.Data.Meta.IBdoSpec[])">
            <summary>
            
            </summary>
            <param key="items"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoDefinition.With(BindOpen.System.Data.Meta.IBdoSpec[])">
            <summary>
            
            </summary>
            <param key="items"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoMetaDocument">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoMetaData">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoMetaData.MetaDataKind">
            <summary>
            The kind of meta data of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoMetaData.Specs">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoMetaData.DataMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoMetaData.Reference">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaData.Clear">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaData.GetData(BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaData.GetData``1(BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaData.GetDataList(BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaData.GetDataList``1(BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaData.SetData(System.Object)">
            <summary>
            
            </summary>
            <param key="objs"></param>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoMetaDataExtensions">
            <summary>
            This class represents a data element set.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaDataExtensions.WithDataMode``1(``0,BindOpen.System.Data.DataMode)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaDataExtensions.WithDataReference``1(``0,BindOpen.System.Data.IBdoReference)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaDataExtensions.WithData``1(``0,System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaDataExtensions.GetSpec(BindOpen.System.Data.Meta.IBdoMetaData,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoMetaObject">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.ITBdoMetaObject`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.ITBdoMetaObject`1.SetData(`0)">
            <summary>
            
            </summary>
            <param key="objs"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.ITBdoMetaObject`1.GetData(BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoMetaScalar">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaScalar.GetData(System.Int32,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaScalar.GetData``1(System.Int32,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.Meta.ITBdoMetaScalar`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.ITBdoMetaScalar`1.SetData(`0)">
            <summary>
            
            </summary>
            <param key="objs"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.ITBdoMetaScalar`1.GetData(BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.ITBdoMetaScalar`1.GetData(System.Int32,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoMetaSet">
            <summary>
            
            </summary>
            <summary>
            This class represents an extension of the DataValueType enumeration.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.Add(BindOpen.System.Data.Meta.IBdoMetaData[])">
            <summary>
            
            </summary>
            <param key="items"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.With(BindOpen.System.Data.Meta.IBdoMetaData[])">
            <summary>
            
            </summary>
            <param key="items"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.GetData(System.Int32,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.GetData``1(System.Int32,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.Object(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.Object(System.Int32)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="index">The index to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.Scalar(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.Scalar(System.Int32)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="index">The index to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.Set(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.Set(System.Int32)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="index">The index to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.GetDataList(System.String,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="elementSet"></param>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.GetDataList``1(System.String,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <typeparam name="Q"></typeparam>
            <param key="elementSet"></param>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.GetData(System.String,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="element"></param>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSet.GetData``1(System.String,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="elementSet"></param>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoMetaSetExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoMetaSetExtensions.Descendant(BindOpen.System.Data.Meta.IBdoMetaSet,System.Object[])">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoSpec">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.GroupId">
            <summary>
            The identifier of the group of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.SpecLevels">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.AccessibilityLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.InheritanceLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.Requirement">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.RequirementExp">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpec.IsCompatibleWithData(System.Object)">
            <summary>
            
            </summary>
            <param key="item"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.Aliases">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.SubSpecs">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpec.GetSubSpec(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.ValueModes">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.IsAllocatable">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.MinDataItemNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.MaxDataItemNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.DataValueType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.DataClassType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.IsStatic">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.Label">
            <summary>
            The label of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.DataRequirement">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.DataRequirementExp">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Meta.IBdoSpec.DefaultData">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Meta.IBdoSpecExtensions">
            <summary>
            This class represents a data element set.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithValueModes``1(``0,BindOpen.System.Data.DataMode[])">
            <summary>
            
            </summary>
            <param key="modes"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithAliases``1(``0,System.String[])">
            <summary>
            
            </summary>
            <param key="aliases"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.AsAllocatable``1(``0,System.Boolean)">
            <summary>
            
            </summary>
            <param key="isAllocatable"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.AsStatic``1(``0,System.Boolean)">
            <summary>
            
            </summary>
            <param key="isAllocatable"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithDefaultData``1(``0,System.Object)">
            <summary>
            
            </summary>
            <param key="item"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithMaxDataItemNumber``1(``0,System.Nullable{System.UInt32})">
            <summary>
            
            </summary>
            <param key="number"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithMinDataItemNumber``1(``0,System.UInt32)">
            <summary>
            
            </summary>
            <param key="number"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithAccessibilityLevel``1(``0,BindOpen.System.Data.AccessibilityLevels)">
            <summary>
            
            </summary>
            <param key="level"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithInheritanceLevel``1(``0,BindOpen.System.Data.InheritanceLevels)">
            <summary>
            
            </summary>
            <param key="level"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.TAsOptional``1(``0)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.AsRequired``1(``0)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.AsForbidden``1(``0)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithDataRequirement``1(``0,BindOpen.System.Data.RequirementLevels)">
            <summary>
            
            </summary>
            <param key="level"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithDataRequirementExp``1(``0,System.String)">
            <summary>
            
            </summary>
            <param key="script"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithRequirement``1(``0,BindOpen.System.Data.RequirementLevels)">
            <summary>
            
            </summary>
            <param key="level"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithRequirementExp``1(``0,System.String)">
            <summary>
            
            </summary>
            <param key="script"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithSpecLevels``1(``0,BindOpen.System.Data.SpecificationLevels[])">
            <summary>
            
            </summary>
            <param key="levels"></param>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WhatDataRequirement``1(``0)">
            <summary>
            The item requirement level of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.GetSpecs(BindOpen.System.Data.Meta.IBdoSpec,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithDataType``1(``0,BindOpen.System.BdoDataType)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithDataType``1(``0,BindOpen.System.Data.DataValueTypes,System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithLabel``1(``0,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Meta.IBdoSpecExtensions.WithLabel``1(``0,BindOpen.System.Data.LabelFormats)">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Stores.IBdoDepot">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoDepot.AddFromAllAssemblies(BindOpen.System.Logging.IBdoLog)">
            <summary>
            Add the items from all the assemblies.
            </summary>
            <param key="log">The log to append.</param>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoDepot.AddFromAssembly(BindOpen.System.Data.Assemblies.IBdoAssemblyReference,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Add the items from the specified assembly.
            </summary>
            <param key="assemblyName">The name of the assembly.</param>
            <param key="log">The log to append.</param>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoDepot.AddFromAssembly``1(BindOpen.System.Logging.IBdoLog)">
            <summary>
            Add the items from the assembly of the specified type.
            </summary>
            <param key="log">The log to append.</param>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoDepot.LoadLazy(BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads this instance.
            </summary>
            <param key="log">The log to append.</param>
        </member>
        <member name="P:BindOpen.System.Data.Stores.IBdoDepot.LazyLoadFunction">
            <summary>
            The initialization function.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Stores.IBdoSourceDepot">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoSourceDepot.GetInstanceName(System.String)">
            <summary>
            
            </summary>
            <param key="sourceName"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoSourceDepot.GetInstanceOtherwiseModuleName(System.String)">
            <summary>
            
            </summary>
            <param key="sourceName"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoSourceDepot.GetModuleName(System.String)">
            <summary>
            
            </summary>
            <param key="sourceName"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.Stores.ITBdoDepot`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:BindOpen.System.Data.Stores.IBdoDataStore">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.Stores.IBdoDataStore.Depots">
            <summary>
            The depots of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoDataStore.Add``1(``0,System.Action{``0})">
            <summary>
            Adds the specified depot executing the specified action.
            </summary>
            <param key="depot">The depot to consider.</param>
            <param key="action">The action to execute on the newly created depot.</param>
            <typeparam name="T">The depot class to consider.</typeparam>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoDataStore.Get``1">
            <summary>
            Gets the depot of the specified class.
            </summary>
            <typeparam name="T">The depot class to consider.</typeparam>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoDataStore.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Stores.IBdoDataStore.LoadLazy(BindOpen.System.Scoping.IBdoScope,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Executes the lazy functions of all the depots of this instance.
            </summary>
            <param key="scope">The scope to append.</param>
            <param key="log">The log to append.</param>
        </member>
        <member name="T:BindOpen.System.Data.IBdoDto">
            <summary>
            This interface represents a DTO.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IResultItemDto">
            <summary>
            This interface represents a result item DTO.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IResultItemDto.Key">
            <summary>
            The key of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IResultItemDto.Status">
            <summary>
            The status of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.AccessibilityLevels">
            <summary>
            This enumerates the possible levels of accesibility.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.AccessibilityLevels.Public">
            <summary>
            Anyone can access.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.AccessibilityLevels.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.AccessibilityLevels.Inherited">
            <summary>
            Inherited.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.AccessibilityLevels.Private">
            <summary>
            Only authentized people can access.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.AccessibilityLevels.Restricted">
            <summary>
            Only allowed people can access.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.AccessibilityLevels.Payable">
            <summary>
            Only people who bought for it can access.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.AccessibilityLevels.Any">
            <summary>
            Any accessibility level.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ActionPriorities">
            <summary>
            This enumeration lists the possible actions of priorities.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ActionPriorities.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ActionPriorities.Inherited">
            <summary>
            Inherited.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ActionPriorities.Low">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ActionPriorities.Medium">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ActionPriorities.High">
            <summary>
            High.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ActionPriorities.VeryHigh">
            <summary>
            Very high.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ActionPriorities.Any">
            <summary>
            Any action priority.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.CompositeConditionKind">
            <summary>
            This enumeration lists the possible kinds of advanced conditions.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.CompositeConditionKind.And">
            <summary>
            And.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.CompositeConditionKind.Or">
            <summary>
            Or.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.BdoExpressionKind">
            <summary>
            This enumeration represents the possible kinds of expressions.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoExpressionKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoExpressionKind.None">
            <summary>
            None. Such as script word.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoExpressionKind.Auto">
            <summary>
            Literal expression that can include scripts embedded in braces.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoExpressionKind.Literal">
            <summary>
            Literal expression is considered as default. A literal mode can then be applied.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoExpressionKind.Script">
            <summary>
            Script expression is considered as default.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.BdoMetaDataAreaKind">
            <summary>
            This enumeration lists the possible kinds of data areas.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataAreaKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataAreaKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataAreaKind.Element">
            <summary>
            Element attributes.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.BdoMetaDataKind">
            <summary>
            This enumeration represents the meta data kind.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataKind.Entity">
            <summary>
            Entity.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataKind.Document">
            <summary>
            Document.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataKind.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataKind.Scalar">
            <summary>
            Scalar.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataKind.Collection">
            <summary>
            Collection.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoMetaDataKind.Set">
            <summary>
            Set.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.BdoReferenceKind">
            <summary>
            This enumeration represents the possible kinds for data expression.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoReferenceKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoReferenceKind.None">
            <summary>
            None. Such as script word.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoReferenceKind.Expression">
            <summary>
            Expression.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoReferenceKind.Word">
            <summary>
            Word.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoReferenceKind.Variable">
            <summary>
            Target identifier.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.BdoReferenceKind.MetaData">
            <summary>
            Meta data.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ConditionOperator">
            <summary>
            This enumeration lists all the possible operators of conditions.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ConditionOperator.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ConditionOperator.Exist">
            <summary>
            Exist.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ConditionOperator.EqualTo">
            <summary>
            EqualTo.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ConditionOperator.LesserThan">
            <summary>
            LesserThan.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ConditionOperator.GreaterThan">
            <summary>
            GreaterThan.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ConditionOperator.DifferentFrom">
            <summary>
            DifferentFrom.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.Criticalities">
            <summary>
            This enumeration lists the possible event criticalities.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Criticalities.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Criticalities.Low">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Criticalities.Medium">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Criticalities.High">
            <summary>
            High.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Criticalities.VeryHigh">
            <summary>
            Very high.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.DataAreaKind">
            <summary>
            This enumeration lists the possible kinds of data areas.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataAreaKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataAreaKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataAreaKind.Constraints">
            <summary>
            Constraint attributes.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataAreaKind.Design">
            <summary>
            Design attribute.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataAreaKind.Items">
            <summary>
            Item attribute.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataAreaKind.Properties">
            <summary>
            Property attribute.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.DataMode">
            <summary>
            This enumeration represents the data element itemization modes.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataMode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataMode.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataMode.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataMode.Reference">
            <summary>
            Reference.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.DataOperators">
            <summary>
            This enumeration represents the possible data operators.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.Exists">
            <summary>
            Exists.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.Contains">
            <summary>
            Contains.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.Has">
            <summary>
            Has.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.In">
            <summary>
            In.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.Equal">
            <summary>
            Equal.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.Different">
            <summary>
            Different.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.Lesser">
            <summary>
            Lesser.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.LesserOrEqual">
            <summary>
            Lesser or equal.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.Greater">
            <summary>
            Greater.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.GreaterOrEqual">
            <summary>
            Greater or equal.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataOperators.Any">
            <summary>
            Any operator.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.DataSortingModes">
            <summary>
            This enumeration represents the data sorting modes.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataSortingModes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataSortingModes.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataSortingModes.Ascending">
            <summary>
            Ascending.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataSortingModes.Descending">
            <summary>
            Descending.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataSortingModes.Random">
            <summary>
            Random.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataSortingModes.Any">
            <summary>
            Any data sorting mode.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.DatasourceKind">
            <summary>
            This enumeration represents the data source kinds.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DatasourceKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DatasourceKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DatasourceKind.Database">
            <summary>
            Database.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DatasourceKind.Repository">
            <summary>
            Repository.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DatasourceKind.RestApi">
            <summary>
            Rest API.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DatasourceKind.SoapAPI">
            <summary>
            SOAP API.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DatasourceKind.EmailServer">
            <summary>
            Email server.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DatasourceKind.Memory">
            <summary>
            Memory.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DatasourceKind.Console">
            <summary>
            Console.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.DataValueTypes">
            <summary>
            This enumeration represents the possible data value types.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Any">
            <summary>
            Any data value type.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Boolean">
            <summary>
            Boolean.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.ByteArray">
            <summary>
            Byte array.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Connector">
            <summary>
            Connector.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Date">
            <summary>
            Date.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Document">
            <summary>
            Document.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Entity">
            <summary>
            Data entity.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Integer">
            <summary>
            Integer.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Long">
            <summary>
            Long.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.ULong">
            <summary>
            Ultra long.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Number">
            <summary>
            Number value.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Task">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Time">
            <summary>
            Time.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.MetaData">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.DataValueTypes.Scriptword">
            <summary>
            Script word.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.InheritanceLevels">
            <summary>
            This enumeration represents the possible levels of inheritance.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.InheritanceLevels.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.InheritanceLevels.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.InheritanceLevels.Heritable">
            <summary>
            Heritable.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.InheritanceLevels.Inherited">
            <summary>
            Inherited.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.InheritanceLevels.Any">
            <summary>
            Any inherintance level.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.LabelFormats">
            <summary>
            This enumeration lists all the possible name formats.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.LabelFormats.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.LabelFormats.OnlyName">
            <summary>
            Only name.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.LabelFormats.NameEqualsValue">
            <summary>
            Name=value.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.LabelFormats.NameColonValue">
            <summary>
            Name:value.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.LabelFormats.NameSpaceValue">
            <summary>
            Name value.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.LabelFormats.OnlyValue">
            <summary>
            Only value.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.PersistenceLevels">
            <summary>
            This enumeration represents the possible persistence levels.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.PersistenceLevels.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.PersistenceLevels.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.PersistenceLevels.Singleton">
            <summary>
            The information remains alive.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.PersistenceLevels.Scoped">
            <summary>
            The information remains alive until the session ends.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.PersistenceLevels.Transient">
            <summary>
            The information remains alive until the request ends.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.PersistenceLevels.Any">
            <summary>
            Any the persistence level.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.RequirementLevels">
            <summary>
            This enumeration represents the possible levels of requirement.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RequirementLevels.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RequirementLevels.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RequirementLevels.Forbidden">
            <summary>
            Forbidden.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RequirementLevels.Optional">
            <summary>
            Optional.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RequirementLevels.Required">
            <summary>
            Required.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RequirementLevels.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RequirementLevels.Any">
            <summary>
            Any the requirement level.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ResourceStatus">
            <summary>
            This enumeration lists all the possible statuses of resource.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ResourceStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ResourceStatus.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ResourceStatus.Created">
            <summary>
            Created.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ResourceStatus.Updated">
            <summary>
            Updated.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ResourceStatus.Patched">
            <summary>
            Patched.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ResourceStatus.Deleted">
            <summary>
            Deleted.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.ResourceStatus.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.RuntimeModes">
            <summary>
            This enumerates the possible modes of runtime.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RuntimeModes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RuntimeModes.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RuntimeModes.Normal">
            <summary>
            Normal. No exception and error messages are displayed.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RuntimeModes.Debug">
            <summary>
            Debug. Exception and error messages are displayed.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RuntimeModes.Simulation">
            <summary>
            Simulation. Everything is executed empty.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.RuntimeModes.Any">
            <summary>
            Any runtime mode.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.SpecificationLevels">
            <summary>
            This enumeration represents the possible levels of specification.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.SpecificationLevels.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.SpecificationLevels.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.SpecificationLevels.Definition">
            <summary>
            Definition.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.SpecificationLevels.Design">
            <summary>
            Design.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.SpecificationLevels.Configuration">
            <summary>
            Configuration.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.SpecificationLevels.Runtime">
            <summary>
            Runtime.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.SpecificationLevels.Any">
            <summary>
            Any specification level.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.TextFormatKind">
            <summary>
            This enumeration lists the possible kinds of text formats.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.TextFormatKind.None">
            <summary>
            No format.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.TextFormatKind.Email">
            <summary>
            Email format.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.TextFormatKind.StrongPassword">
            <summary>
            Strong password (Must be at least 10 characters,
            Must contain at least one one lower case letter, one upper case letter, one digit and one special character
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.UpdateModes">
            <summary>
            This enumeration represents the possible update modes.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.UpdateModes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.UpdateModes.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.UpdateModes.Incremental_AddMissingInTarget">
            <summary>
            Adds Source items that are not in Target.
            </summary>
            <remarks>Used in incremental update.</remarks>
        </member>
        <member name="F:BindOpen.System.Data.UpdateModes.Incremental_RemoveMissingInSource">
            <summary>
            Removes Target items that are not in Source.
            </summary>
            <remarks>Used in incremental update.</remarks>
        </member>
        <member name="F:BindOpen.System.Data.UpdateModes.Incremental_UpdateCommon">
            <summary>
            Updates Target items that are in Source.
            </summary>
            <remarks>Used in incremental update.</remarks>
        </member>
        <member name="F:BindOpen.System.Data.UpdateModes.Full">
            <summary>
            Full update mode.
            </summary>
            <remarks>Used in full update.</remarks>
        </member>
        <member name="T:BindOpen.System.Data.AccessibilityLevelExtensions">
            <summary>
            This class represents an accessibility level extension.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.AccessibilityLevelExtensions.ToAccessibilityLevel(System.String,System.String)">
            <summary>
            Gets the accessibility level corresponding to the specified string.
            </summary>
            <param key="levelString">The visibility to consider.</param>
            <param key="defaultLevelString">The default visibility to consider.</param>
            <returns>Returns the visibility corresponding to the specified strings.</returns>
        </member>
        <member name="T:BindOpen.System.Data.DataValueTypesExtensions">
            <summary>
            This class represents an extension of the DataValueType enumeration.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.DataValueTypesExtensions.IsScalar(BindOpen.System.Data.DataValueTypes)">
            <summary>
            Indicates whether the specified value type corresponds to a scalar.
            </summary>
            <param key="valueType">The object to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.System.Data.DataValueTypesExtensions.IsScalar(System.Object)">
            <summary>
            Indicates whether the specified value type corresponds to a scalar.
            </summary>
            <param key="obj">The object to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.System.Data.DataValueTypesExtensions.IsCompatibleWith(BindOpen.System.Data.DataValueTypes,BindOpen.System.Data.DataValueTypes)">
            <summary>
            Returns the value type of the specified object.
            </summary>
            <param key="valueType">The value type to consider.</param>
            <param key="refValueType">The value type to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.System.Data.DataValueTypesExtensions.GetValueType(System.Type)">
            <summary>
            Returns the value type of the specified object.
            </summary>
            <param key="type">The type to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.System.Data.DataValueTypesExtensions.GetValueType(System.Object,System.Int32)">
            <summary>
            Returns the value type of the specified object.
            </summary>
            <param key="obj">The object to consider.</param>
            <param key="guessRowCount">The number of items used to guess the object's value type if it is a list.</param>
            <returns>The result object.</returns>
        </member>
        <member name="T:BindOpen.System.Data.IActivableExtensions">
            <summary>
            This class represents an accessibility level extension.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IActivableExtensions.IsActive``1(``0,System.Boolean)">
            <summary>
            
            </summary>
            <param key="index"></param>
        </member>
        <member name="T:BindOpen.System.Data.IBdoDefinableExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDefinableExtensions.WithDefinition``1(``0,System.String)">
            <summary>
            
            </summary>
            <param key="detail"></param>
        </member>
        <member name="T:BindOpen.System.Data.IBdoUsingExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoUsingExtensions.Using``1(``0,System.String[])">
            <summary>
            
            </summary>
            <param key="detail"></param>
        </member>
        <member name="T:BindOpen.System.Data.IConfigurableExtensions">
            <summary>
            This interface represents an named data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IConfigurableExtensions.WithConfig``1(``0,BindOpen.System.Data.Meta.IBdoConfiguration)">
            <summary>
            
            </summary>
            <param key="name"></param>
        </member>
        <member name="T:BindOpen.System.Data.IDescribedExtensions">
            <summary>
            This interface represents an described data item.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IDetailedExtensions">
            <summary>
            This interface represents a named data.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IDetailedExtensions.WithDetail``1(``0,BindOpen.System.Data.Meta.IBdoMetaSet)">
            <summary>
            
            </summary>
            <param key="detail"></param>
        </member>
        <member name="T:BindOpen.System.Data.IDisplayNamedExtensions">
            <summary>
            This interface represents an named data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IDisplayNamedExtensions.WithDisplayName``1(``0,System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
        </member>
        <member name="T:BindOpen.System.Data.IGloballyDescribedExtensions">
            <summary>
            This interface represents an described data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IGloballyDescribedExtensions.GetDescriptionText``1(``0,System.String,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param key="obj"></param>
            <param key="key"></param>
            <param key="defaultKey"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IGloballyTitledExtensions">
            <summary>
            This interface represents an described data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IGloballyTitledExtensions.GetTitleText``1(``0,System.String,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param key="obj"></param>
            <param key="key"></param>
            <param key="defaultKey"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IIdentifiedExtensions">
            <summary>
            This interface represents an identified data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IIdentifiedExtensions.WithId``1(``0,System.String)">
            <summary>
            
            </summary>
            <param key="id"></param>
        </member>
        <member name="T:BindOpen.System.Data.IIndexedExtensions">
            <summary>
            This interface represents a indexed data.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IIndexedExtensions.WithIndex``1(``0,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param key="index"></param>
        </member>
        <member name="T:BindOpen.System.Data.INamedExtensions">
            <summary>
            This interface represents an named data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.INamedExtensions.WithName``1(``0,System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
        </member>
        <member name="T:BindOpen.System.Data.IStorableExtensions">
            <summary>
            This interface defines a storable data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IStorableExtensions.WithCreationDate``1(``0,System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param key="date"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.IStorableExtensions.WithLastModificationDate``1(``0,System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param key="date"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.ITChildExtensions">
            <summary>
            This interface represents an described data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.ITChildExtensions.Root``1(BindOpen.System.Data.ITChild{``0},System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.ITChildExtensions.Level``1(BindOpen.System.Data.ITChild{``0})">
            <summary>
            The level of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ITitledExtensions">
            <summary>
            This interface represents an described data item.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ITParentExtensions">
            <summary>
            This interface represents an described data item.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.LabelFormatsExtensions">
            <summary>
            This class represents an extension of the DataValueType enumeration.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.LabelFormatsExtensions.__Script_This_Name">
            <summary>
            The name of this meta data.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.LabelFormatsExtensions.__Script_This_Value">
            <summary>
            The pattern empty value.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.LabelFormatsExtensions.HasName(BindOpen.System.Data.LabelFormats)">
            <summary>
            Indicates whether the specified kind has name.
            </summary>
            <returns>Returns true or false.</returns>
        </member>
        <member name="M:BindOpen.System.Data.LabelFormatsExtensions.HasValue(BindOpen.System.Data.LabelFormats)">
            <summary>
            Indicates whether the specified kind has value.
            </summary>
            <returns>Returns true or false.</returns>
        </member>
        <member name="M:BindOpen.System.Data.LabelFormatsExtensions.GetScript(BindOpen.System.Data.LabelFormats)">
            <summary>
            Sanitizes the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="T:BindOpen.System.Data.RequirementLevelsExtensions">
            <summary>
            This class represents an extension of the RequirementLevels enumeration.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.RequirementLevelsExtensions.IsPossible(BindOpen.System.Data.RequirementLevels)">
            <summary>
            Indicates whether the specified requirement level means that it is possible.
            </summary>
            <param key="requirementLevel">The requirement level to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="T:BindOpen.System.Data.SpecificationLevelExtensions">
            <summary>
            This class represents an specification level extension.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.SpecificationLevelExtensions.Has(BindOpen.System.Data.SpecificationLevels[],BindOpen.System.Data.SpecificationLevels)">
            <summary>
            Indicates whether the specified specification level list contains the specified specification level.
            </summary>
            <param key="specificationLevels">The specified specification level list to consider.</param>
            <param key="specificationLevel">The specified specification level to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.SpecificationLevelExtensions.Has(BindOpen.System.Data.SpecificationLevels[],BindOpen.System.Data.SpecificationLevels[])">
            <summary>
            Indicates whether the specified specification level list contains the specified specification level.
            </summary>
            <param key="specificationLevels">The specified specification level list to consider.</param>
            <param key="referenceSpecificationLevels">The specified reference specification levels to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.SpecificationLevelExtensions.Excluding(BindOpen.System.Data.SpecificationLevels[],BindOpen.System.Data.SpecificationLevels[])">
            <summary>
            Gets the specified list excluding the second specified list.
            </summary>
            <param key="specificationLevels">The specification levels to consider.</param>
            <param key="excludingSpecificationLevels">The excluding specification levels to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.SpecificationLevelExtensions.Excluding(BindOpen.System.Data.SpecificationLevels,BindOpen.System.Data.SpecificationLevels[])">
            <summary>
            Gets the specified list excluding the secong specified list.
            </summary>
            <param key="specificationLevel">The specification level to consider.</param>
            <param key="excludingSpecificationLevels">The excluding specification levels to consider.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.UpdateModesExtensions">
            <summary>
            This class represents an update mode extension.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.UpdateModesExtensions.Has(BindOpen.System.Data.UpdateModes[],BindOpen.System.Data.UpdateModes[])">
            <summary>
            Indicates whether the specified update mode list contains the specified update mode.
            </summary>
            <param key="updateModes">The specified update mode list to consider.</param>
            <param key="updateMode">The specified update mode to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.UpdateModesExtensions.Excluding(BindOpen.System.Data.UpdateModes[],BindOpen.System.Data.UpdateModes[])">
            <summary>
            Gets the specified list excluding the second specified list.
            </summary>
            <param key="updateModes">The update modes to consider.</param>
            <param key="excludingUpdateModes">The excluding update modes to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.UpdateModesExtensions.Excluding(BindOpen.System.Data.UpdateModes,BindOpen.System.Data.UpdateModes[])">
            <summary>
            Gets the specified list excluding the secong specified list.
            </summary>
            <param key="updateMode">The update mode to consider.</param>
            <param key="excludingUpdateModes">The excluding update modes to consider.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.Helpers.CommonHelper">
            <summary>
            This class represents a common helper.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.CommonHelper.IsNullOrEmpty(System.String,System.Action)">
            <summary>
            Executes the specified action if the specified value is null or empry.
            </summary>
            <param key="value">The value to consider.</param>
            <param key="action">The action to consider.</param>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.CommonHelper.If(System.Boolean,System.Action)">
            <summary>
            Executes the specified action if the specified value is true.
            </summary>
            <param key="value">The value to consider.</param>
            <param key="action">The action to consider.</param>
        </member>
        <member name="T:BindOpen.System.Data.Helpers.FileHelper">
            <summary>
            This class represents a helper for files.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.FileHelper.CreateDirectory(System.String,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Creates the specified file directory if it does not exist.
            </summary>
            <param key="folderPath">The path of the file directory to consider.</param>
            <param key="log">The log to append.</param>
            <returns>Returns True whether the directory exists henceforth. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.FileHelper.ToPath(System.String)">
            <summary>
            Converts the specified path according to the environment.
            </summary>
            <param key="st">The string to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.FileHelper.GetConcatenatedPath(System.String,System.String)">
            <summary>
            Converts the specified path according to the environment.
            </summary>
            <param key="path">The path to consider.</param>
            <param key="rootPath">The root path to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.FileHelper.GetAppRootFolderPath">
            <summary>
            Gets the path of the application root folder.
            </summary>
            <returns>Returns the path.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.FileHelper.DeleteExpiredFiles(System.String,System.Int32,System.String)">
            <summary>
            Delete the files that are older than the specified day number.
            </summary>
            <param key="folderPath">The folder path to consider.</param>
            <param key="expirationDayNumber">The number of expiration days to consider.</param>
            <param key="fileFormat">The file format to consider.</param>
            <remarks>With expiration day number equaling to -1, no files expires. Equaling to 0, all files except the current one expires.</remarks>
        </member>
        <member name="T:BindOpen.System.Data.Helpers.ObjectHelper">
            <summary>
            This class represents a helper for objects.
            </summary>
            <summary>
            This class represents a helper for objects.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.ToBdoKey(System.Object)">
            <summary>
            Returns the key representing the specified object i.e. in lower case and empty if null.
            </summary>
            <param key="object1">The object to consider.</param>
            <returns>Returns the key representing the specified object.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.BdoKeyEquals(System.Object,System.Object)">
            <summary>
            Indicates whether the key representing the specified object i.e. in lower case and empty if null.
            </summary>
            <param key="object1">The object to consider.</param>
            <param key="object2">The object to compare with.</param>
            <returns>Returns True if the keys of the considered objects equal.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.ToNotNullString(System.Object)">
            <summary>
            Returns the string representation of the specified object.
            </summary>
            <param key="object1">The object to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.ToString(System.Object,BindOpen.System.Data.DataValueTypes,System.Boolean)">
            <summary>
            Returns the string value from an object based on this instance's specification.
            </summary>
            <param key="obj">The object value to convert.</param>
            <param key="valueType">The value type to consider.</param>
            <param key="isScriptMode">Indicates whether the script mode is activated.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.Using``1(``0,System.Action{``0})">
            <summary>
            Using the specified item executing the specified action.
            </summary>
            <typeparam name="T">A type deriving from data item.</typeparam>
            <param key="item">The item to use.</param>
            <param key="action">The action to execute.</param>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.GetPropertyInfo(System.Type,System.String,System.Type[],BindOpen.System.Data.Meta.BdoPropertyAttribute@)">
            <summary>
            Gets information of the specified property.
            </summary>
            <param key="objectType">The object type to consider.</param>
            <param key="propertyName">The property name to consider.</param>
            <param key="attributeTypes"></param>
            <param key="attribute">The attribute to return.</param>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.GetPropertyInfo``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Gets the specified property.
            </summary>
            <typeparam name="T">The class to consider.</typeparam>
            <param key="property">The property expression to consider.</param>
            <returns>Returns the property information.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.ToByteArray(System.String,System.Text.Encoding)">
            <summary>
            Creates a byte array from the string, using the 
            System.Text.Encoding.Default encoding unless another is specified.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.GetEnumFields(System.Type)">
            <summary>
            Gets the fields of the specified enumeration.
            </summary>
            <returns>Returns the string array.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.ToBdoData(System.Object)">
            <summary>
            
            </summary>
            <param key="obj"></param>
            <param key="spec"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.IsNumeric(System.Type)">
            <summary>
            
            </summary>
            <param key="type"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.GetAt``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Returns the string representation of the specified object.
            </summary>
            <param key="obj">The object to consider.</param>
            <param key="index">The index to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.GetAt``1(``0[],System.Int32)">
            <summary>
            Gets the string at the specified index from the specified index.
            </summary>
            <param key="arr">The objects to consider.</param>
            <param key="index">The index to consider.</param>
            <returns>Returns the normalized string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.GetString(System.Collections.Generic.IList{System.Object},System.Int32)">
            <summary>
            Gets the object at the specified index from the specified index.
            </summary>
            <param key="objects">The objects to consider.</param>
            <param key="index">The index to consider.</param>
            <returns>Returns the normalized string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.Get``1(System.Collections.Generic.IList{System.Object},System.Int32,System.Func{System.Object,``0})">
            <summary>
            Gets the object at the specified index from the specified index.
            </summary>
            <param key="objects">The objects to consider.</param>
            <param key="index">The index to consider.</param>
            <returns>Returns the normalized string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.First``1(System.Collections.Generic.IList{System.Object},System.Func{System.Object,``0})">
            <summary>
            Gets the object at the specified index from the specified index.
            </summary>
            <param key="objects">The objects to consider.</param>
            <param key="index">The index to consider.</param>
            <returns>Returns the normalized string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.ToObjectArray(System.Object)">
            <summary>
            
            </summary>
            <param key="type"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.ToObjectList(System.Object)">
            <summary>
            
            </summary>
            <param key="type"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.IsList(System.Object)">
            <summary>
            
            </summary>
            <param key="type"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectHelper.IsList(System.Type)">
            <summary>
            
            </summary>
            <param key="type"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.Helpers.ObjectNotationHelper">
            <summary>
            This class represents a helper for object notation.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.ObjectNotationHelper.CloneDataRow(System.Data.DataRow,System.Data.DataTable)">
            <summary>
            Clones the specified data row into the specified data table.
            </summary>
            <param key="dataRow">The data row to clone.</param>
            <param key="dataTable">The data table that receives the cloned datatable.</param>
            <returns>The cloned data row.</returns>
        </member>
        <member name="T:BindOpen.System.Data.Helpers.StringHelper">
            <summary>
            This structure represents a string helper.
            </summary>
            <summary>
            This class represents a helper for objects.
            </summary>
            <summary>
            This structure represents a string helper.
            </summary>
            <summary>
            This structure represents a string helper.
            </summary>
            <summary>
            This class represents a helper for objects.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.GeneratePassword(System.Int32)">
            <summary>
            Generates a password.
            </summary>
            <param key="charNumber">The character number to consider.</param>
            <returns>Returns the generated password.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.CountOccurences(System.String,System.String)">
            <summary>
            Gets the number of occurences of a specfied character in the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="subString">The sub string to consider.</param>
            <returns>The number of occurences of a specfied character in the specified string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.CheckNameFormat(System.String,System.Int32)">
            <summary>
            Returns the string value of the specified settings.
            </summary>
            <param key="stringValue">string value to consider.</param>
            <param key="limitSize">Limit string size to consider.</param>
            <returns>The string value of the specified settings.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.HashString(System.String,System.String)">
            <summary>
            Hashes the string.
            </summary>
            <param key="st">The string to hash.</param>
            <param key="hashName">The name of the algorithm to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.Sanitize(System.String)">
            <summary>
            Sanitizes the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.NewGuid">
            <summary>
            Generates a new short ID.
            </summary>
            <returns>Returns a new short ID.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.NewShortId">
            <summary>
            Generates a new short ID.
            </summary>
            <returns>Returns a new short ID.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.Concatenate(System.String,System.String,System.String)">
            <summary>
            Concatenates the two specified string only if the second one starts with the specified character. Returns the second string otherwise.
            </summary>
            <param key="st1">The first string to concatenate.</param>
            <param key="st2">The second string to concatenate.</param>
            <param key="charString">The string value to consider.</param>
            <returns>Returns the concatenated string.</returns>
            <remarks>If the leading char is null then the two strings are always concatenated.</remarks>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.If(System.String,System.Boolean,System.String)">
            <summary>
            Sets the first string as the second one if the specified condition is statisfied.
            </summary>
            <param key="st1">The first string to concatenate.</param>
            <param key="condition">The condition to consider.</param>
            <param key="st2">The second string to concatenate.</param>
            <returns>Returns the concatenated string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ConcatenateIf(System.String,System.Boolean,System.String)">
            <summary>
            Concatenates the first string with the second one if the specified condition is statisfied.
            </summary>
            <param key="st1">The first string to concatenate.</param>
            <param key="condition">The condition to consider.</param>
            <param key="st2">The second string to concatenate.</param>
            <returns>Returns the concatenated string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ConcatenateIfFirstNotEmpty(System.String,System.String)">
            <summary>
            Concatenates the first string with the second only if the first one is not empty.
            </summary>
            <param key="st1">The first string to concatenate.</param>
            <param key="st2">The second string to concatenate.</param>
            <returns>Returns the concatenated string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ConcatenateIfSecondNotEmpty(System.String,System.String)">
            <summary>
            Concatenates the first string with the second only if the second one is not empty.
            </summary>
            <param key="st1">The first string to concatenate.</param>
            <param key="st2">The second string to concatenate.</param>
            <returns>Returns the concatenated string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.GetRandomString(System.String,System.String[])">
            <summary>
            Get a random string from the specified string with the specified length.
            </summary>
            <param key="pattern">The pattern to consider.</param>
            <param key="charLists">The lists of chars to consider.</param>
            <returns>A random password with the specified length.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.Excluding``1(``0,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Excludes the specified string items from the specified string items.
            </summary>
            <param key="items">The string items to consider.</param>
            <param key="excludingStringItems">The string items to exclude.</param>
            <returns>Returns the excluded string items.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.Adding``1(``0,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Adds the specified string items from the specified string items.
            </summary>
            <param key="items">The string items to consider.</param>
            <param key="addingItems">The string items to add.</param>
            <returns>Returns the added string items.</returns>
        </member>
        <member name="F:BindOpen.System.Data.Helpers.StringHelper.__UniqueToken">
            <summary>
            The unique token.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Helpers.StringHelper.__PatternStar">
            <summary>
            The pattern empty value.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Helpers.StringHelper.__NoneString">
            <summary>
            The string that is returned when the instance is not found.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Helpers.StringHelper.__DateTimeFormat">
            <summary>
            The string that is returned when the instance is not found.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Helpers.StringHelper.__DateTimeFormatShort">
            <summary>
            The string that is returned when the instance is not found.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Helpers.StringHelper.__TimeFormat">
            <summary>
            The string that is returned when the instance is not found.
            </summary>
        </member>
        <member name="F:BindOpen.System.Data.Helpers.StringHelper.__Star">
            <summary>
            The string that presents all items.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToString(System.DateTime)">
            <summary>
            Gets the date string of this instance.
            </summary>
            <param key="date">The date to consider.</param>
            <returns>Returns the date string of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToString(System.Nullable{System.DateTime})">
            <summary>
            Gets the date string of this instance.
            </summary>
            <param key="date">The date to consider.</param>
            <returns>Returns the date string of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToShortString(System.String,System.Int32,System.String)">
            <summary>
            Gets the string shorten to the specified characters.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="charNumber">The number of characters to consider.</param>
            <param key="addedString">Indicates whether dots are added.</param>
            <returns>Returns the specified string shorten.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToNormalizedName(System.String)">
            <summary>
            Gets the normalized string from the specified string.
            </summary>
            <param key="st">The string to normalize.</param>
            <returns>Returns the normalized string.</returns>
            <remarks>The normalized string is a string in which only the alphanumeric characters and _ are allowed.</remarks>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToTitleCasedName(System.String)">
            <summary>
            Gets the titled string from the specified string.
            </summary>
            <param key="st">The string to normalize.</param>
            <returns>Returns the normalized string.</returns>
            <remarks>The normalized string is a string in which only the alphanumeric characters and _ are allowed.</remarks>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToObject(System.String,BindOpen.System.Data.DataValueTypes,System.String)">
            <summary>
            Gets the object from the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="valueType">The value type to consider.</param>
            <param key="textFormat">The text format to consider.</param>
            <returns>Returns the object corresponding to the specified string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToDateTime(System.String,System.String)">
            <summary>
            Gets the date time object from the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="textFormat">The text format to consider.</param>
            <returns>Returns the object corresponding to the specified string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToEnum``1(System.String,``0)">
            <summary>
            Gets the enumration from the specified string.
            </summary>
            <typeparam name="T">The structure to consider.</typeparam>
            <param key="st">The string to consider.</param>
            <param key="defaultEnum">The default enumeration to consider.</param>
            <returns>Returns the object corresponding to the specified string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToQuoted(System.String,System.Char)">
            <summary>
            Gets the quoted string.
            </summary>
            <param key="st">The string to normalize.</param>
            <returns>Returns the quoted string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToUnquoted(System.String,System.Char)">
            <summary>
            Gets the unquoted string.
            </summary>
            <param key="st">The string to normalize.</param>
            <param key="quoteChar">The quote character to consider.</param>
            <returns>Returns the quoted string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToFormatedString(System.String,System.Int32,System.String,System.String)">
            <summary>
            Formats the specified string replacing the specified index by the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="index">The index to consider.</param>
            <param key="replaceString">The replacement string to consider.</param>
            <param key="wholeReplaceString">The whole replacement string to consider.</param>
            <example>The string should be formated this way: {0} {1} or { .. {0} .. } { .. {1} .. } and so on.</example>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.ToSubstring(System.String,System.Int32,System.Int32)">
            <summary>
            Gets the specified sub string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="startIndex">The start index to consider.</param>
            <param key="endIndex">The end index to consider.</param>
            <returns>The formated path.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.StartingWith(System.String,System.String)">
            <summary>
            Gets the string with the specified starting string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="startingString">The starting string to consider.</param>
            <returns>The formated path.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.EndingWith(System.String,System.String)">
            <summary>
            Gets the string with the specified ending string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="endingString">The ending string to consider.</param>
            <returns>The formated path.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.IndexOfLastString(System.String,System.String,System.Int32@)">
            <summary>
            Gets the index of the last sub string in the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="stv">The string to search.</param>
            <param key="startIndex">The start index to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.IndexOfLastString(System.String,System.String,System.Int32)">
            <summary>
            Gets the index of the last sub string in the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="stv">The string to search.</param>
            <param key="startIndex">The start index to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.IndexOfNextString(System.String,System.String,System.Int32@)">
            <summary>
            Gets the index of the next sub string in the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="stv">The string to search.</param>
            <param key="startIndex">The start index to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.System.Data.Helpers.StringHelper.IndexOfNextString(System.String,System.String,System.Int32,System.StringComparison,System.Char)">
            <summary>
            Gets the index of the next sub string in the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <param key="stv">The string to search.</param>
            <param key="startIndex">The start index to consider.</param>
            <param key="stringComparison">The string comparison to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="T:BindOpen.System.Data.IActivable">
            <summary>
            This interface represents a data with detail.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IActivable.IsActive">
            <summary>
            Indicates whether it is active.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoConfigurable">
            <summary>
            This interface defines a configurable data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoConfigurable.Config">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoDefinable">
            <summary>
            This interface defines a configurable data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoDefinable.DefinitionUniqueName">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoDescribed">
            <summary>
            This interface represents a globally described data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoDescribed.Description">
            <summary>
            The global description of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoDetailed">
            <summary>
            This interface represents a data with detail.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoDetailed.Detail">
            <summary>
            The detail of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoTitled">
            <summary>
            This interface represents a globally titled data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoTitled.Title">
            <summary>
            The global title of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoUsing">
            <summary>
            This interface defines an using data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoUsing.UsedItemIds">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ICheckable">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.ICheckable.Check(System.Boolean,System.String[],BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="isExistenceChecked"></param>
            <param key="areas"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IClonable">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IClonable.Clone">
            <summary>
            Clones this instance.
            </summary>
            <param key="areas">The areas to consider.</param>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.IClonable.Clone``1">
            <summary>
            Clones this instance.
            </summary>
            <param key="areas">The areas to consider.</param>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.System.Data.IDescribed">
            <summary>
            This interface represents a described data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IDescribed.Description">
            <summary>
            The description of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IDisplayNamed">
            <summary>
            This interface represents a display named data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IDisplayNamed.DisplayName">
            <summary>
            The display name of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IIdentified">
            <summary>
            This interface represents an identified data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IIdentified.Id">
            <summary>
            ID of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IIndexed">
            <summary>
            This interface represents an indexed data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IIndexed.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ILockable">
            <summary>
            This interface defines a lockable data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.ILockable.IsLocked">
            <summary>
            Indicates whether this instance is locked.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.ILockable.Lock(System.Boolean)">
            <summary>
            Locks this instance.
            </summary>
            <param key="isRecursive">Indicates whether the protection is applied to sub objects.</param>
        </member>
        <member name="M:BindOpen.System.Data.ILockable.Unlock(System.Boolean)">
            <summary>
            Unlocks this instance.
            </summary>
            <param key="isRecursive">Indicates whether the protection is applied to sub objects.</param>
        </member>
        <member name="T:BindOpen.System.Data.INamed">
            <summary>
            This interface represents a named data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.INamed.Name">
            <summary>
            The name of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IReferenced">
            <summary>
            This interface represents an referenced DTO.
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IReferenced.Key">
            <summary>
            Gets the key of the item.
            </summary>
            <returns>Returns the key of the item.</returns>
        </member>
        <member name="T:BindOpen.System.Data.IRepairable">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IRepairable.Repair(System.String[],BindOpen.System.Data.UpdateModes[],BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="areas"></param>
            <param key="updateModes"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IStorable">
            <summary>
            This interface defines a storable data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IStorable.CreationDate">
            <summary>
            Creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IStorable.LastModificationDate">
            <summary>
            Last modification date of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ITChild`1">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ITChildClonable`2">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.ITChildClonable`2.Clone(`1)">
            <summary>
            Clones this instance.
            </summary>
            <param key="areas">The areas to consider.</param>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.System.Data.ITitled">
            <summary>
            This interface represents a globally described data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.ITitled.Title">
            <summary>
            The title of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ITParent`1">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ITTreeNode`1">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ITUpdatable`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.ITUpdatable`1.Update(`0,System.String[],BindOpen.System.Data.UpdateModes[],BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="areas"></param>
            <param key="updateModes"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IUnique">
            <summary>
            This interface represents an unique data.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IUnique.UniqueName">
            <summary>
            Unique name of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IUpdatable">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IUpdatable.Update(System.String[],BindOpen.System.Data.UpdateModes[],BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="areas"></param>
            <param key="updateModes"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.BdoDataType">
            <summary>
            This class represents a data element specification.
            </summary>
        </member>
        <member name="P:BindOpen.System.BdoDataType.ValueType">
            <summary>
            The value type of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.BdoDataType.ClassType">
            <summary>
            The value type of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.BdoDataType.op_Explicit(BindOpen.System.BdoDataType)~BindOpen.System.Data.DataValueTypes">
            <summary>
            Converts to string.
            </summary>
            <param key="meta">The meta to consider.</param>
        </member>
        <member name="M:BindOpen.System.BdoDataType.WithValueType(BindOpen.System.Data.DataValueTypes)">
            <summary>
            
            </summary>
            <param key="number"></param>
        </member>
        <member name="M:BindOpen.System.BdoDataType.WithClassType(System.Type)">
            <summary>
            
            </summary>
            <param key="number"></param>
        </member>
        <member name="T:BindOpen.System.Data.IBdoDatasource">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoDatasource.InstanceName">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDatasource.WithInstanceName(System.String)">
            <summary>
            Sets the specified module name of this instance. 
            </summary>
            <param key="instanceName">The instance name to consider.</param>
        </member>
        <member name="P:BindOpen.System.Data.IBdoDatasource.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDatasource.WithKind(BindOpen.System.Data.DatasourceKind)">
            <summary>
            Sets the specified kind of this instance. 
            </summary>
            <param key="kind">The kind to consider.</param>
        </member>
        <member name="P:BindOpen.System.Data.IBdoDatasource.ModuleName">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDatasource.WithModuleName(System.String)">
            <summary>
            Sets the specified module name of this instance. 
            </summary>
            <param key="moduleName">The module name to consider.</param>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDatasource.With(BindOpen.System.Data.Meta.IBdoConfiguration[])">
            <summary>
            Sets the specified single item of this instance.
            </summary>
            <param key="items">The items to apply to this instance.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
        </member>
        <member name="T:BindOpen.System.Data.IBdoDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoDictionary.Item(System.String,System.String)">
            <summary>
            
            </summary>
            <param key="key"></param>
            <param key="defaultKey"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            
            </summary>
            <param key="pair"></param>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDictionary.Add(System.String)">
            <summary>
            
            </summary>
            <param key="text"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDictionary.Add(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param key="key"></param>
            <param key="text"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDictionary.Remove(System.String[])">
            <summary>
            
            </summary>
            <param key="keys"></param>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDictionary.Set(System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            
            </summary>
            <param key="pair"></param>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDictionary.Set(System.String)">
            <summary>
            
            </summary>
            <param key="text"></param>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDictionary.Set(System.String,System.String)">
            <summary>
            
            </summary>
            <param key="key"></param>
            <param key="text"></param>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDictionary.Get(System.String,System.String)">
            <summary>
            
            </summary>
            <param key="key"></param>
            <param key="alternateKey"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDictionary.Equals(BindOpen.System.Data.IBdoDictionary)">
            <summary>
            
            </summary>
            <param key="dictionary"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IBdoDocument">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoDocument.Container">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoDocument.Content">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDocument.DetectFormat(BindOpen.System.Data.IBdoDatasource,BindOpen.System.Logging.IBdoLog@)">
            <summary>
            
            </summary>
            <param key="dataSource"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoDocument.Update(BindOpen.System.Data.IBdoDocument,System.String)">
            <summary>
            
            </summary>
            <param key="documentDataItem"></param>
            <param key="relativePath"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IBdoExpression">
            <summary>
            This interface defines a data expression.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoExpression.Kind">
            <summary>
            The kind.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoExpression.Text">
            <summary>
            The text.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoExpressionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoExpressionExtensions.WithText``1(``0,System.String,BindOpen.System.Data.BdoExpressionKind)">
            <summary>
            
            </summary>
            <param key="text"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IBdoObject">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoObjectNotMetable">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoReference">
            <summary>
            This interface defines a data expression.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoReference.Kind">
            <summary>
            The kind.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoReference.Word">
            <summary>
            The script word.
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoReferenceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoReferenceExtensions.WithWord``1(``0,BindOpen.System.Scoping.Script.IBdoScriptword)">
            <summary>
            Removes the item with the specified name.
            </summary>
            <param key="keys">The keys of the item to remove.</param>
        </member>
        <member name="M:BindOpen.System.Data.IBdoReferenceExtensions.WithExpression``1(``0,BindOpen.System.Data.IBdoExpression)">
            <summary>
            Removes the item with the specified name.
            </summary>
            <param key="keys">The keys of the item to remove.</param>
        </member>
        <member name="M:BindOpen.System.Data.IBdoReferenceExtensions.WithMetaData``1(``0,BindOpen.System.Data.Meta.IBdoMetaData)">
            <summary>
            Removes the item with the specified name.
            </summary>
            <param key="keys">The keys of the item to remove.</param>
        </member>
        <member name="M:BindOpen.System.Data.IBdoReferenceExtensions.WithVariableName``1(``0,System.String)">
            <summary>
            Removes the item with the specified name.
            </summary>
            <param key="keys">The keys of the item to remove.</param>
        </member>
        <member name="T:BindOpen.System.Data.IBdoSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoSet.Item(System.String)">
            <summary>
            
            </summary>
            <param key="key"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.System.Data.IBdoSet.Item(System.Int32)">
            <summary>
            
            </summary>
            <param key="key"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IBdoSetExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoSetExtensions.Descendant``1(BindOpen.System.Data.IBdoSet,System.Object[])">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.IBdoStringSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoStringSet.AddedValues">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.IBdoStringSet.RemovedValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoStringSet.ToList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoStringSet.ToArray">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoStringSet.Contains(System.String)">
            <summary>
            
            </summary>
            <param key="value"></param>
            <param key="allValues"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Data.IBdoStringSetExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.IBdoStringSetExtensions.Merge(System.Collections.Generic.IList{System.String},BindOpen.System.Data.IBdoStringSet)">
            <summary>
            Gets the values allowed by this instance.
            </summary>
            <param key="all">All the values to consider.</param>
            <returns>Returns all the values allowed by this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.IBdoStringSetExtensions.Contains(System.Collections.Generic.IList{System.String},System.String,BindOpen.System.Data.IBdoStringSet)">
            <summary>
            Indicates whether the value is allowed by this instance.
            </summary>
            <param key="value">The value to validate.</param>
            <param key="all">All the values to consider.</param>
            <returns>Returns True if the specified is validated by this instance.</returns>
        </member>
        <member name="T:BindOpen.System.Data.ITBdoSet`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:BindOpen.System.Data.ITBdoSet`1.Count">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:BindOpen.System.Data.ITBdoSet`1.Items">
            <summary>
            
            </summary>
            <param key="key"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.System.Data.ITBdoSet`1.Item(System.Int32)">
            <summary>
            
            </summary>
            <param key="index"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.System.Data.ITBdoSet`1.Item(System.String)">
            <summary>
            
            </summary>
            <param key="key"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.System.Data.ITBdoSet`1.Item(System.String,System.String)">
            <summary>
            Returns the item of the specified key.
            </summary>
            <param key="key">The key to consider.</param>
            <param key="defaultKey">The default key to consider.</param>
            <returns>Returns the specified text.</returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Get(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Get(System.String,System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Get(System.Int32)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="index">The index to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Get``1(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Get``1(System.String,System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Get``1(System.Int32)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="index">The index to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Insert(`0)">
            <summary>
            
            </summary>
            <param key="item"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Add(`0[])">
            <summary>
            
            </summary>
            <param key="items"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.With(`0[])">
            <summary>
            
            </summary>
            <param key="items"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Has(System.String)">
            <summary>
            
            </summary>
            <param key="key"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.ToArray">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Data.ITBdoSet`1.ToList">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Data.ITBdoPoco`1">
            <summary>
            This interface represents a POCO based on a DTO.
            </summary>
        </member>
        <member name="P:BindOpen.System.Data.ITBdoPoco`1.Dto">
            <summary>
            The DTO of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Logging.EventKinds">
            <summary>
            This enumeration lists the possible event kinds.
            </summary>
        </member>
        <member name="F:BindOpen.System.Logging.EventKinds.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Logging.EventKinds.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="F:BindOpen.System.Logging.EventKinds.Checkpoint">
            <summary>
            Checkpoint.
            </summary>
        </member>
        <member name="F:BindOpen.System.Logging.EventKinds.Warning">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="F:BindOpen.System.Logging.EventKinds.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:BindOpen.System.Logging.EventKinds.Exception">
            <summary>
            Exception.
            </summary>
        </member>
        <member name="F:BindOpen.System.Logging.EventKinds.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:BindOpen.System.Logging.EventKinds.Any">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:BindOpen.System.Logging.EventKindExtensions">
            <summary>
            This class represents a event kind extension.
            </summary>
        </member>
        <member name="M:BindOpen.System.Logging.EventKindExtensions.Max(System.Collections.Generic.IEnumerable{BindOpen.System.Logging.EventKinds})">
            <summary>
            Gets the maximum kind of events of the specified event kinds.
            </summary>
            <param key="eventKinds">The event kinds to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.System.Logging.EventKindExtensions.Has(System.Collections.Generic.IEnumerable{BindOpen.System.Logging.EventKinds},BindOpen.System.Logging.EventKinds)">
            <summary>
            Gets the maximum kind of events of the specified event kinds.
            </summary>
            <param key="eventKinds">The event kinds to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.System.Logging.EventKindExtensions.Max(BindOpen.System.Logging.EventKinds,BindOpen.System.Logging.EventKinds)">
            <summary>
            Gets the maximum between the two specified event kinds.
            </summary>
            <param key="eventKind1">The first event kind to consider.</param>
            <param key="eventKind2">The second event kind to consider.</param>
            <returns>True if the first event kind is greater than the second one.</returns>
        </member>
        <member name="M:BindOpen.System.Logging.EventKindExtensions.IsGreaterThan(BindOpen.System.Logging.EventKinds,BindOpen.System.Logging.EventKinds)">
            <summary>
            Indicates whether the first event kind is greater than the second one.
            </summary>
            <param key="eventKind1">The first event kind to consider.</param>
            <param key="eventKind2">The second event kind to consider.</param>
            <returns>True if the first event kind is greater than the second one.</returns>
        </member>
        <member name="T:BindOpen.System.Logging.IBdoLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Logging.IBdoLog.ResultCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Logging.IBdoLog.TaskConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLog.NewLog">
            <summary>
            Creates a new instance of IBdoLog.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLog.AddChild(BindOpen.System.Logging.IBdoLog,BindOpen.System.Logging.EventKinds,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            
            </summary>
            <param key="childLog"></param>
            <param key="logFinder"></param>
            <param key="eventKind"></param>
            <param key="title"></param>
            <param key="criticality"></param>
            <param key="description"></param>
            <param key="resultCode"></param>
            <param key="source"></param>
            <param key="date"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLog.AddEvent(BindOpen.System.Logging.EventKinds,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            
            </summary>
            <param key="kind"></param>
            <param key="title"></param>
            <param key="criticality"></param>
            <param key="description"></param>
            <param key="resultCode"></param>
            <param key="source"></param>
            <param key="date"></param>
            <param key="childLog"></param>
            <param key="logFinder"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLog.HasEvent(System.Boolean,BindOpen.System.Logging.EventKinds[])">
            <summary>
            
            </summary>
            <param key="isRecursive"></param>
            <param key="kinds"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLog.RemoveEvents(System.Boolean,BindOpen.System.Logging.EventKinds[])">
            <summary>
            
            </summary>
            <param key="isRecursive"></param>
            <param key="kinds"></param>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLog.Sanitize">
            <summary>
            Creates a new instance of IBdoLog.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BindOpen.System.Logging.IBdoLog.Execution">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Logging.IBdoLogExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLogExtensions.WithChildren``1(``0,BindOpen.System.Logging.IBdoLog[])">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLogExtensions.WithExecution``1(``0,BindOpen.System.Processing.IBdoProcessExecution)">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLogExtensions.HasEvent``1(``0,BindOpen.System.Logging.EventKinds[])">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Logging.IBdoLogged">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Logging.IBdoLogged.Log">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Logging.IBdoLoggedExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Logging.IBdoLoggedExtensions.WithLog``1(``0,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Processing.ProcessExecutionState">
            <summary>
            This enumeration represents the possible process execution states.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionState.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionState.Pending">
            <summary>
            Pending.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionState.Ended">
            <summary>
            Ended.
            </summary>
        </member>
        <member name="T:BindOpen.System.Processing.ProcessExecutionStatus">
            <summary>
            This enumeration represents the possible process execution statuses.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.NothingDone">
            <summary>
            Nothing done.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.Processing">
            <summary>
            Processing.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.Waiting">
            <summary>
            Waiting.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.Paused">
            <summary>
            Paused.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.Queueing">
            <summary>
            Queueing.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.Stopped">
            <summary>
            Stopped.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.Stopped_Exception">
            <summary>
            Stopped with exceptions (system error).
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.Stopped_Error">
            <summary>
            Stopped with errors (config error).
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.Stopped_User">
            <summary>
            Stopped by user.
            </summary>
        </member>
        <member name="F:BindOpen.System.Processing.ProcessExecutionStatus.Completed">
            <summary>
            Completed.
            </summary>
        </member>
        <member name="T:BindOpen.System.Processing.ProcessExeuctionStateExtensions">
            <summary>
            This class represents a event kind extension.
            </summary>
        </member>
        <member name="M:BindOpen.System.Processing.ProcessExeuctionStateExtensions.ToState(System.String)">
            <summary>
            Get the process execution state.
            </summary>
            <param name="st">The execution state string.</param>
        </member>
        <member name="M:BindOpen.System.Processing.ProcessExeuctionStateExtensions.ToState(BindOpen.System.Processing.ProcessExecutionStatus)">
            <summary>
            Get the process execution statuse corresponding to the specified state.
            </summary>
            <param name="status">The status to consider.</param>
        </member>
        <member name="T:BindOpen.System.Processing.ProcessExeuctionStatusExtensions">
            <summary>
            This class represents a event kind extension.
            </summary>
        </member>
        <member name="M:BindOpen.System.Processing.ProcessExeuctionStatusExtensions.ToStatus(System.String)">
            <summary>
            Get the process execution status.
            </summary>
            <param name="st">The execution status string.</param>
        </member>
        <member name="M:BindOpen.System.Processing.ProcessExeuctionStatusExtensions.ToStatuses(BindOpen.System.Processing.ProcessExecutionState)">
            <summary>
            Get the process execution statuses corresponding to the specified state.
            </summary>
            <param name="state">The state to consider.</param>
        </member>
        <member name="M:BindOpen.System.Processing.ProcessExeuctionStatusExtensions.ToDefaultStatus(BindOpen.System.Processing.ProcessExecutionState)">
            <summary>
            Gets the default status of the specified state.
            </summary>
            <param name="state">The state to consider.</param>
        </member>
        <member name="T:BindOpen.System.Processing.IBdoProcess">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcess.ExecuteAsync(System.Threading.CancellationToken,BindOpen.System.Scoping.IBdoScope,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Data.RuntimeModes,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet">The variable element set to consider.</param>
            <param key="runtimeMode"></param>
            <param key="log"></param>
        </member>
        <member name="T:BindOpen.System.Processing.IBdoProcessExecution">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.CustomStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.Duration">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.EndDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.ProgressIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.ProgressMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.RestartDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.ResultLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.StartDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Processing.IBdoProcessExecution.Status">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Processing.IBdoProcessExecutionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithCustomStatus``1(``0,System.String)">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithEndDate``1(``0,System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithLocation``1(``0,System.String)">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithProgressIndex``1(``0,System.Single)">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithProgressMax``1(``0,System.Single)">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithRestartDate``1(``0,System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithResultLevel``1(``0,System.Int32)">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithStartDate``1(``0,System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithState``1(``0,BindOpen.System.Processing.ProcessExecutionState)">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.WithStatus``1(``0,BindOpen.System.Processing.ProcessExecutionStatus)">
            <summary>
            
            </summary>
            <param name="execution"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.SetAsRestarted``1(``0)">
            <summary>
            Restarts this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.SetAsResumed``1(``0)">
            <summary>
            Resumes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Processing.IBdoProcessExecutionExtensions.SetAsPaused``1(``0)">
            <summary>
            Resumes this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.Application.IAppDomainPool">
            <summary>
            This interface defines an assembly pool.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Application.IAppDomainPool.GetAppDomain(System.String)">
            <summary>
            Gets the specified application domain.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoConnectorAttribute">
            <summary>
            This class represents an attribute of connectors.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoConnectorAttribute.#ctor">
            <summary>
            Instantiates a new instance of the ConnectorAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoConnected">
            <summary>
            This interfaces represents a connected service.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoConnected.Connector">
            <summary>
            The connector of the service.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoConnectedExtensions">
            <summary>
            This interfaces represents a connected service.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoConnectedExtensions.WithConnector``1(``0,BindOpen.System.Scoping.IBdoConnector)">
            <summary>
            
            </summary>
            <param key="name"></param>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoConnection">
            <summary>
            This interfaces represents a connection.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoConnection.Connector">
            <summary>
            Connector.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoConnection.WithConnector(BindOpen.System.Scoping.IBdoConnector)">
            <summary>
            Sets the specified connector.
            </summary>
            <param key="connector">The connector to consider.</param>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoConnection.ConnectionString">
            <summary>
            The connection string.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoConnection.ConnectionTimeout">
            <summary>
            The connection timeout.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoConnection.State">
            <summary>
            The state.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoConnection.Connect(BindOpen.System.Logging.IBdoLog)">
            <summary>
            Opens a connection.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoConnection.Disconnect(BindOpen.System.Logging.IBdoLog)">
            <summary>
            Closes the existing connection.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoConnectorDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoConnectorDefinition.DatasourceKind">
            <summary>
            Data source kind of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoConnectorDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoConnector">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoConnector.ConnectionString">
            <summary>
            The connection string of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoConnector.ConnectionTimeOut">
            <summary>
            The connection timeout of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoConnector.NewConnection(BindOpen.System.Logging.IBdoLog)">
            <summary>
            Creates a new connection.
            </summary>
            <returns></returns>
            <param key="log">The log to consider.</param>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoConnectorExtensions">
            <summary>
            This interface represents an named data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoConnectorExtensions.WithConnectionString``1(``0,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoConnectorExtensions.WithConnectionTimeOut``1(``0,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoConnectorExtensions.UsingConnection``1(``0,System.Action{BindOpen.System.Scoping.IBdoConnection},System.Boolean,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Executes the specified function.
            </summary>
            <param key="action">The action using the created connection and the current log to consider.</param>
            <param key="isAutoConnected">Indicates whether the connection is automatically opened.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoConnectorExtensions.UsingConnection``1(``0,System.Action{BindOpen.System.Scoping.IBdoConnection,BindOpen.System.Logging.IBdoLog},System.Boolean,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Executes the specified function.
            </summary>
            <param key="action">The action using the created connection and the current log to consider.</param>
            <param key="log">The log to consider.</param>
            <param key="isAutoConnected">Indicates whether the connection is automatically opened.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Scoping.ITBdoConnector`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.ITBdoConnector`1.NewConnection(BindOpen.System.Logging.IBdoLog)">
            <summary>
            Creates a new connection.
            </summary>
            <returns></returns>
            <param key="log">The log to consider.</param>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoEntityAttribute">
            <summary>
            This class represents a entity attribute.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoEntityAttribute.#ctor">
            <summary>
            Instantiates a new instance of the EntityAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoEntityDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoEntityDefinition.ClassReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoEntityDefinition.RuntimeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoEntityDefinition.ViewerDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoEntityDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoEntity">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoFunctionAttribute">
            <summary>
            This class represents a script word attribute.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoFunctionAttribute.#ctor">
            <summary>
            Instantiates a new instance of the BdoScriptwordAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoFunctionDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoFunctionDefinition.AdditionalSpecs">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoFunctionDefinition.ParentDataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoFunctionDefinition.OutputDataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoFunctionDefinition.RuntimeClassType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoFunctionDefinition.RuntimeScopedFunction">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoFunctionDefinition.RuntimeBasicFunction">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoFunctionDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoFunctionDelegate">
            <summary>
            This delegate represents a script word delegate.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoFunctionDomainedDelegate">
            <summary>
            This delegate represents a script word domained delegate.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoTaskAttribute">
            <summary>
            This class represents an attribute of tasks.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoTaskAttribute.#ctor">
            <summary>
            Instantiates a new instance of the TaskAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoTaskDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoTaskDefinition.ClassReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoTaskDefinition.OutputSpecs">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoTaskDefinition.RuntimeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoTaskDefinition.MaximumIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoTaskDefinition.IsExecutable">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoTaskDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoTask">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoTaskExtensions">
            <summary>
            This class represents an application 
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.Script.IBdoScriptDomain">
            <summary>
            This class represents the script word domain.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.Script.IBdoScriptDomain.Scope">
            <summary>
            The scope of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.Script.IBdoScriptDomain.VariableSet">
            <summary>
            The variable element set of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.Script.IBdoScriptDomain.Scriptword">
            <summary>
            The script word of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.Script.IBdoScriptDomainExtensions">
            <summary>
            This interface represents an named data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptDomainExtensions.WithScope``1(``0,BindOpen.System.Scoping.IBdoScope)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptDomainExtensions.WithVariableSet``1(``0,BindOpen.System.Data.Meta.IBdoMetaSet)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptDomainExtensions.WithLog``1(``0,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptDomainExtensions.WithScriptword``1(``0,BindOpen.System.Scoping.Script.IBdoScriptword)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptDomainExtensions.IsScriptDomain(BindOpen.System.BdoDataType)">
            <summary>
            
            </summary>
            <param key="assemblyFileName"></param>
        </member>
        <member name="T:BindOpen.System.Scoping.Script.IBdoScriptInterpreter">
            <summary>
            This interface defines the script interpreter.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptInterpreter.Evaluate(BindOpen.System.Data.IBdoExpression,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="exp"></param>
            <param key="varSet">The variable element set to consider.</param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptInterpreter.Evaluate(BindOpen.System.Scoping.Script.IBdoScriptword,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="exp"></param>
            <param key="varSet">The variable element set to consider.</param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptInterpreter.Evaluate(BindOpen.System.Data.IBdoReference,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="exp"></param>
            <param key="varSet">The variable element set to consider.</param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptInterpreter.FindNextWord(System.String,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="script"></param>
            <param key="parentScriptword"></param>
            <param key="index"></param>
            <param key="offsetIndex"></param>
            <param key="varSet">The variable element set to consider.</param>
            <param key="isSimulationModeOn"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Scoping.Script.IBdoScriptInterpreterExtension">
            <summary>
            This static class provides methods to create script elements.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptInterpreterExtension.Evaluate``1(BindOpen.System.Scoping.Script.IBdoScriptInterpreter,BindOpen.System.Data.IBdoExpression,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Evaluates the specified script word using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param key="scriptword">The script word to consider.</param>
            <param key="varSet">The variable element set to use.</param>
            <param key="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptInterpreterExtension.Evaluate``1(BindOpen.System.Scoping.Script.IBdoScriptInterpreter,BindOpen.System.Scoping.Script.IBdoScriptword,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Evaluates the specified script word using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param key="scriptword">The script word to consider.</param>
            <param key="varSet">The variable element set to use.</param>
            <param key="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptInterpreterExtension.Evaluate``1(BindOpen.System.Scoping.Script.IBdoScriptInterpreter,BindOpen.System.Data.IBdoReference,BindOpen.System.Data.Meta.IBdoMetaSet,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Evaluates the specified script word using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param key="scriptword">The script word to consider.</param>
            <param key="varSet">The variable element set to use.</param>
            <param key="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="T:BindOpen.System.Scoping.Script.ScriptItemKinds">
            <summary>
            This enumeration lists the possible kinds of script items.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.Script.ScriptItemKinds.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.Script.ScriptItemKinds.Function">
            <summary>
            Function.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.Script.ScriptItemKinds.Variable">
            <summary>
            Variable.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.Script.ScriptItemKinds.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.Script.ScriptItemKinds.Syntax">
            <summary>
            Syntax.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.Script.ScriptItemKinds.Literal">
            <summary>
            Literal.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.Script.ScriptItemKinds.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.Script.ScriptItemKindsExtension">
            <summary>
            This class represents an specification level extension.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.ScriptItemKindsExtension.IsFunctionOrVariable(BindOpen.System.Scoping.Script.ScriptItemKinds)">
            <summary>
            Indicates whether the specified element kind is a script word kind.
            </summary>
            <param key="scriptItemKind">The kind to consider.</param>
            <returns>Returns true if the specified element is a script word kind.</returns>
        </member>
        <member name="T:BindOpen.System.Scoping.Script.IBdoScriptword">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.Script.IBdoScriptword.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.Script.IBdoScriptword.Child">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptword.Last(System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Scoping.Script.IBdoScriptwordExtensions">
            <summary>
            This interface represents an named data item.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptwordExtensions.WithKind``1(``0,BindOpen.System.Scoping.Script.ScriptItemKinds)">
            <summary>
            
            </summary>
            <param key="name"></param>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptwordExtensions.WithChild``1(``0,BindOpen.System.Scoping.Script.IBdoScriptword)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptwordExtensions.WithParent``1(``0,BindOpen.System.Scoping.Script.IBdoScriptword)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Script.IBdoScriptwordExtensions.IsScriptword(BindOpen.System.BdoDataType)">
            <summary>
            
            </summary>
            <param key="assemblyFileName"></param>
        </member>
        <member name="T:BindOpen.System.Scoping.Script.IScriptItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.Script.IScriptItem.Kind">
            <summary>
            The kind.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.Script.IScriptItem.Index">
            <summary>
            The index.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.Stores.IBdoExtensionStore">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.IBdoExtensionStore.Add(BindOpen.System.Scoping.IBdoExtensionDefinition)">
            <summary>
            Adds the specified definition.
            </summary>
            <param key="definition">The definition to add.</param>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.IBdoExtensionStore.GetDefinitions``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.IBdoExtensionStore.GetDefinition``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param key="uniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.IBdoExtensionStore.GetDefinition(BindOpen.System.Scoping.BdoExtensionKind,System.String)">
            <summary>
            
            </summary>
            <param key="uniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.IBdoExtensionStore.GetDefinitionFromType``1(BindOpen.System.Data.Assemblies.IBdoClassReference)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param key="uniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.IBdoExtensionStore.GetDefinitionFromType(BindOpen.System.Scoping.BdoExtensionKind,BindOpen.System.Data.Assemblies.IBdoClassReference)">
            <summary>
            
            </summary>
            <param key="uniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.IBdoExtensionStore.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.Stores.IBdoExtensionStoreLoader">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.IBdoExtensionStoreLoader.LoadPackages(BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the specified extensions into the specified scope.
            </summary>
            <param key="references">The library references to consider.</param>
            <param key="log">The log to populate.</param>
        </member>
        <member name="T:BindOpen.System.Scoping.DocumentTypes">
            <summary>
            This enumeration lists the possible kinds of script items.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.DocumentTypes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.DocumentTypes.Audio">
            <summary>
            Audio.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.DocumentTypes.Application">
            <summary>
            Application.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.DocumentTypes.Font">
            <summary>
            Font.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.DocumentTypes.Image">
            <summary>
            Image.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.DocumentTypes.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.DocumentTypes.Video">
            <summary>
            Video.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.DocumentTypes.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.MetaExtensionAttribute">
            <summary>
            This class represents an indexed data item attribute.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.MetaExtensionAttribute.Name">
            <summary>
            The name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.MetaExtensionAttribute.Title">
            <summary>
            The description of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.MetaExtensionAttribute.Description">
            <summary>
            The description of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.MetaExtensionAttribute.CreationDate">
            <summary>
            The creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.MetaExtensionAttribute.LastModificationDate">
            <summary>
            The last modification date of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.MetaExtensionAttribute.#ctor">
            <summary>
            Instantiates a new instance of the MetaExtensionAttribute class.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.MetaExtensionAttribute.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the MetaExtensionAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoExtensionDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDefinition.PackageDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDefinition.UniqueName">
            <summary>
            The unique ID of this instance.
            </summary> 
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDefinition.GroupId">
            <summary>
            Name of the group of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDefinition.ImageUri">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDefinition.IsEditable">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDefinition.IsIndexed">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDefinition.LibraryId">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoExtensionDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDictionary.Groups">
            <summary>
            The groups.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDictionary.LibraryId">
            <summary>
            ID of library.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionDictionary.LibraryName">
            <summary>
            Name of library.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoExtensionDictionaryExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoExtensionDictionaryExtensions.WithGroups``1(``0,BindOpen.System.Scoping.IBdoExtensionGroup[])">
            <summary>
            
            </summary>
            <param key="detail"></param>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoExtensionGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoExtensionGroup.SubGroups">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoExtensionGroup.GetGroupWithName(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoPackageDefinition">
            <summary>
            This interface defines the extension definition.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoPackageDefinition.AssemblyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoPackageDefinition.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoPackageDefinition.GetRootNamespace">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoPackageDefinition.GroupName">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoPackageDefinition.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoPackageDefinition.ItemIndexFullNameDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoPackageDefinition.RootNamespace">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoPackageDefinition.UsingAssemblyReferences">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.ITBdoExtensionDictionary`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoExtensionKind">
            <summary>
            This enumeration represents the possible kinds of library items.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionKind.Connector">
            <summary>
            Connector.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionKind.Entity">
            <summary>
            Entity.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionKind.Function">
            <summary>
            Function.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionKind.Task">
            <summary>
            Task.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoExtensionKindExtensions">
            <summary>
            This class represents an extension of the DataValueType enumeration.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoExtensionKindExtensions.GetExtensionKind(BindOpen.System.Scoping.IBdoExtensionDefinition)">
            <summary>
            Gets the extension item kind corresponding to the specified object.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoExtensionKindExtensions.GetExtensionKind(BindOpen.System.Scoping.IBdoExtension)">
            <summary>
            Gets the extension item kind corresponding to the specified object.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoExtensionKindExtensions.GetExtensionKind(System.Type)">
            <summary>
            Gets the extension item kind corresponding to the specified type.
            </summary>
            <param key="type">The type to consider.</param>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoExtensionKindExtensions.GetExtensionKind(BindOpen.System.Data.DataValueTypes)">
            <summary>
            
            </summary>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoExtensionViewerKind">
            <summary>
            This enumeration represents the possible kinds of library item viewers.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionViewerKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionViewerKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionViewerKind.Connector">
            <summary>
            Connector.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionViewerKind.Function">
            <summary>
            Function.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionViewerKind.Scriptword">
            <summary>
            Script word.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionViewerKind.Task">
            <summary>
            Task.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionViewerKind.DataQuery">
            <summary>
            Data query.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionViewerKind.DataClass">
            <summary>
            Data class.
            </summary>
        </member>
        <member name="F:BindOpen.System.Scoping.BdoExtensionViewerKind.FormatConfiguration">
            <summary>
            Data format.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoExtension">
            <summary>
            This class represents a BindOpen extension runtime item.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoExtensionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoScopeExtensions">
            <summary>
            This static class provides methods to create extension items.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoScopeExtensions.IsScope(BindOpen.System.BdoDataType)">
            <summary>
            
            </summary>
            <param key="assemblyFileName"></param>
        </member>
        <member name="T:BindOpen.System.Scoping.IExtensionLoadOptions">
            <summary>
            This interface defines the extension loading options.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IExtensionLoadOptions.Sources">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IExtensionLoadOptions.ExtensionKinds">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoScope">
            <summary>
            This interface defines an application scope.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoScope.AppDomain">
            <summary>
            The application domain.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoScope.ExtensionStore">
            <summary>
            The extension item definition store.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoScope.DataStore">
            <summary>
            The data store of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoScope.Interpreter">
            <summary>
            The data context.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoScope.CreateType(BindOpen.System.Data.Assemblies.IBdoClassReference,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="reference"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoScope.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.IBdoScope.Check(System.Boolean,System.Boolean,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param name="checkExtensionStore"></param>
            <param name="checkDataStore"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.System.Scoping.IBdoScoped">
            <summary>
            This interfaces represents a scoped service.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.IBdoScoped.Scope">
            <summary>
            The scope of the service.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.ITBdoScoped`1">
            <summary>
            This interfaces represents a scoped service.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.ITBdoScoped`1.WithScope(BindOpen.System.Scoping.IBdoScope)">
            <summary>
            Sets the specified scope.
            </summary>
            <param key="scope">The scope to consider.</param>
        </member>
    </members>
</doc>
