<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BindOpen.Data</name>
    </assembly>
    <members>
        <member name="T:BindOpen.Data.Conditions.AdvancedCondition">
            <summary>
            This class represents an advanced condition.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Conditions.AdvancedCondition.Kind">
            <summary>
            Kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Conditions.AdvancedCondition.Conditions">
            <summary>
            Conditions of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.AdvancedCondition.#ctor">
            <summary>
            Instantiates a new instance of the AdvancedCondition class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.AdvancedCondition.#ctor(BindOpen.Data.Conditions.ICondition[])">
            <summary>
            Instantiates a new instance of the AdvancedCondition class.
            </summary>
            <param key="conditions">The conditions to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Conditions.AdvancedCondition.#ctor(System.Boolean,BindOpen.Data.Conditions.ICondition[])">
            <summary>
            Instantiates a new instance of the AdvancedCondition class.
            </summary>
            <param key="trueValue">The true value to consider.</param>
            <param key="conditions">The conditions to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Conditions.AdvancedCondition.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <param key="areas">The areas to consider.</param>
        </member>
        <member name="T:BindOpen.Data.Conditions.BasicCondition">
            <summary>
            This class represents an basic condition.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Conditions.BasicCondition.Argument1">
            <summary>
            The arugment 1 of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Conditions.BasicCondition.Operator">
            <summary>
            The operator of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Conditions.BasicCondition.Argument2">
            <summary>
            The arugment 2 of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.BasicCondition.#ctor">
            <summary>
            Instantiates a new instance of the BasicCondition class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.BasicCondition.#ctor(System.Boolean)">
            <summary>
            Instantiates a new instance of the BasicCondition class.
            </summary>
            <param key="trueValue">The value that expresses that the condition is satisfied.</param>
        </member>
        <member name="M:BindOpen.Data.Conditions.BasicCondition.#ctor(System.String,BindOpen.Data.Conditions.ConditionOperator,System.String)">
            <summary>
            Instantiates a new instance of the BasicCondition class.
            </summary>
            <param key="arg1">The argument 1 to consider.</param>
            <param key="ope">The operator to consider.</param>
            <param key="arg2">The argument 2 to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Conditions.BasicCondition.#ctor(System.Boolean,System.String,BindOpen.Data.Conditions.ConditionOperator,System.String)">
            <summary>
            Instantiates a new instance of the BasicCondition class.
            </summary>
            <param key="trueValue">The value that expresses that the condition is satisfied.</param>
            <param key="arg1">The argument 1 to consider.</param>
            <param key="ope">The operator to consider.</param>
            <param key="arg2">The argument 2 to consider.</param>
        </member>
        <member name="T:BindOpen.Data.Conditions.Condition">
            <summary>
            This class represents a condition.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Conditions.Condition.TrueValue">
            <summary>
            The value that expresses that the condition is satisfied.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.Condition.#ctor">
            <summary>
            Instantiates a new instance of the Condition class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.Condition.#ctor(System.Boolean)">
            <summary>
            Instantiates a new instance of the Condition class.
            </summary>
            <param key="trueValue">The true value to consider.</param>
        </member>
        <member name="T:BindOpen.Data.Conditions.ConditionsExtensions">
            <summary>
            This static class provides methods to handle conditions.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.ConditionsExtensions.Evaluate(BindOpen.Data.Conditions.ICondition,BindOpen.Extensions.Scripting.IBdoScriptInterpreter,BindOpen.Data.Elements.IBdoElementSet)">
            <summary>
            Evaluate this instance.
            </summary>
            <param key="condition">The condition to consider.</param>
            <param key="scriptInterpreter">Script interpreter.</param>
            <param key="varSet">The variable element set used to evaluate.</param>
            <returns>True if this instance is true.</returns>
        </member>
        <member name="M:BindOpen.Data.Conditions.ConditionsExtensions.Evaluate(BindOpen.Data.Conditions.IAdvancedCondition,BindOpen.Extensions.Scripting.IBdoScriptInterpreter,BindOpen.Data.Elements.IBdoElementSet)">
            <summary>
            Evaluate this instance.
            </summary>
            <param key="condition">The condition to consider.</param>
            <param key="scriptInterpreter">Script interpreter.</param>
            <param key="varSet">The variable element set used to evaluate.</param>
            <returns>True if this instance is true.</returns>
        </member>
        <member name="M:BindOpen.Data.Conditions.ConditionsExtensions.Evaluate(BindOpen.Data.Conditions.IBasicCondition)">
            <summary>
            Evaluate this instance.
            </summary>
            <param key="condition">The condition to consider.</param>
            <param key="scriptInterpreter">Script interpreter.</param>
            <param key="varSet">The variable element set used to evaluate.</param>
            <returns>True if this instance is true.</returns>
        </member>
        <member name="M:BindOpen.Data.Conditions.ConditionsExtensions.Evaluate(BindOpen.Data.Conditions.IScriptCondition,BindOpen.Extensions.Scripting.IBdoScriptInterpreter,BindOpen.Data.Elements.IBdoElementSet)">
            <summary>
            Evaluate this instance.
            </summary>
            <param key="condition">The condition to consider.</param>
            <param key="scriptInterpreter">Script interpreter.</param>
            <param key="varSet">The variable element set used to evaluate.</param>
            <returns>True if the business script value is the true value.</returns>
        </member>
        <member name="T:BindOpen.Data.Conditions.ScriptCondition">
            <summary>
            This class represents a script condition.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.ScriptCondition.#ctor">
            <summary>
            Instantiates a new instance of the ScriptCondition class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.ScriptCondition.#ctor(System.Boolean,BindOpen.Data.IBdoExpression)">
            <summary>
            Instantiates a new instance of the ScriptCondition class.
            </summary>
            <param key="trueValue">The true value to consider.</param>
            <param key="exp">The exp to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Conditions.ScriptCondition.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Conditions.ScriptCondition.Expression">
            <summary>
            Expression script representing the condition.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Conditions.ScriptCondition.WithExpression(BindOpen.Data.IBdoExpression)">
            <summary>
            
            </summary>
            <param key="exp"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:BindOpen.Data.Configuration.BdoConfiguration">
            <summary>
            This class represents a config.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Configuration.BdoConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the BdoBaseConfiguration class.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Configuration.BdoConfiguration.UsedItemIds">
            <summary>
            The using file paths of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Configuration.BdoConfiguration.UsingConfiguration">
            <summary>
            The using config statement of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Configuration.BdoConfiguration.Using(System.String[])">
            <summary>
            Sets the file paths of this instance.
            </summary>
            <param key="filePaths">The file paths to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Configuration.BdoConfiguration.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.Data.Configuration.BdoConfiguration.CreationDate">
            <summary>
            Creation date of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Configuration.BdoConfiguration.WithCreationDate(System.Nullable{System.DateTime})">
            <summary>
            Creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Configuration.BdoConfiguration.LastModificationDate">
            <summary>
            Last modification date of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Configuration.BdoConfiguration.WithLastModificationDate(System.Nullable{System.DateTime})">
            <summary>
            Creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Configuration.BdoConfiguration.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Configuration.BdoConfiguration.WithName(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Configuration.BdoConfiguration.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.Data.Configuration.BdoConfigurationSet">
            <summary>
            This class represents a config.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Configuration.BdoConfigurationSet.#ctor">
            <summary>
            Instantiates a new instance of the BdoConfigurationSet class.
            </summary>
        </member>
        <member name="T:BindOpen.Data.Context.BdoDataContext">
            <summary>
            This class represents a data context. A data context contains all the data related to a user session.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Context.BdoDataContext.SingletonItems">
            <summary>
            Singletons.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Context.BdoDataContext.ScopedItems">
            <summary>
            Scoped items.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Context.BdoDataContext.TransientItems">
            <summary>
            Transient items.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Context.BdoDataContext.Id">
            <summary>
            ID of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.#ctor">
            <summary>
            Instantiates a new instance of DataContext class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.Merge(BindOpen.Data.Context.IBdoDataContext)">
            <summary>
            Merges this instance with the specified data context.
            </summary>
            <param key="dataContext">The data context to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.Clear">
            <summary>
            Clears all the data of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.AddItem(System.String,System.Object,System.String,BindOpen.Data.PersistenceLevels)">
            <summary>
            Adds a new item to this instance.
            </summary>
            <param key="name">Name of the item to add.</param>
            <param key="item">Item to add.</param>
            <param key="contextSectionName">Name of the context section to consider.</param>
            <param key="persistenceLevel">Persistence level of the item to add.</param>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.AddSystemItem(System.String,System.Object)">
            <summary>
            Adds a new system item to this instance.
            </summary>
            <param key="name">Name of the item to add.</param>
            <param key="item">The item to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.AddSingletonItem(System.String,System.Object,System.String)">
            <summary>
            Adds a new singleton item to this instance.
            </summary>
            <param key="name">Name of the item to add.</param>
            <param key="item">The item to consider.</param>
            <param key="contextSectionName">Name of the context section to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.AddScopedItem(System.String,System.Object,System.String)">
            <summary>
            Adds a new scoped item to this instance.
            </summary>
            <param key="name">Name of the item to add.</param>
            <param key="item">The item to consider.</param>
            <param key="contextSectionName">Name of the context section to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.AddTransientItem(System.String,System.Object,System.String)">
            <summary>
            Adds a new transient item to this instance.
            </summary>
            <param key="name">Name of the item to add.</param>
            <param key="item">The item to consider.</param>
            <param key="contextSectionName">Name of the context section to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.ClearItems(BindOpen.Data.PersistenceLevels)">
            <summary>
            Clears the specified items of this instance.
            </summary>
            <param key="persistenceLevel">Persistence level of the item to add.</param>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.RemoveItems(System.String,BindOpen.Data.PersistenceLevels)">
            <summary>
            Removes the singleton items of a specific type.
            </summary>
            <param key="contextSectionName">Name of the context section to consider.</param>
            <param key="persistenceLevel">The persistence level to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.GetSystemItem(System.String)">
            <summary>
            Returns a specific system item.
            </summary>
            <param key="name">Name of the dynamic item to return.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.GetSingletonItem(System.String,System.String)">
            <summary>
            Returns a specific singleton item.
            </summary>
            <param key="name">Name of the dynamic item to return.</param>
            <param key="contextSectionName">Name of the context section to consider.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.GetScopedItem(System.String,System.String)">
            <summary>
            Returns a specific scoped item.
            </summary>
            <param key="name">Name of the dynamic item to return.</param>
            <param key="contextSectionName">Name of the context section to consider.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.GetTransientItem(System.String,System.String)">
            <summary>
            Returns a specific transient item.
            </summary>
            <param key="name">Name of the dynamic item to return.</param>
            <param key="contextSectionName">Name of the context section to consider.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="M:BindOpen.Data.Context.BdoDataContext.GetItem(System.String,System.String,BindOpen.Data.PersistenceLevels)">
            <summary>
            Returns a specific item.
            </summary>
            <param key="name">Name of the dynamic item to return.</param>
            <param key="contextSectionName">Name of the context section to consider.</param>
            <param key="persistenceLevel">The persistence level to consider.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataElement">
            <summary>
            This class represents a data element.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.#ctor">
            <summary>
            Initializes a new data element.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new data element.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="namePreffix">The name preffix to consider.</param>
            <param key="id">The ID to consider.</param>
        </member>
        <member name="F:BindOpen.Data.Elements.BdoDataElement._item">
            <summary>
            The item of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.ValueType">
            <summary>
            The value type of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.ValueMode">
            <summary>
            The itemization mode of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.ItemReference">
            <summary>
            Item reference of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.ItemScript">
            <summary>
            The script of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.Specs">
            <summary>
            Specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.NewSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.IsCompatibleWithData(System.Object)">
            <summary>
            Indicates whether this instance is compatible with the specified item.
            </summary>
            <param key="item">The item to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.GetItem(BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Returns the item object of this instance.
            </summary>
            <param key="log">The log to populate.</param>
            <param key="scope">The scope to consider.</param>
            <param key="varSet">The variable element set to use.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.GetItem``1(BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <typeparam name="Q"></typeparam>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithValueMode(BindOpen.Data.DataValueMode)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithItemReference(BindOpen.Data.IBdoExpression)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithItemScript(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithDataValueType(BindOpen.Data.DataValueTypes)">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.GetSpecification(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithSpecifications(BindOpen.Data.Elements.IBdoDataElementSpec[])">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.ClearItem">
            <summary>
            Clears the item of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithItem(System.Object[])">
            <summary>
            Sets the item of this instance.
            </summary>
            <param key="item">The string item of this instance.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..</remarks>
            <returns>Returns True if the specified has been well added.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithIndex(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param key="index"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.Id">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithId(System.String)">
            <summary>
            
            </summary>
            <param key="id"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithName(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.Detail">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithDetail(BindOpen.Data.Elements.IBdoElementSet)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.WithDetail(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            
            </summary>
            <param key="detail"></param>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElement.Description">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElement.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
            <param key="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataElementExtension">
            <summary>
            This class represents a data 
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementExtension.Update(BindOpen.Data.Elements.IBdoDataElement,BindOpen.Data.Elements.IBdoDataElement,System.String[],BindOpen.Data.UpdateModes[],BindOpen.Logging.IBdoLog)">
            <summary>
            Updates this instance.
            </summary>
            <param key="item">The item to consider.</param>
            <param key="specificationAreas">The specification areas to consider.</param>
            <param key="updateModes">The update modes to consider.</param>
            <returns>ILog of the operation.</returns>
            <remarks>Put reference sets as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementExtension.Check(BindOpen.Data.Elements.IBdoDataElement,BindOpen.Data.Elements.IBdoDataElement,System.String[],System.Boolean,BindOpen.Logging.IBdoLog)">
            <summary>
            Checks this instance.
            </summary>
            <param key="isExistenceChecked">Indicates whether the entity existence is checked.</param>
            <param key="item">The item to consider.</param>
            <param key="specificationAreas">The specification areas to consider.</param>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementExtension.Repair(BindOpen.Data.Elements.IBdoDataElement,BindOpen.Data.Elements.IBdoDataElement,System.String[],BindOpen.Data.UpdateModes[],BindOpen.Logging.IBdoLog)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param key="item">The item to consider.</param>
            <param key="specificationAreas">The specification areas to consider.</param>
            <param key="updateModes">The update modes to consider.</param>
            <returns>ILog of the operation.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataElementSpec">
            <summary>
            This class represents a data element specification.
            </summary>
        </member>
        <member name="F:BindOpen.Data.Elements.BdoDataElementSpec.__AreaNames">
            <summary>
            Names of the attribute areas of the TBdoElementSpec class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.#ctor">
            <summary>
            Initializes a new instance of the BdoElementSpec class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.Condition">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithCondition(BindOpen.Data.Conditions.ICondition)">
            <summary>
            
            </summary>
            <param key="condition"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.Aliases">
            <summary>
            The aliases of the entry.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithAliases(System.String[])">
            <summary>
            
            </summary>
            <param key="aliases"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.IsAllocatable">
            <summary>
            Indicates whether the instance can be allocated.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.AsAllocatable(System.Boolean)">
            <summary>
            
            </summary>
            <param key="isAllocatable"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.ItemScript">
            <summary>
            The script of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithItemScript(System.String)">
            <summary>
            
            </summary>
            <param key="script"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.AvailableValueModes">
            <summary>
            The available itemization modes of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithAvailableValueModes(BindOpen.Data.DataValueMode[])">
            <summary>
            
            </summary>
            <param key="modes"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.DefaultItem">
            <summary>
            The default item of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.MinimumItemNumber">
            <summary>
            Minimum item number of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithMaximumItemNumber(System.Int32)">
            <summary>
            
            </summary>
            <param key="number"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.MaximumItemNumber">
            <summary>
            Maximum item number of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithMinimumItemNumber(System.Int32)">
            <summary>
            
            </summary>
            <param key="number"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.IsValueList">
            <summary>
            Indicates whether the value of this instance is a list.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.ItemRequirementLevel">
            <summary>
            The item requirement level of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.ItemSpecificationLevels">
            <summary>
            Levels of specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithItemSpecificationLevels(BindOpen.Data.SpecificationLevels[])">
            <summary>
            
            </summary>
            <param key="levels"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.ConstraintStatement">
            <summary>
            Data constraint statement of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithConstraintStatement(BindOpen.Data.Specification.IBdoConfigurationSet)">
            <summary>
            
            </summary>
            <param key="statement"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataElementSpec.SubSpecs">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithSubSpecs(BindOpen.Data.Elements.IBdoDataElementSpec[])">
            <summary>
            
            </summary>
            <param key="specs"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.AddSubSpecs(BindOpen.Data.Elements.IBdoDataElementSpec[])">
            <summary>
            
            </summary>
            <param key="specs"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.GetSubSpec(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.WithDefaultItem(System.Object)">
            <summary>
            
            </summary>
            <param key="item"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSpec.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
            <param key="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoEntity">
            <summary>
            This class represents a entity el.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntity.#ctor">
            <summary>
            Initializes a new instance of the EntityElement class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the EntityElement class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoEntity.DefinitionUniqueName">
            <summary>
            The definition unique ID of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntity.WithDefinitionUniqueName(System.String)">
            <summary>
            
            </summary>
            <param key="definitionUniqueName"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntity.WithItem(BindOpen.Extensions.Entities.IBdoConfiguration[])">
            <summary>
            Sets a new single item of this instance.
            </summary>
            <param key="item">The string item of this instance.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..</remarks>
            <returns>Returns True if the specified has been well added.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntity.BindOpen#MetaData#Elements#IBdoDataElement#NewSpecification">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntity.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntity.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoEntitySpec">
            <summary>
            This class represents a entity element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntitySpec.#ctor">
            <summary>
            Initializes a new instance of the EntityElementSpec class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntitySpec.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoEntitySpec.DefinitionFilter">
            <summary>
            The definition filter of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntitySpec.WithDefinitionFilter(BindOpen.Data.Specification.IStringSet)">
            <summary>
            
            </summary>
            <param key="filter"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoEntitySpec.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
            <param key="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataObject">
            <summary>
            This class represents a catalog el that is an el whose els are carriers.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataObject.Item(System.Int32)">
            <summary>
            Returns the el with the specified indexed.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataObject.Item(System.String)">
            <summary>
            
            </summary>
            <param key="key"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataObject.Count">
            <summary>
            Returns the number of items.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.#ctor">
            <summary>
            Initializes a new instance of the CollectionElement class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CollectionElement class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.BindOpen#MetaData#Elements#IBdoDataElement#NewSpecification">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.WithId(System.String)">
            <summary>
            
            </summary>
            <param key="id"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.Get(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.Get``1(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.Get``1(System.Int32)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="index">The index to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.ToArray">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.ToList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.GetEnumerator">
            <summary>
            Indicates the enumerator of this instance.
            </summary>
            <returns>Returns the enumerator of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Indicates the enumerator of this instance.
            </summary>
            <returns>Returns the enumerator of this instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataObjectSpec">
            <summary>
            This class represents a catalog element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObjectSpec.#ctor">
            <summary>
            Initializes a new instance of the CollectionElementSpec class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObjectSpec.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataObjectSpec.ClassFilter">
            <summary>
            The class filter of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObjectSpec.WithClassFilter(BindOpen.Data.Specification.IStringSet)">
            <summary>
            
            </summary>
            <param key="filter"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataObjectSpec.DefinitionFilter">
            <summary>
            The definition filter of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObjectSpec.WithDefinitionFilter(BindOpen.Data.Specification.IStringSet)">
            <summary>
            
            </summary>
            <param key="filter"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataObject">
            <summary>
            This class represents a object element that is an element whose items are carriers.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.#ctor">
            <summary>
            Initializes a new instance of the ObjectElement class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ObjectElement class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataObject.DefinitionUniqueName">
            <summary>
            The definition unique ID of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataObject.ClassFullName">
            <summary>
            The class full name of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.BindOpen#MetaData#Elements#IBdoDataElement#NewSpecification">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.WithItem(System.Object[])">
            <summary>
            Adds a new single item of this instance.
            </summary>
            <param key="objs">The string item of this instance.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..</remarks>
            <returns>Returns True if the specified has been well added.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObject.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataObjectSpec">
            <summary>
            This class represents an object element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObjectSpec.#ctor">
            <summary>
            Initializes a new instance of the ObjectElementSpec class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObjectSpec.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataObjectSpec.ClassFilter">
            <summary>
            The class filter of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObjectSpec.WithClassFilter(BindOpen.Data.Specification.IStringSet)">
            <summary>
            
            </summary>
            <param key="filter"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataObjectSpec.DefinitionFilter">
            <summary>
            The definition filter of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataObjectSpec.WithDefinitionFilter(BindOpen.Data.Specification.IStringSet)">
            <summary>
            
            </summary>
            <param key="filter"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataScalar">
            <summary>
            This class represents a scalar element that is an element whose items are scalars.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataScalar.op_Explicit(System.String)~BindOpen.Data.Elements.BdoDataScalar">
            <summary>
            Converts from string.
            </summary>
            <param key="st">The string to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataScalar.op_Explicit(BindOpen.Data.Elements.BdoDataScalar)~System.String">
            <summary>
            Converts to string.
            </summary>
            <param key="element">The element to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataScalar.#ctor">
            <summary>
            Initializes a new instance of the ScalarElement class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataScalar.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ScalarElement class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataScalar.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataScalar.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataScalarSpec">
            <summary>
            This class represents a scalar element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataScalarSpec.#ctor">
            <summary>
            Initializes a new instance of the ScalarElementSpec class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataScalarSpec.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataElementSet">
            <summary>
            This class represents a data element set.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BindOpen.Data.Elements.BdoDataElementSet.op_Implicit(BindOpen.Data.Elements.IBdoDataElement[])~BindOpen.Data.Elements.BdoDataElementSet" -->
        <member name="M:BindOpen.Data.Elements.BdoDataElementSet.#ctor">
            <summary>
            Instantiates a new instance of the BdoElementSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSet.Get(System.String,System.String)">
            <summary>
            Returns the item with the specified name and group ID.
            </summary>
            <param key="key">The name of the item to return.</param>
            <param key="groupId">The ID of the group of the item to return.</param>
            <returns>Returns the item with the specified name and group ID.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSet.GetSpecIds">
            <summary>
            Gets all the element groups IDs.
            </summary>
            <returns>Returns all the element group IDs.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSet.GetItem(System.String,BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Returns the item object of this instance.
            </summary>
            <param key="key">The element key to consider.</param>
            <param key="scope">The scope to consider.</param>
            <param key="varSet">The variable element set to use.</param>
            <param key="log">The log to populate.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSet.GetItem``1(System.String,BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Returns the item object of this instance.
            </summary>
            <param key="key">The element key to consider.</param>
            <param key="log">The log to populate.</param>
            <param key="scope">The scope to consider.</param>
            <param key="varSet">The variable element set to use.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSet.GetItemList(System.String,BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="key">The element key to consider.</param>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSet.GetItemList``1(System.String,BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <typeparam name="Q"></typeparam>
            <param key="key">The element key to consider.</param>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSet.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataElementSetExtension">
            <summary>
            This class represents a data element set.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSetExtension.AsElementSet(System.Object)">
            <summary>
            Creates a data element set from a dynamic object.
            </summary>
            <param key="obj">The objet to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSetExtension.AsElementSet``1(System.Object)">
            <summary>
            Creates a data element set from a dynamic object.
            </summary>
            <param key="obj">The objet to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSetExtension.Update(BindOpen.Data.Elements.IBdoElementSet,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Data.UpdateModes[],System.String[],BindOpen.Logging.IBdoLog)">
            <summary>
            Updates this instance.
            </summary>
            <param key="item">The item to consider.</param>
            <param key="specAreas">The specification areas to consider.</param>
            <param key="updateModes">The update modes to consider.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference sets as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSetExtension.Update(BindOpen.Data.Elements.IBdoElementSet,BindOpen.Data.Elements.IBdoMetaSpecSet,BindOpen.Data.UpdateModes[],System.String[],BindOpen.Logging.IBdoLog)">
            <summary>
            Updates this instance.
            </summary>
            <param key="item">The item to consider.</param>
            <param key="specAreas">The specification areas to consider.</param>
            <param key="updateModes">The update modes to consider.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference sets as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSetExtension.Check(BindOpen.Data.Elements.IBdoElementSet,BindOpen.Data.Elements.IBdoElementSet,System.String[],System.Boolean,BindOpen.Logging.IBdoLog)">
            <summary>
            Checks this instance.
            </summary>
            <param key="isExistenceChecked">Indicates whether the entity existence is checked.</param>
            <param key="item">The item to consider.</param>
            <param key="specAreas">The specification areas to consider.</param>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataElementSetExtension.Repair(BindOpen.Data.Elements.IBdoElementSet,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Data.UpdateModes[],System.String[],BindOpen.Logging.IBdoLog)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param key="item">The item to consider.</param>
            <param key="specAreas">The specification areas to consider.</param>
            <param key="updateModes">The update modes to consider.</param>
            <returns>Log of the operation.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataSpecSet">
            <summary>
            This class represents a set of data element specifications.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSpecSet.#ctor">
            <summary>
            Initializes a new instance of the BdoMetaSpecSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSpecSet.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataSource">
            <summary>
            This class represents a data source element.
            </summary>
            <remarks>A data source element can only have one item maximum.</remarks>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSource.#ctor">
            <summary>
            Initializes a new instance of the SourceElement class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSource.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SourceElement class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataSource.DefinitionUniqueName">
            <summary>
            The definition unique ID of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSource.WithDefinitionUniqueName(System.String)">
            <summary>
            
            </summary>
            <param key="definitionUniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSource.BindOpen#MetaData#Elements#IBdoDataElement#NewSpecification">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSource.WithItem(BindOpen.Extensions.Connectors.IBdoConfiguration)">
            <summary>
            Sets a new single item of this instance.
            </summary>
            <param key="item">The string item of this instance.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..</remarks>
            <returns>Returns True if the specified has been well added.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSource.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSource.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Elements.BdoDataSourceSpec">
            <summary>
            This class represents a data source element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSourceSpec.#ctor">
            <summary>
            Initializes a new data source element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.BdoDataSourceSpec.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataSourceSpec.DatasourceKind">
            <summary>
            The data source kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Elements.BdoDataSourceSpec.DefinitionFilter">
            <summary>
            The definition filter of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Data.Elements.TBdoDataElement`3">
            <summary>
            This class represents a data element.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.#ctor">
            <summary>
            Initializes a new instance of the TBdoElement class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new data element.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="namePreffix">The name preffix to consider.</param>
            <param key="id">The ID to consider.</param>
        </member>
        <member name="P:BindOpen.Data.Elements.TBdoDataElement`3.Specs">
            <summary>
            Data constraint statement of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.GetSpecification(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.NewSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.ClearItem">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.WithIndex(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param key="index"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.WithValueMode(BindOpen.Data.DataValueMode)">
            <summary>
            
            </summary>
            <param key="mode"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.WithItemReference(BindOpen.Data.IBdoExpression)">
            <summary>
            
            </summary>
            <param key="reference"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.WithItemScript(System.String)">
            <summary>
            
            </summary>
            <param key="script"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.WithDataValueType(BindOpen.Data.DataValueTypes)">
            <summary>
            
            </summary>
            <param key="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.WithSpecifications(BindOpen.Data.Elements.IBdoDataElementSpec[])">
            <summary>
            
            </summary>
            <param key="spec"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.WithItem(`2[])">
            <summary>
            Sets the item of this instance.
            </summary>
            <param key="item">The string item of this instance.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..</remarks>
            <returns>Returns True if the specified has been well added.</returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.GetItemList(BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Elements.TBdoDataElement`3.GetFirstItem(BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Data.BdoData">
            <summary>
            This static class provides methods to handle configs.
            </summary>
            <summary>
            This static class provides methods to create data elems.
            </summary>
            <summary>
            This static class provides methods to create element specifications.
            </summary>
            <summary>
            This static class provides methods to create element specifications.
            </summary>
            <summary>
            This static class provides methods to create data els.
            </summary>
            <summary>
            This static class provides methods to create data elems.
            </summary>
            <summary>
            This static class provides methods to create data els.
            </summary>
            <summary>
            This static class provides methods to create data elems.
            </summary>
            <summary>
            This static class provides methods to create data element set.
            </summary>
            <summary>
            This static class provides methods to create data els.
            </summary>
            <summary>
            This class represents a data item factory.
            </summary>
            <example>Titles, Descriptions.</example>
            <summary>
            This class represents a data item factory.
            </summary>
            <example>Titles, Descriptions.</example>
            <summary>
            This class represents a data item factory.
            </summary>
            <example>Titles, Descriptions.</example>
            <summary>
            This class represents a data exp that can contain a literal and script texts.
            </summary>
            <summary>
            This class represents a data item factory.
            </summary>
            <example>Titles, Descriptions.</example>
        </member>
        <member name="M:BindOpen.Data.BdoConfig.NewBundle(BindOpen.Abstractions.Meta.Configuration.IBdoConfiguration[])">
            <summary>
            Instantiates a new instance of the BdoConfigurationSet class.
            </summary>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoConfig.New(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Instantiates a new instance of the BdoBaseConfiguration class.
            </summary>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoConfig.New(System.String,BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Instantiates a new instance of the BdoBaseConfiguration class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoConfig.New(System.String,System.String[],BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Instantiates a new instance of the BdoBaseConfiguration class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoConfig.New``1(System.String,BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Instantiates a new instance of the BdoBaseConfiguration class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoConfig.New``1(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Instantiates a new instance of the BdoBaseConfiguration class.
            </summary>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoConfig.New``1(System.String,System.String[],BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Instantiates a new instance of the BdoBaseConfiguration class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoMeta.New(System.String,System.Object[])">
            <summary>
            Creates a data element with specified items.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoMeta.New(System.String,BindOpen.Data.DataValueTypes,System.Object[])">
            <summary>
            Creates a data element with specified items.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewElement``1(System.String,System.Object[])">
            <summary>
            Creates a data element with specified items.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSpec(System.String,BindOpen.Data.DataValueTypes)">
            <summary>
            Creates a data element of the specified kind.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="valueType">The value type to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSpec(System.String,System.Type)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <param key="type"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSpec``1(System.String)">
            <summary>
            Creates a data element of the specified kind.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="valueType">The value type to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSpec``2(System.String)">
            <summary>
            Creates a data element of the specified kind.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="type">The value type to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSpec``1(System.String,System.Type)">
            <summary>
            Creates a data element of the specified kind.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="type">The value type to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewScalarSpec``1(System.String)">
            <summary>
            Creates a data element of the specified kind.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="valueType">The value type to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSpecSet(BindOpen.Data.Elements.IBdoDataElementSpec[])">
            <summary>
            Instantiates a new instance of the BdoElementSet class.
            </summary>
            <param key="specs">The elems to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSpecSet``1(BindOpen.Data.Elements.IBdoDataElementSpec[])">
            <summary>
            Instantiates a new instance of the BdoElementSet class.
            </summary>
            <param key="elems">The elems to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewEntity(System.String,System.String)">
            <summary>
            Initializes a new entity el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="definitionUniqueName ">The definition unique ID to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewEntity(System.String,BindOpen.Extensions.Entities.IBdoConfiguration)">
            <summary>
            Initializes a new entity el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="item">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewEntity``1(System.String,System.String)">
            <summary>
            Initializes a new entity el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="definitionUniqueName ">The definition unique ID to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewEntity``1(System.String,BindOpen.Extensions.Entities.IBdoConfiguration)">
            <summary>
            Initializes a new entity el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="item">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewCollection(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Initializes a new entity el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="definitionUniqueName ">The definition unique ID to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewCollection(BindOpen.Data.Elements.IBdoDataElement[][])">
            <summary>
            Initializes a new entity el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="definitionUniqueName ">The definition unique ID to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewCollection(System.String,BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Initializes a new entity el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
            <param key="item">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewCollection(System.String,BindOpen.Data.Elements.IBdoDataElement[][])">
            <summary>
            Initializes a new entity el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
            <param key="item">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewCollection``1(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Initializes a new set el.
            </summary>
            <param key="elems">The elems to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewCollection``1(BindOpen.Data.Elements.IBdoDataElement[][])">
            <summary>
            Initializes a new set el.
            </summary>
            <param key="elems">The elems to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewCollection``1(System.String,BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Initializes a new set el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="elems">The elems to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewCollection``1(System.String,BindOpen.Data.Elements.IBdoDataElement[][])">
            <summary>
            Initializes a new set el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="elems">The elems to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewObject(System.String,System.Object[])">
            <summary>
            Initializes a new object el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewObject(System.Object[])">
            <summary>
            Initializes a new object el.
            </summary>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewObject(System.String,System.String,System.Object[])">
            <summary>
            Initializes a new object el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="classFullName">The class full name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewObject``1(System.String,System.Object[])">
            <summary>
            Initializes a new object el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewObject``1(System.Object[])">
            <summary>
            Initializes a new object el.
            </summary>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewObject``1(System.String,System.String,System.Object[])">
            <summary>
            Initializes a new object el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
            <param key="classFullName">The class full name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewScalar(System.Object[])">
            <summary>
            Creates a new instance of the ScalarElement class.
            </summary>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewScalar(BindOpen.Data.DataValueTypes,System.Object[])">
            <summary>
            Creates a new instance of the ScalarElement class.
            </summary>
            <param key="valueType">The value type to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewScalar(System.String,System.Object[])">
            <summary>
            Creates a new instance of the ScalarElement class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewScalar(System.String,BindOpen.Data.DataValueTypes,System.Object[])">
            <summary>
            Creates a new instance of the ScalarElement class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="valueType">The value type to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewScalar``1(System.Object[])">
            <summary>
            Creates a new instance of the ScalarElement class.
            </summary>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewScalar``1(System.String,System.Object[])">
            <summary>
            Creates a new instance of the ScalarElement class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewScalar``1(System.String,BindOpen.Data.DataValueTypes,System.Object[])">
            <summary>
            Creates a new instance of the ScalarElement class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="valueType">The value type to consider.</param>
            <param key="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSet">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewList(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <param key="elems">The parameters to consider.</param>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewList(System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <param key="pairs">The pairs to consider.</param>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewList(System.ValueTuple{System.String,BindOpen.Data.DataValueTypes,System.Object}[])">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <param key="pairs">The pairs to consider.</param>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewList(System.Object[])">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <param key="objects">The parameters to consider.</param>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewList(System.String)">
            <summary>
            Creates a new instance of the IBdoElementSet class.
            </summary>
            <param key="stringObject">The string to consider.</param>
            <returns>The set.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSet``1">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSet``1(BindOpen.Data.Elements.IBdoDataElement[])">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <param key="elems">The parameters to consider.</param>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSet``1(System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <param key="pairs">The pairs to consider.</param>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSet``1(System.ValueTuple{System.String,BindOpen.Data.DataValueTypes,System.Object}[])">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <param key="pairs">The pairs to consider.</param>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSet``1(System.Object[])">
            <summary>
            Defines the parameters of this instance.
            </summary>
            <param key="objects">The parameters to consider.</param>
            <returns>Return this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSet``1(System.String)">
            <summary>
            Creates a new instance of the IBdoElementSet class.
            </summary>
            <param key="stringObject">The string to consider.</param>
            <returns>The set.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSource(System.String,System.String,System.String)">
            <summary>
            Initializes a new source el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
            <param key="definitionUniqueName ">The definition unique ID to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSource(System.String,BindOpen.Extensions.Connectors.IBdoConfiguration)">
            <summary>
            Initializes a new source el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="item">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSource(System.String,System.String,BindOpen.Extensions.Connectors.IBdoConfiguration)">
            <summary>
            Initializes a new source el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
            <param key="item">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSource``1(System.String,System.String,System.String)">
            <summary>
            Initializes a new source el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
            <param key="definitionUniqueName ">The definition unique ID to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSource``1(System.String,BindOpen.Extensions.Connectors.IBdoConfiguration)">
            <summary>
            Initializes a new source el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="item">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewSource``1(System.String,System.String,BindOpen.Extensions.Connectors.IBdoConfiguration)">
            <summary>
            Initializes a new source el.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="id">The ID to consider.</param>
            <param key="item">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.ToKeyValues(System.String)">
            <summary>
            Get the key values from the specified string.
            </summary>
            <param key="st">The string to consider.</param>
            <returns>Returns the added string items.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewName(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <param key="namePreffix"></param>
            <param key="asClone"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewDatasource(BindOpen.Data.DatasourceKind,BindOpen.Extensions.Connectors.IBdoConfiguration[])">
            <summary>
            Instantiates a new instance of the Datasource class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="kind">The kind of the data source to consider.</param>
            <param key="configs">The config items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewDatasource(System.String,BindOpen.Data.DatasourceKind,BindOpen.Extensions.Connectors.IBdoConfiguration[])">
            <summary>
            Instantiates a new instance of the Datasource class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="kind">The kind of the data source to consider.</param>
            <param key="configs">The config items to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewDatasourceDepot(BindOpen.Data.IBdoDataSource[])">
            <summary>
            Instantiates a new instance of the Datasource class.
            </summary>
            <param key="name">The name to consider.</param>
            <param key="kind">The kind of the data source to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewDictionary">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class specifying the values.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewDictionary(System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class specifying the values.
            </summary>
            <param key="values">The values to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewDictionary(System.ValueTuple{System.String,System.String}[])">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class specifying the values.
            </summary>
            <param key="values">The values to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewDictionary(System.String)">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class specifying the values.
            </summary>
            <param key="values">The values to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewKeyPair(System.String,System.String)">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class specifying the values.
            </summary>
            <param key="values">The values to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewExpression(System.String,BindOpen.Data.BdoExpressionKind)">
            <summary>
            Creates the exp.
            </summary>
            <param key="kind">The kind of exp to consider.</param>
            <param key="text">The text to consider.</param>
            <returns>Returns the created exp.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewExpression(BindOpen.Extensions.Scripting.IBdoScriptword)">
            <summary>
            Creates the exp.
            </summary>
            <param key="word">The word of exp to consider.</param>
            <returns>Returns the created exp.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewList``2(``1[])">
            <summary>
            Instantiates a new instance of the DataList class.
            </summary>
            <param key="items">The items to consider.</param>
            <typeparam name="Q">The data item set type to consider.</typeparam>
            <typeparam name="T">The identified data item to consider.</typeparam>
        </member>
        <member name="M:BindOpen.Data.BdoData.NewList``1(``0[])">
            <summary>
            Instantiates a new instance of the DataList class.
            </summary>
            <param key="items">The items to consider.</param>
            <typeparam name="T">The class of the named data items.</typeparam>
        </member>
        <member name="T:BindOpen.Data.BdoItem">
            <summary>
            This class represents a data item.
            </summary>
            <remarks>The data item has only an ID, a creation and a last-modification dates.</remarks>
        </member>
        <member name="M:BindOpen.Data.BdoItem.#ctor">
            <summary>
            Instantiates a new instance of the DataItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoItem.Finalize">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoItem.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <param key="areas">The areas to consider.</param>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoItem.Clone``1(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <param key="areas">The areas to consider.</param>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoItem.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoItem.Dispose(System.Boolean)">
            <summary>
            Disposes specifying whether this instance is disposing.
            </summary>
            <param key="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Data.BdoDatasource">
            <summary>
            This class represents a data source.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.#ctor">
            <summary>
            This instantiates a new instance of the Datasource class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.#ctor(System.String)">
            <summary>
            This instantiates a new instance of the Datasource class.
            </summary>
            <param key="name">The name to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="P:BindOpen.Data.BdoDatasource.Kind">
            <summary>
            Kind of the data module of this instance. 
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.WithKind(BindOpen.Data.DatasourceKind)">
            <summary>
            Sets the specified kind of this instance. 
            </summary>
            <param key="kind">The kind to consider.</param>
        </member>
        <member name="P:BindOpen.Data.BdoDatasource.ModuleName">
            <summary>
            The module name of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.WithModuleName(System.String)">
            <summary>
            Sets the specified module name of this instance. 
            </summary>
            <param key="moduleName">The module name to consider.</param>
        </member>
        <member name="P:BindOpen.Data.BdoDatasource.IsDefault">
            <summary>
            Indicates whether this instance is default.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.AsDefault(System.Boolean)">
            <summary>
            Specifies that this instance is the default. 
            </summary>
            <param key="isDefault"></param>
        </member>
        <member name="P:BindOpen.Data.BdoDatasource.InstanceName">
            <summary>
            The instance name of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.WithInstanceName(System.String)">
            <summary>
            Sets the specified module name of this instance. 
            </summary>
            <param key="instanceName">The instance name to consider.</param>
        </member>
        <member name="P:BindOpen.Data.BdoDatasource.Configuration">
            <summary>
            Description of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoDatasource.Configurations">
            <summary>
            Description of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.AddConfig(BindOpen.Extensions.Connectors.IBdoConfiguration)">
            <summary>
            Adds the specified connector config.
            </summary>
            <param key="config">The connector to add.</param>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.RemoveConfig(System.String)">
            <summary>
            Removes the specified connector config.
            </summary>
            <param key="definitionName">The unique ID of the connector definition to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.WithConfig(BindOpen.Extensions.Connectors.IBdoConfiguration[])">
            <summary>
            Sets the specified configs.
            </summary>
            <param key="configs">The configs to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.GetConfig(System.String)">
            <summary>
            Gets the specified connector config.
            </summary>
            <param key="definitionName">The unique ID of the connector definition to consider.</param>
            <returns>The specified connector.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.HasConfig(System.String)">
            <summary>
            Indicates whether this instance has the specified connector config.
            </summary>
            <param key="definitionName">The unique ID of the connector definition to consider.</param>
            <returns>The data source with the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoDatasource.Id">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.WithId(System.String)">
            <summary>
            
            </summary>
            <param key="id"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.BdoDatasource.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDatasource.WithName(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:BindOpen.Data.BdoDictionary" -->
        <member name="M:BindOpen.Data.BdoDictionary.#ctor">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class. 
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.op_Implicit(System.ValueTuple{System.String,System.String}[])~BindOpen.Data.BdoDictionary">
            <summary>
            
            </summary>
            <param key="items"></param>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.op_Implicit(System.String)~BindOpen.Data.BdoDictionary">
            <summary>
            
            </summary>
            <param key="items"></param>
        </member>
        <member name="P:BindOpen.Data.BdoDictionary.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoDictionary.Item(System.String)">
            <summary>
            Text of the specified key.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the specified text.</returns>
        </member>
        <member name="P:BindOpen.Data.BdoDictionary.Item(System.String,System.String)">
            <summary>
            Text of the specified key.
            </summary>
            <param key="key">The key to consider.</param>
            <param key="defaultKey">The default key to consider.</param>
            <returns>Returns the specified text.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Adds a new value to this instance.
            </summary>
            <param key="pairs">The value to add.</param>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Add(System.String)">
            <summary>
            Adds a new value to this instance with the specified key and text.
            </summary>
            <param key="text">The text to consider.</param>
            <returns>Returns the added data key value.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Add(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Adds a new value to this instance with the specified key and text.
            </summary>
            <param key="key">The key to consider.</param>
            <param key="text">The text to consider.</param>
            <param key="availableKeys">The available keys to consider.</param>
            <returns>Returns the added data key value.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Set(System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Adds a new value to this instance.
            </summary>
            <param key="pairs">The value to add.</param>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Set(System.String)">
            <summary>
            Sets the text of the default value.
            </summary>
            <param key="text">The text of the value to add.</param>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Set(System.String,System.String)">
            <summary>
            Sets the text of the default value.
            </summary>
            <param key="key">The key of the value to add.</param>
            <param key="text">The text of the value to add.</param>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Get(System.String,System.String)">
            <summary>
            
            </summary>
            <param key="key"></param>
            <param key="alternateKey"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Remove(System.String[])">
            <summary>
            Removes the value with the specified key.
            </summary>
            <param key="key">The key to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Equals(BindOpen.Data.IBdoDictionary)">
            <summary>
            Indicates whether this intance equals the specified dico.
            </summary>
            <param key="dico">The dictionar to consider.</param>
            <returns>Returns true if this instance equals the specified dico. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.GetCultureInfoItems">
            <summary>
            Returns the culture information sets.
            </summary>
            <returns>Returns information about all the UI cultures.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.GetValue(System.String,System.String)">
            <summary>
            Returns the content corresponding to the specified key.
            </summary>
            <param key="key">The key to consider.</param>
            <param key="alternateKey">The alternate key to used if the key is not found.</param>
            <returns>Returns the text corresponding to the specified user interface language ID.
            Returns empty if there is none.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Clone``1(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <param key="areas">The areas to consider.</param>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.Dispose(System.Boolean)">
            <summary>
            Disposes specifying whether this instance is disposing.
            </summary>
            <param key="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="M:BindOpen.Data.BdoDictionary.WithId(System.String)">
            <summary>
            
            </summary>
            <param key="text"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Data.BdoDictionaryExtension">
            <summary>
            This class represents a dico data item extension.
            </summary>
            <example>Titles, Descriptions.</example>
        </member>
        <member name="M:BindOpen.Data.BdoDictionaryExtension.AsDictionary(System.Object,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class
            from an object.
            </summary>
            <param key="obj">The object to consider.</param>
            <param key="mappings">The mappings to consider.</param>
        </member>
        <member name="T:BindOpen.Data.BdoExpression">
            <summary>
            This class represents a data exp that can contain a literal and script texts.
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoExpression.Text">
            <summary>
            The value of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoExpression.Kind">
            <summary>
            The kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoExpression.Word">
            <summary>
            The script word of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoExpression.#ctor">
            <summary>
            Instantiates a new instance of DataExpression class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoExpression.op_Explicit(BindOpen.Data.BdoExpression)~System.String">
            <summary>
            Converts from string.
            </summary>
            <param key="st">The string to consider.</param>
        </member>
        <member name="M:BindOpen.Data.BdoExpression.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Data.BdoExpressionExtension">
            <summary>
            This class represents a data exp that can contain a literal and script texts.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoExpressionExtension.AsExpression(System.String,BindOpen.Data.BdoExpressionKind)">
            <summary>
            Creates a new literal exp into auto mode.
            </summary>
            <param key="text">The script text to consider.</param>
            <returns>Returns the script exp.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoExpressionExtension.AsExpression(BindOpen.Extensions.Scripting.IBdoScriptword)">
            <summary>
            Creates a new word exp.
            </summary>
            <param key="scriptword">The script word to consider.</param>
            <returns>Returns the script exp.</returns>
        </member>
        <member name="T:BindOpen.Data.BdoExpression">
            <summary>
            This class represents a data reference.
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoExpression.SourceElement">
            <summary>
            Source element of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoExpression.SourceObject">
            <summary>
            Source item of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoExpression.TargetObject">
            <summary>
            Target item of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoExpression.DataHandlerUniqueName">
            <summary>
            The data handler unique name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.BdoExpression.PathDetail">
            <summary>
            The path detail of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoExpression.#ctor">
            <summary>
            Instantiates a new instance of the DataReference class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoExpression.RootElement">
            <summary>
            The root element of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.BdoExpression.GetDatasource">
            <summary>
            Gets the initial data source of this instance.
            </summary>
            <returns>Returns the initial data source of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoExpression.Get(BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            Gets the items from the source of this instance and update the target items.
            </summary>
            <param key="scope">The scope to consider.</param>
            <param key="varSet">The variable element set to use.</param>
            <param key="log">The log to consider.</param>
            <returns>Returns the retrieved items.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoExpression.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Data.BdoExpression.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
            <param key="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Data.TBdoSet`1">
            <summary>
            This class represents a data item set.
            </summary>
            <typeparam name="T">The class of the named data items.</typeparam>
        </member>
        <member name="F:BindOpen.Data.TBdoSet`1._items">
            <summary>
            The items of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.#ctor">
            <summary>
            Instantiates a new instance of the DataList class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.op_Implicit(`0[])~BindOpen.Data.TBdoSet{`0}">
            <summary>
            Converts from string.
            </summary>
            <param key="st">The string to consider.</param>
        </member>
        <member name="P:BindOpen.Data.TBdoSet`1.Items">
            <summary>
            
            </summary>
            <param key="key"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.TBdoSet`1.Count">
            <summary>
            Returns the number of items.
            </summary>
        </member>
        <member name="P:BindOpen.Data.TBdoSet`1.Item(System.Int32)">
            <summary>
            Returns the element with the specified indexed.
            </summary>
        </member>
        <member name="P:BindOpen.Data.TBdoSet`1.Item(System.String)">
            <summary>
            Returns the element with the specified key.
            </summary>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.ClearItems">
            <summary>
            Clears the items of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.Add(`0[])">
            <summary>
            Adds the specified item.
            </summary>
            <param key="items">The items of the item to add.</param>
            <returns>Returns the new item that has been added.
            Returns null if the new item is null or else its name is null.</returns>
            <remarks>The new item must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.Insert(`0)">
            <summary>
            Adds the specified item.
            </summary>
            <param key="item">The item of the item to add.</param>
            <returns>Returns the new item that has been added.
            Returns null if the new item is null or else its name is null.</returns>
            <remarks>The new item must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.With`0[])">
            <summary>
            Sets the specified single item of this instance.
            </summary>
            <param key="items">The items to apply to this instance.</param>
            <remarks>_items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.Remove(System.String[])">
            <summary>
            Removes the item with the specified name.
            </summary>
            <param key="keys">The keys of the item to remove.</param>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.HasItem(System.String)">
            <summary>
            Checks if this instance has an item with the specified name.
            </summary>
            <param key="key">The key of the item to check.</param>
            <returns>Returns true if the instance has an item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.Get(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.Get``1(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.Get``1(System.Int32)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="index">The index to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.ToArray">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.ToList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.GetEnumerator">
            <summary>
            Indicates the enumerator of this instance.
            </summary>
            <returns>Returns the enumerator of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Indicates the enumerator of this instance.
            </summary>
            <returns>Returns the enumerator of this instance.</returns>
        </member>
        <member name="P:BindOpen.Data.TBdoSet`1.Id">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.WithId(System.String)">
            <summary>
            
            </summary>
            <param key="id"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.TBdoSet`1.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Specification.BdoConfigurationSet">
            <summary>
            This class represents the data constraint statement.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.BdoConfigurationSet.#ctor">
            <summary>
            Instantiates a new instance of the BdoConfigurationSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.BdoConfigurationSet.GetConstraint(System.String)">
            <summary>
            Returns the constraint with the specified name.
            </summary>
            <param key="name">The name of the item to return.</param>
            <returns>Returns the item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Data.Specification.BdoConfigurationSet.GetConstraintParameter(System.String,System.String)">
            <summary>
            Returns the constraint parameter.
            </summary>
            <param key="constraintName">The name of the constraint to return.</param>
            <param key="parameterName">The name of the parameter to return.</param>
            <returns>Returns the specified constrainst parameter.</returns>
        </member>
        <member name="M:BindOpen.Data.Specification.BdoConfigurationSet.GetConstraintParameterValue(System.String,System.String)">
            <summary>
            Returns the constraint parameter value.
            </summary>
            <param key="constraintName">The name of the constraint to return.</param>
            <param key="parameterName">The name of the parameter to return.</param>
            <returns>Returns the specified constrainst parameter.</returns>
        </member>
        <member name="M:BindOpen.Data.Specification.BdoConfigurationSet.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Specification.DataSpecification">
            <summary>
            This abstract class represents a data specification.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.#ctor">
            <summary>
            Initializes a new insance of the DataSpecification class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.IsCompatibleWithData(System.Object)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param key="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.ValueType">
            <summary>
            The value type of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.WithDataValueType(BindOpen.Data.DataValueTypes)">
            <summary>
            
            </summary>
            <param key="valueType"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.RequirementLevel">
            <summary>
            The requirement level of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.WithRequirementLevel(BindOpen.Data.RequirementLevels)">
            <summary>
            
            </summary>
            <param key="level"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.AsOptional">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.AsRequired">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.AsForbidden">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.RequirementScript">
            <summary>
            The requirement script of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.InheritanceLevel">
            <summary>
            The level of inheritance of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.SpecificationLevels">
            <summary>
            Levels of specification of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.AccessibilityLevel">
            <summary>
            Level of accessibility of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.WithIndex(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param key="index"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.Id">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.WithId(System.String)">
            <summary>
            
            </summary>
            <param key="id"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.DataSpecification.WithName(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:BindOpen.Data.Specification.DataSpecification.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.Data.Specification.StringSet">
            <summary>
            This class specifies the data value filter.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Specification.StringSet.AddedValues">
            <summary>
            The added values of this instance.
            </summary>
            <remarks>If empty then all the values are added.</remarks>
        </member>
        <member name="P:BindOpen.Data.Specification.StringSet.RemovedValues">
            <summary>
            The removed values of this instance.
            </summary>
            <remarks>If empty then no value is removed.</remarks>
        </member>
        <member name="M:BindOpen.Data.Specification.StringSet.#ctor">
            <summary>
            Instantiates a new instance of the StringSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.StringSet.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates a new instance of the StringSet class specifying the action kind.
            </summary>
            <param key="addedValues">The allowed values to consider.</param>
            <param key="removedValues">The forbidden values to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Specification.StringSet.GetValues(System.Collections.Generic.List{System.String})">
            <summary>
            Gets the values allowed by this instance.
            </summary>
            <param key="allValues">All the values to consider.</param>
            <returns>Returns all the values allowed by this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Specification.StringSet.IsValueAllowed(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Indicates whether the value is allowed by this instance.
            </summary>
            <param key="value">The value to validate.</param>
            <param key="allValues">All the values to consider.</param>
            <returns>Returns True if the specified is validated by this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Specification.StringSet.Repair(System.Collections.Generic.List{System.String})">
            <summary>
            Repairs this instance.
            </summary>
            <param key="allValues">All the values to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Specification.StringSet.Clone(System.String[])">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Data.Specification.StringSetStatement">
            <summary>
            This interface specifies the value filter statement.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Specification.StringSetStatement.Filters">
            <summary>
            Output detail of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Specification.StringSetStatement.#ctor">
            <summary>
            Instantiates a new instance of the StringSetStatement class.
            </summary>
        </member>
        <member name="T:BindOpen.Data.Stores.BdoDataStore">
            <summary>
            This class represents a set of depots.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Stores.BdoDataStore.Depots">
            <summary>
            The set of depots of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStore.#ctor">
            <summary>
            Instantiates a new instance of the BdoDataStore class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStore.Add``1(``0,System.Action{``0})">
            <summary>
            Adds the specified depot executing the specified action.
            </summary>
            <param key="depot">The depot to consider.</param>
            <param key="action">The action to execute on the newly created depot.</param>
            <typeparam name="T">The depot class to consider.</typeparam>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStore.Get``1">
            <summary>
            Gets the depot of the specified type.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStore.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStore.LoadLazy(BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Logging.IBdoLog)">
            <summary>
            Executes the lazy functions of all the depots of this instance.
            </summary>
            <param key="scope">The scope to append.</param>
            <param key="log"></param>
        </member>
        <member name="T:BindOpen.Data.Stores.BdoDataStoreExtensions">
            <summary>
            This class represents an data source extensions.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStoreExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore)">
            <summary>
            Add a datasource depot into the specified data store executing the specified action.
            </summary>
            <param key="dataStore">The data store to consider.</param>
            <returns>Returns the data store to update.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStoreExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoSourceDepot})">
            <summary>
            Add a datasource depot into the specified data store executing the specified action.
            </summary>
            <param key="dataStore">The data store to consider.</param>
            <param key="action">The action to execute on the created depot.</param>
            <returns>Returns the data store to update.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStoreExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoSourceDepot,BindOpen.Logging.IBdoLog})">
            <summary>
            Add a data source depot into the specified data store using the specified options.
            </summary>
            <param key="dataStore">The data store to consider.</param>
            <param key="action">The action to execute on the created depot.</param>
            <returns>Returns the data store to update.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStoreExtensions.GetDatasourceDepot(BindOpen.Data.Stores.IBdoDataStore)">
            <summary>
            Gets the datasource depot of the specified data store.
            </summary>
            <param key="dataStore">The data store to consider.</param>
            <returns>Returns the datasource depot of the specified data store.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDataStoreExtensions.GetDatasourceDepot(BindOpen.Scopes.Scopes.IBdoScope)">
            <summary>
            Gets the datasource depot of the specified scope.
            </summary>
            <param key="scope">The data store to consider.</param>
            <returns>Returns the datasource depot of the specified scope.</returns>
        </member>
        <member name="T:BindOpen.Data.Stores.BdoDatasourceDepot">
            <summary>
            This class represents a data source depot.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceDepot.#ctor">
            <summary>
            Instantiates a new instance of the BdoDatasourceDepot class.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceDepot.Get(System.String)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param key="key">The key to consider.</param>
            <returns>Returns the item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceDepot.GetModuleName(System.String)">
            <summary>
            Returns the module name of the specified data source.
            </summary>
            <param key="sourceName">The name of the data source to consider.</param>
            <returns>The module name corresponding to the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceName(System.String)">
            <summary>
            Returns the instance name of the specified data source.
            </summary>
            <param key="sourceName">The name of the data source to consider.</param>
            <returns>The instance name corresponding to the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)">
            <summary>
            Returns the instance name otherwise module name of the specified data source.
            </summary>
            <param key="sourceName">The name of the data source to consider.</param>
            <returns>The instance name corresponding to the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectorConfiguration(System.String,System.String)">
            <summary>
            Gets the specified connector config.
            </summary>
            <param key="sourceName">The name of the data module to consider.</param>
            <param key="connectorDefinitionUniqueName">The unique ID of the connector definition to consider.</param>
            <returns>The specified connector.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceDepot.HasConnectorConfiguration(System.String,System.String)">
            <summary>
            Indicates whether this instance has the specified connector config.
            </summary>
            <param key="sourceName">The name of the data module to consider.</param>
            <param key="connectorDefinitionUniqueName">The unique ID of the connector definition to consider.</param>
            <returns>The data source with the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectionString(System.String,System.String)">
            <summary>
            Returns the connection string corresponding to the specified config.
            </summary>
            <param key="sourceName">The name of the data source to consider.</param>
            <param key="connectorDefinitionUniqueName">The connector unique name to consider.</param>
            <returns>The connection string corresponding to the specified data module name.</returns>
        </member>
        <member name="T:BindOpen.Data.Stores.TBdoDepot`1">
            <summary>
            This class represents a depot.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.TBdoDepot`1.#ctor">
            <summary>
            Instantiates a new instance of the TBdoDepot class.
            </summary>
        </member>
        <member name="P:BindOpen.Data.Stores.TBdoDepot`1.Scope">
            <summary>
            The scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.TBdoDepot`1.WithId(System.String)">
            <summary>
            
            </summary>
            <param key="id"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Data.Stores.TBdoDepot`1.LazyLoadFunction">
            <summary>
            The initialization function of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.Logging.IBdoLog)">
            <summary>
            Add the items from all the assemblies.
            </summary>
            <param key="log">The log to append.</param>
        </member>
        <member name="M:BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.Logging.IBdoLog)">
            <summary>
            Add the items from the specified assembly.
            </summary>
            <param key="assemblyName">The name of the assembly.</param>
            <param key="log">The log to append.</param>
        </member>
        <member name="M:BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.Logging.IBdoLog)">
            <summary>
            Add the items from the assembly of the specified type.
            </summary>
            <param key="log">The log to append.</param>
        </member>
        <member name="M:BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.Logging.IBdoLog)">
            <summary>
            Loads this instance.
            </summary>
            <param key="log">The log to append.</param>
        </member>
        <member name="T:BindOpen.Data.AccessibilityLevelExtension">
            <summary>
            This class represents an accessibility level extension.
            </summary>
        </member>
        <member name="M:BindOpen.Data.AccessibilityLevelExtension.ToAccessibilityLevel(System.String,System.String)">
            <summary>
            Gets the accessibility level corresponding to the specified string.
            </summary>
            <param key="levelString">The visibility to consider.</param>
            <param key="defaultLevelString">The default visibility to consider.</param>
            <returns>Returns the visibility corresponding to the specified strings.</returns>
        </member>
    </members>
</doc>
