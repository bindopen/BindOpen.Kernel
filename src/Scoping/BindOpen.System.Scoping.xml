<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BindOpen.System.Scoping</name>
    </assembly>
    <members>
        <member name="T:BindOpen.System.Scoping.Application.AppDomainPool">
            <summary>
            This class represents an assembly pool.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Application.AppDomainPool.#ctor">
            <summary>
            Instantiates a new instance of AppDomainPool class.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Application.AppDomainPool.GetAppDomain(System.String)">
            <summary>
            Gets the specified application domain.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.Application.AppDomainPoolExtensions">
            <summary>
            This class represents an assembly pool.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Application.AppDomainPoolExtensions.LoadAssemblyFromFile(System.AppDomain,System.String,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Gets the assembly of this instance from file.
            </summary>
            <param key="appDomain">Application domain to consider.</param>
            <param key="filePath">Path of the file to use.</param>
            <param key="log">The loading log to consider.</param>
            <returns>The assembly of this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Application.AppDomainPoolExtensions.LoadAssembly(System.AppDomain,BindOpen.System.Data.Assemblies.IBdoAssemblyReference,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Gets the assembly of this instance from embed resource.
            </summary>
            <param key="appDomain">Application domain to consider.</param>
            <param key="assemblyName">The assembly name to use.</param>
            <param key="log">The loading log to consider.</param>
            <returns>The assembly of this instance.</returns>
        </member>
        <member name="T:BindOpen.System.Scoping.Application.AssemblyResolver">
            <summary>
            This class represents an assembly resolver.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Application.AssemblyResolver.Resolve(System.AppDomain)">
            <summary>
            Resolves the domain i.e. initializes the assembly resolving routines.
            </summary>
            <param key="appDomain">The domain to consider.</param>
        </member>
        <member name="T:BindOpen.System.Scoping.Stores.BdoExtensionStore">
            <summary>
            This class represents a BindOpen extension item store.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStore.#ctor">
            <summary>
            Instantiates a new instance of the BdoExtensionStore class.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStore.GetDefinitions``1">
            <summary>
            Returns the item definitions of this instance.
            </summary>
            <returns>The item words of specified library names.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStore.GetDefinition``1(System.String)">
            <summary>
            
            </summary>
            <param key="uniqueName"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStore.GetDefinition(BindOpen.System.Scoping.BdoExtensionKind,System.String)">
            <summary>
            Returns the item definition with the specified unique name.
            </summary>
            <param key="uniqueName">The unique ID of item to return.</param>
            <returns>The item with the specified unique name.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStore.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStore.Add(BindOpen.System.Scoping.IBdoExtensionDefinition)">
            <summary>
            Adds the specified definition.
            </summary>
            <typeparam name="T">The BindOpen extension item definition class to consider.</typeparam>
            <param key="definition">The definition to add.</param>
        </member>
        <member name="P:BindOpen.System.Scoping.Stores.BdoExtensionStore.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader">
            <summary>
            This class represents a extension scope loader.
            </summary>
            <summary>
            This class represents a extension scope loader.
            </summary>
            <summary>
            This class represents a extension scope loader.
            </summary>
            <summary>
            This class represents a extension scope loader.
            </summary>
            <summary>
            This class represents a extension scope loader.
            </summary>
            <summary>
            This class represents a extension scope loader.
            </summary>
            <summary>
            This class represents a extension scope loader.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.#ctor(System.AppDomain,BindOpen.System.Scoping.Stores.IBdoExtensionStore,BindOpen.System.Scoping.IExtensionLoadOptions)">
            <summary>
            Initializes a new instance of BdoExtensionStoreLoader the class.
            </summary>
            <param key="appDomain">The application domain to consider.</param>
            <param key="store">The extension store to consider.</param>
            <param key="loadOptions">The load options to consider.</param>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.LoadPackages(BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the specified extensions into the specified scope.
            </summary>
            <param key="references">The library references to consider.</param>
            <param key="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.LoadPackage(BindOpen.System.Data.Assemblies.IBdoAssemblyReference,System.Collections.Generic.List{System.String},BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the specified library.
            </summary>
            <param key="libraryReference">The library reference to consider.</param>
            <param key="log">The log to consider.</param>
            <returns>Returns the loaded library.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
            <param key="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.LoadDictionary(System.Reflection.Assembly,BindOpen.System.Scoping.BdoExtensionKind,BindOpen.System.Scoping.IBdoPackageDefinition,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the extension dico of the specified kind from the specified assembly.
            </summary>
            <param key="assembly">The assembly to consider.</param>
            <param key="kind">The kind of item to consider.</param>
            <param key="packageDefinition">The extension definition to consider.</param>
            <param key="log">The log to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.ExtractDictionaryFromAssembly``1(System.Reflection.Assembly,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the specified BindOpen extension dico.
            </summary>
            <param key="assembly">The assembly to consider.</param>
            <param key="log">The log to consider.</param>
            <returns>The created library.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.GetDictionaryResourceName``1">
            <summary>
            Gets the dico resource name.
            </summary>
            <returns>Returns the class of the specified dico.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.GetDictionaryType``1">
            <summary>
            Gets the item definition file name of the TO specified extension item definition class.
            </summary>
            <returns>Returns the class of the specified dico.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.LoadConnectorDictionaryFromAssembly(System.Reflection.Assembly,BindOpen.System.Scoping.IBdoPackageDefinition,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the connector dico from the specified assembly.
            </summary>
            <param key="assembly">The assembly to consider.</param>
            <param key="packageDefinition">The extension definition to consider.</param>
            <param key="log">The log to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.LoadEntityDictionaryFromAssembly(System.Reflection.Assembly,BindOpen.System.Scoping.IBdoPackageDefinition,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the entity dico from the specified assembly.
            </summary>
            <param key="assembly">The assembly to consider.</param>
            <param key="packageDefinition">The extension definition to consider.</param>
            <param key="log">The log to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.LoadFunctionDictionaryFromAssembly(System.Reflection.Assembly,BindOpen.System.Scoping.IBdoPackageDefinition,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the function dico from the specified assembly.
            </summary>
            <param key="assembly">The assembly to consider.</param>
            <param key="packageDefinition">The extension definition to consider.</param>
            <param key="log">The log to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.LoadTaskDictionaryFromAssembly(System.Reflection.Assembly,BindOpen.System.Scoping.IBdoPackageDefinition,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the task dico from the specified assembly.
            </summary>
            <param key="assembly">The assembly to consider.</param>
            <param key="packageDefinition">The extension definition to consider.</param>
            <param key="log">The log to consider.</param>
            <returns></returns>
        </member>
        <member name="F:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.__DefaultResourceFileName">
            <summary>
            The default resource file name for library definition.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.Stores.BdoExtensionStoreLoader.ExtractPackageDefinition(System.Reflection.Assembly,System.String,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Extract extension definition from the specified assembly.
            </summary>
            <param key="assembly">The assembly to consider.</param>
            <param key="resourceFullName">The full name of the resouce to consider.</param>
            <param key="log">The log to consider.</param>
            <returns>The created library.</returns>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoScope">
            <summary>
            This class represents an application scope.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScope.#ctor(System.AppDomain)">
            <summary>
            Instantiates a new instance of the BdoScope class.
            </summary>
            <param key="appDomain">The application domain to instance.</param>
        </member>
        <member name="P:BindOpen.System.Scoping.BdoScope.AppDomain">
            <summary>
            The application domain.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.BdoScope.ExtensionStore">
            <summary>
            The BindOpen extension store of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.BdoScope.DataStore">
            <summary>
            The data store of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScope.CreateType(BindOpen.System.Data.Assemblies.IBdoClassReference,BindOpen.System.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="reference"></param>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScope.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScope.Check(System.Boolean,System.Boolean,BindOpen.System.Logging.IBdoLog)">
            <summary>
            Check the specified item.
            </summary>
            <param key="checkExtensionStore">Indicates whether the extension item definition store extistence is chekced.</param>
            <param key="checkDataContext">Indicates whether the data context extistence is chekced.</param>
            <param key="checkDataStore">Indicates whether the data store extistence is chekced.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoScopeExtensions">
            <summary>
            This static class provides methods to create extension items.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScopeExtensions.CreateConnected``1(BindOpen.System.Scoping.IBdoScope,BindOpen.System.Scoping.IBdoConnector)">
            <summary>
            Creates a new connected service.
            </summary>
            <param key="scope"></param>
            <param key="connector"></param>
            <typeparam name="T"></typeparam>
            <returns>Returns the log of the operation.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScopeExtensions.LoadExtensions``1(``0,System.Action{BindOpen.System.Scoping.IExtensionLoadOptions},BindOpen.System.Logging.IBdoLog)">
            <summary>
            Loads the specified extensions.
            </summary>
            <param key="loadOptionsAction">The load options action to consider.</param>
            <param key="references">The extension references to consider.</param>
        </member>
        <member name="T:BindOpen.System.Scoping.ExtensionLoadOptions">
            <summary>
            This class represents the extension loading options.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.ExtensionLoadOptions.Sources">
            <summary>
            The source kinds of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.ExtensionLoadOptions.ExtensionKinds">
            <summary>
            The extension kinds of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.System.Scoping.ExtensionLoadOptions.References">
            <summary>
            The assmbly references of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.ExtensionLoadOptions.#ctor">
            <summary>
            Instantiates a new instance of the ExtensionLoadOptions class.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoScoping">
            <summary>
            This static class provides methods to create objects.
            </summary>
            <summary>
            This class represents an scope factory.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScoping.NewEntityDefinition(BindOpen.System.Scoping.IBdoPackageDefinition,System.String)">
            <summary>
            Creates the instance of the specified definition.
            </summary>
            <param key="extensionDefinition">The extension definition DTO to consider.</param>
            <param key="name">The name of the definition DTO to consider.</param>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScoping.NewConnectorDefinition(BindOpen.System.Scoping.IBdoPackageDefinition,System.String)">
            <summary>
            Creates the instance of the specified definition DTO.
            </summary>
            <param key="extensionDefinition">The extension definition DTO to consider.</param>
            <param key="name">The name of the definition DTO to consider.</param>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScoping.NewTaskDefinition(BindOpen.System.Scoping.IBdoPackageDefinition,System.String)">
            <summary>
            Creates the instance of the specified definition.
            </summary>
            <param key="extensionDefinition">The extension definition DTO to consider.</param>
            <param key="name">The name of the definition DTO to consider.</param>
        </member>
        <member name="M:BindOpen.System.Scoping.BdoScoping.NewScope(System.AppDomain)">
            <summary>
            Creates a new scope.
            </summary>
            <param key="appDomain">The application domain to consider.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="T:BindOpen.System.Scoping.BdoElementChecker">
            <summary>
            This static class provides methods to check data elements.
            </summary>
        </member>
        <member name="T:BindOpen.System.Scoping.ExtensionLoadOptionsExtensions">
            <summary>
            This class represents a data element set.
            </summary>
        </member>
        <member name="M:BindOpen.System.Scoping.ExtensionLoadOptionsExtensions.AddSource``1(``0,BindOpen.System.Data.DatasourceKind,System.String)">
            <summary>
            Sets the source kinds of this instance.
            </summary>
            <param key="sourceKinds">The source kinds to consider.</param>
            <returns>Returns this instance.</returns>
        </member>
        <member name="M:BindOpen.System.Scoping.ExtensionLoadOptionsExtensions.WithExtensionKinds``1(``0,BindOpen.System.Scoping.BdoExtensionKind[])">
            <summary>
            Sets the source kinds of this instance.
            </summary>
            <param key="sourceKinds">The source kinds to consider.</param>
            <returns>Returns this instance.</returns>
        </member>
    </members>
</doc>
