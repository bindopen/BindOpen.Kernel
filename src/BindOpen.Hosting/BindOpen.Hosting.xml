<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BindOpen.Hosting</name>
    </assembly>
    <members>
        <member name="T:BindOpen.Scopes.Configuration.BdoHostConfiguration">
            <summary>
            This class represents a BindOpen host config.
            </summary>
        </member>
        <member name="M:BindOpen.Scopes.Configuration.BdoHostConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the BdoHostConfiguration class.
            </summary>
        </member>
        <member name="T:BindOpen.Hosting.BdoHosting">
            <summary>
            This static class is a factory for BindOpen hosts.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.BdoHosting.NewHost(BindOpen.Logging.IBdoLog)">
            <summary>
            Adds a BindOpen host.
            </summary>
            <param key="setupAction">The setup action to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Hosting.BdoHosting.NewHost(System.Action{BindOpen.Hosting.Hosts.IBdoHostOptions},BindOpen.Logging.IBdoLog)">
            <summary>
            Adds a BindOpen host.
            </summary>
            <param key="setupAction">The setup action to consider.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Hosting.Hosts.BdoHost">
            <summary>
            This class represents a host.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.#ctor(BindOpen.Logging.IBdoLog)">
            <summary>
            Instantiates a new instance of the BdoHost class.
            </summary>
            <param key="log"></param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.WithExecutionState(BindOpen.Data.ProcessExecutionState)">
            <summary>
            
            </summary>
            <param key="state"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.WithExecutionStatus(BindOpen.Data.ProcessExecutionStatus)">
            <summary>
            
            </summary>
            <param key="status"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHost.Options">
            <summary>
            The options of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.WithOptions(BindOpen.Hosting.Hosts.IBdoHostOptions)">
            <summary>
            Sets the specfied options
            </summary>
            <param key="options"></param>
            <returns>Returns this instance.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.Run(System.Action{BindOpen.Hosting.Hosts.IBdoHost})">
            <summary>
            Runs the specified action.
            </summary>
            <param key="action">The action to consider.</param>
            <returns>Returns this instance.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.Start">
            <summary>
            Starts the application.
            </summary>
            <returns>Returns true if this instance is started.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.Process">
            <summary>
            Processes the application.
            </summary>
            <returns>Returns true if this instance is started.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.End(BindOpen.Data.ProcessExecutionStatus)">
            <summary>
            Indicates the application ends.
            </summary>
            <param key="executionStatus">The execution status to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.Configure(System.Action{BindOpen.Hosting.Hosts.IBdoHostOptions})">
            <summary>
            Configures the application host.
            </summary>
            <param key="setupOptions">The action to setup the application host.</param>
            <returns>Returns the application host.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.StartSucceeds">
            <summary>
            Indicates that this instance has successfully started.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.StartFails">
            <summary>
            Indicates that this instance has not successfully started.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.ExecutionSucceeds">
            <summary>
            Indicates that this instance completes.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.ExecutionFails">
            <summary>
            Indicates that this instance fails.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.GetKnownPath(BindOpen.Hosting.Hosts.BdoHostPathKind)">
            <summary>
            Returns the path of the application temporary folder.
            </summary>
            <param key="pathKind">The kind of paths.</param>
            <returns>The path of the application temporary folder.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.Initialize">
            <summary>
            Initializes information.
            </summary>
            <returns>Returns the log of the task.</returns>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHost.AppDomain">
            <summary>
            The application domain of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHost.ExtensionStore">
            <summary>
            The extension store of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHost.DataStore">
            <summary>
            The data store of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHost.Context">
            <summary>
            The context of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.LoadExtensions(BindOpen.Scopes.References.IBdoAssemblyReference[],BindOpen.Logging.IBdoLog)">
            <summary>
            Loads the specified extensions.
            </summary>
            <param key="references">The extension references to consider.</param>
            <param key="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.LoadExtensions(System.Func{BindOpen.Scopes.Scopes.IExtensionLoadOptions,System.Boolean},BindOpen.Scopes.References.IBdoAssemblyReference[],BindOpen.Logging.IBdoLog)">
            <summary>
            Loads the specified extensions.
            </summary>
            <param key="loadOptionsAction">The load options action to consider.</param>
            <param key="references">The extension references to consider.</param>
            <param key="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHost.NewScriptInterpreter">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Hosting.Hosts.BdoHostOptions">
            <summary>
            This class represents a host options.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.Settings">
            <summary>
            The host settings of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.SettingsFilePath">
            <summary>
            The host config file path.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.IsSettingsFileRequired">
            <summary>
            Indicates whether the host settings file must exist.
            </summary>
            <remarks>If it does not exist then an exception is thrown.</remarks>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.RootFolderPath">
            <summary>
            The root folder path.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.RootFolderPathDefinitions">
            <summary>
            The root folder path.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.ExtensionReferences">
            <summary>
            The extension loading options.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.ExtensionLoadOptions">
            <summary>
            The extension loading options.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.LoggerInit">
            <summary>
            The logger initialization function of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.Action_OnStartSuccess">
            <summary>
            The action that the start of this instance completes.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.Action_OnStartFailure">
            <summary>
            The action that the start of this instance fails.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.Action_OnExecutionSucess">
            <summary>
            The action that this instance completes.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.Action_OnExecutionFailure">
            <summary>
            The action that is executed when the instance fails.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostOptions.DataStore">
            <summary>
            The data store of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.#ctor">
            <summary>
            Instantiates a new instance of the BdoHostOptions class.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.Update``1(``0,System.String[],BindOpen.Data.UpdateModes[],BindOpen.Logging.IBdoLog)">
            <summary>
            Updates this instance.
            </summary>
            <param key="item">The item to consider.</param>
            <param key="specificationAreas">The specification areas to consider.</param>
            <param key="updateModes">The update modes to consider.</param>
            <returns>The log of the operation.</returns>
            <remarks>Put reference sets as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.SetRootFolder(System.Predicate{BindOpen.Hosting.Hosts.IBdoHostOptions},System.String)">
            <summary>
            Set the root folder.
            </summary>
            <param key="predicate">The condition that must be satisfied.</param>
            <param key="rootFolderPath">The root folder path.</param>
            <returns>Returns the host option.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.SetRootFolder(System.String)">
            <summary>
            Sets the specified root folder path.
            </summary>
            <param key="path">The path to consider.</param>
            <returns>Returns this instance.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.AddExtensions(System.Action{BindOpen.Scopes.References.IBdoAssemblyReferenceCollection},System.Action{BindOpen.Scopes.Scopes.IExtensionLoadOptions})">
            <summary>
            Adds the extensions.
            </summary>
            <param key="action">The action for adding extensions.</param>
            <param key="loadOptionsAction">The action for loading options.</param>
            <returns>Returns the host option.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.SetSettings(System.Action{BindOpen.Hosting.Hosts.IBdoHostSettings})">
            <summary>
            Sets the host settings applying action on it.
            </summary>
            <param key="hostSettings">The host settings to consider.</param>
            <param key="action">The action to apply on the settings.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.SetSettingsFile(System.String,System.Nullable{System.Boolean})">
            <summary>
            Set the specified host settings file path.
            </summary>
            <param key="path">The settings file path.</param>
            <param key="isRequired">Indicates whether the host settings file is required.</param>
            <returns>Returns the host option.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.SetSettingsFile(System.Nullable{System.Boolean})">
            <summary>
            Set the specified host settings file path.
            </summary>
            <param key="path">The settings file path.</param>
            <param key="isRequired">Indicates whether the host settings file is required.</param>
            <returns>Returns the host option.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.SetLogger(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Adds the specified logger.
            </summary>
            <param key="factory">The logger factory to consider.</param>
            <returns>Returns the host option.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.SetLogger(System.Func{BindOpen.Hosting.Hosts.IBdoHost,Microsoft.Extensions.Logging.ILogger})">
            <summary>
            Adds the specified logger.
            </summary>
            <param key="initLogger">The logger initialization to consider.</param>
            <returns>Returns the host option.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.ExecuteOnStartSuccess(System.Action{BindOpen.Hosting.Hosts.IBdoHost})">
            <summary>  
            The action that is executed when the start of this instance succedes.
            </summary>
            <param key="action">The action to execute.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.ExecuteOnStartFailure(System.Action{BindOpen.Hosting.Hosts.IBdoHost})">
            <summary>
            The action that is executed when the start of this instance fails.
            </summary>
            <param key="action">The action to execute.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.ExecuteOnExecutionSuccess(System.Action{BindOpen.Hosting.Hosts.IBdoHost})">
            <summary>
            The action that is executed when this instance is successfully completed.
            </summary>
            <param key="action">The action to execute.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.ExecuteOnExecutionFailure(System.Action{BindOpen.Hosting.Hosts.IBdoHost})">
            <summary>
            The action that is executed when this instance execution fails.
            </summary>
            <param key="action">The action to execute.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.ThrowExceptionOnStartFailure(System.Boolean)">
            <summary>
            Throws an exception when start fails.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.ThrowExceptionOnExecutionFailure(System.Boolean)">
            <summary>
            Throws an exception when start fails.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.AddDataStore(System.Action{BindOpen.Data.Stores.IBdoDataStore})">
            <summary>
            Adds the data store executing the specified action.
            </summary>
            <param key="action">The action to execute on the created data store.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostOptions.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
            <param key="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Hosting.Hosts.BdoDefaultHostPaths">
            <summary>
            This static class contains the default option values.
            </summary>
        </member>
        <member name="F:BindOpen.Hosting.Hosts.BdoDefaultHostPaths.__DefaultHostConfigFileName">
            <summary>
            The default host settings file name
            </summary>
        </member>
        <member name="F:BindOpen.Hosting.Hosts.BdoDefaultHostPaths.__DefaultLibraryFolderPath">
            <summary>
            The default library folder path.
            </summary>
        </member>
        <member name="T:BindOpen.Hosting.Hosts.BdoHostSettings">
            <summary>
            This class represents a BindOpen host settings.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Hosts.BdoHostSettings.LibraryFolderPath">
            <summary>
            The library folder path of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostSettings.#ctor">
            <summary>
            Instantiates a new instance of the BdoHostSettings class.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostSettings.#ctor(BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Abstractions.Meta.Configuration.IBdoConfiguration)">
            <summary>
            Instantiates a new instance of the BdoHostSettings class.
            </summary>
            <param key="scope">The scope to consider.</param>
            <param key="config">The config to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Hosts.BdoHostSettings.WithLibraryFolder(System.String)">
            <summary>
            Sets the library folder path.
            </summary>
            <param key="libraryFolderPath"></param>
            <returns>Returns this instance.</returns>
        </member>
        <member name="T:BindOpen.Hosting.Services.BdoJob">
            <summary>
            This class represents an bot.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.#ctor(BindOpen.Logging.IBdoLog)">
            <summary>
            Instantiates a new instance of the BdoJob class.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Services.BdoJob.Id">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.WithId(System.String)">
            <summary>
            
            </summary>
            <param key="id"></param>
            <returns></returns>
        </member>
        <member name="P:BindOpen.Hosting.Services.BdoJob.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.WithName(System.String)">
            <summary>
            
            </summary>
            <param key="name"></param>
            <returns></returns>
        </member>
        <member name="F:BindOpen.Hosting.Services.BdoJob._isLoaded">
            <summary>
            Indicates whether this instance is loaded.
            </summary>
            <remarks>The value can be assigned.</remarks>
        </member>
        <member name="P:BindOpen.Hosting.Services.BdoJob.IsLoaded">
            <summary>
            Indicates whether the platform information is loaded.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Services.BdoJob.Scope">
            <summary>
            The scope of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Services.BdoJob.Logger">
            <summary>
            The logger of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Services.BdoJob.ExecutionState">
            <summary>
            The current execution state of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Services.BdoJob.ExecutionStatus">
            <summary>
            The current execution status of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Services.BdoJob.AppDomainPool">
            <summary>
            Application domain pool of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Services.BdoJob.Log">
            <summary>
            ILog of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.WithLogger(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Starts the application.
            </summary>
            <returns>Returns true if this instance is started.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.WithExecutionState(BindOpen.Data.ProcessExecutionState)">
            <summary>
            
            </summary>
            <param key="state"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.WithExecutionStatus(BindOpen.Data.ProcessExecutionStatus)">
            <summary>
            
            </summary>
            <param key="status"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.Start">
            <summary>
            Starts the application.
            </summary>
            <returns>Returns true if this instance is started.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.Process">
            <summary>
            Processes the application.
            </summary>
            <param key="log">The log to consider.</param>
            <returns>Returns true if this instance is started.</returns>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.End(BindOpen.Data.ProcessExecutionStatus)">
            <summary>
            Indicates the application ends.
            </summary>
            <param key="executionStatus">The execution status to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Services.BdoJob.Initialize">
            <summary>
            Initializes information.
            </summary>
            <returns>Returns the log of the task.</returns>
        </member>
        <member name="T:BindOpen.Hosting.Settings.BdoSettings">
            <summary>
            This class represents a config.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Settings.BdoSettings.#ctor">
            <summary>
            Instantiates a new instance of the TBdoSettings class.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Settings.BdoSettings.#ctor(BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Abstractions.Meta.Configuration.IBdoConfiguration)">
            <summary>
            Instantiates a new instance of the TBdoSettings class.
            </summary>
            <param key="scope">The scope to consider.</param>
            <param key="config">The config to consider.</param>
        </member>
        <member name="P:BindOpen.Hosting.Settings.BdoSettings.Scope">
            <summary>
            The application scope of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Hosting.Settings.BdoSettings.Configuration">
            <summary>
            The item of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Hosting.Settings.BdoSettings.Key">
            <summary>
            Returns the key of this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Hosting.Settings.BdoSettings.Get``1(System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <typeparam name="T"></typeparam>
            <param key="name">The name to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Settings.BdoSettings.Get(System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param key="name">The name to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Settings.BdoSettings.GetProperty``1(System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <typeparam name="T"></typeparam>
            <param key="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Settings.BdoSettings.GetProperty``1(``0,System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <typeparam name="T"></typeparam>
            <param key="defaultValue">The default value to consider.</param>
            <param key="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Settings.BdoSettings.SetProperty(System.Object,System.String)">
            <summary>
            Sets the specified value.
            </summary>
            <param key="value">The value to set.</param>
            <param key="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Hosting.Settings.BdoSettings.Dispose(System.Boolean)">
            <summary>
            Disposes this instance. 
            </summary>
            <param key="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Data.Stores.BdoDatasourceExtensions">
            <summary>
            This class represents an data source extensions.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConnectionStrings(BindOpen.Data.Stores.IBdoSourceDepot,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Adds sources from connection strings.
            </summary>
            <param key="depot">The datasource depot to consider.</param>
            <param key="config">The config to consider.</param>
            <param key="keyName">The key name to consider.</param>
        </member>
        <member name="T:BindOpen.Data.Stores.BdoScopingDatasourceExtensions">
            <summary>
            This class represents a runtime data source extensions.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoScopingDatasourceExtensions.AddDatasource(BindOpen.Data.Stores.IBdoSourceDepot,BindOpen.Data.BdoDatasource)">
            <summary>
            Adds the specified source.
            </summary>
            <param key="depot">The depot to consider.</param>
            <param key="datasource">The datasource to consider.</param>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.BindOpenServiceCollectionExtensions_Hosts">
            <summary>
            This static class extends .Net core dependency injection namespace.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BindOpenServiceCollectionExtensions_Hosts.AddBindOpen(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BindOpen.Hosting.Hosts.IBdoHostOptions},BindOpen.Logging.IBdoLog)">
            <summary>
            Adds a BindOpen default service.
            </summary>
            <param key="services">The set of services to populate.</param>
            <param key="setupAction">The setup action to consider.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions">
            <summary>
            This static class extends .Net core dependency injection namespace.
            </summary>
            <summary>
            This static class extends .Net core dependency injection namespace.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddSingletonBdoScope``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{BindOpen.Hosting.Hosts.IBdoHost,``0})">
            <summary>
            Adds a BidnOpen hosted service as singleton.
            </summary>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param key="services">The set of services to populate.</param>
            <param key="setupAction">The setup action to consider.</param>
            <returns>Returns the updated service set.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddScopedBdoScope``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{BindOpen.Hosting.Hosts.IBdoHost,``0})">
            <summary>
            Adds a BidnOpen scoped service as scoped.
            </summary>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param key="services">The set of services to populate.</param>
            <param key="setupAction">The setup action to consider.</param>
            <returns>Returns the updated service set.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddTransientBdoScope``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{BindOpen.Hosting.Hosts.IBdoHost,``0})">
            <summary>
            Adds a BidnOpen scoped service as transient.
            </summary>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param key="services">The set of services to populate.</param>
            <param key="setupAction">The setup action to consider.</param>
            <returns>Returns the updated service set.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBdoScope``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.Func{BindOpen.Hosting.Hosts.IBdoHost,``0})">
            <summary>
            Adds a BidnOpen hosted service.
            </summary>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param key="services">The set of services to populate.</param>
            <param key="setupAction">The setup action to consider.</param>
            <param key="serviceLifetime">The service life time to consider.</param>
            <returns>Returns the updated service set.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddSingletonBdoService``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{BindOpen.Hosting.Hosts.IBdoHost,``1})">
            <summary>
            Adds a BidnOpen hosted service as singleton.
            </summary>
            <typeparam name="TService">The interface of BindOpen hosted service to consider.</typeparam>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param key="services">The set of services to populate.</param>
            <param key="setupAction">The setup action to consider.</param>
            <returns>Returns the updated service set.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddScopedBdoService``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{BindOpen.Hosting.Hosts.IBdoHost,``1})">
            <summary>
            Adds a BidnOpen scoped service as scoped.
            </summary>
            <typeparam name="TService">The interface of BindOpen hosted service to consider.</typeparam>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param key="services">The set of services to populate.</param>
            <param key="setupAction">The setup action to consider.</param>
            <returns>Returns the updated service set.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddTransientBdoService``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{BindOpen.Hosting.Hosts.IBdoHost,``1})">
            <summary>
            Adds a BidnOpen scoped service as transient.
            </summary>
            <typeparam name="TService">The interface of BindOpen hosted service to consider.</typeparam>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param key="services">The set of services to populate.</param>
            <param key="setupAction">The setup action to consider.</param>
            <returns>Returns the updated service set.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBdoService``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.Func{BindOpen.Hosting.Hosts.IBdoHost,``1})">
            <summary>
            Adds a BidnOpen hosted service.
            </summary>
            <typeparam name="TService">The interface of BindOpen hosted service to consider.</typeparam>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param key="services">The set of services to populate.</param>
            <param key="setupAction">The setup action to consider.</param>
            <param key="serviceLifetime">The service life time to consider.</param>
            <returns>Returns the updated service set.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationExtension">
            <summary>
            This static class extends .Net core config.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtension.GetBdoValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param key="config"></param>
            <param key="key"></param>
            <param key="scope"></param>
            <param key="varSet"></param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtension.GetBdoValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String,BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param key="config"></param>
            <param key="key"></param>
            <param key="defaultValue"></param>
            <param key="scope"></param>
            <param key="scriptVariableSet">The script variable set to consider.</param>
            <param key="log"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtension.GetBdoValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)">
            <summary>
            
            </summary>
            <param key="config"></param>
            <param key="type"></param>
            <param key="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtension.GetBdoValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.String,BindOpen.Scopes.Scopes.IBdoScope,BindOpen.Data.Elements.IBdoElementSet,BindOpen.Logging.IBdoLog)">
            <summary>
            
            </summary>
            <param key="config"></param>
            <param key="type"></param>
            <param key="key"></param>
            <param key="defaultValue"></param>
            <param key="scope"></param>
            <param key="varSet">The script variable set to consider.</param>
            <param key="log"></param>
            <returns></returns>
        </member>
    </members>
</doc>
